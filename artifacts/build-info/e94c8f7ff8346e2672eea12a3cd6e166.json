{
  "id": "e94c8f7ff8346e2672eea12a3cd6e166",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.4.17",
  "solcLongVersion": "0.4.17+commit.bdeb9e52",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/test/TetherToken.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.4.17;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    address public owner;\n\n    /**\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n      * account.\n      */\n    function Ownable() public {\n        owner = msg.sender;\n    }\n\n    /**\n      * @dev Throws if called by any account other than the owner.\n      */\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    /**\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\n    * @param newOwner The address to transfer ownership to.\n    */\n    function transferOwnership(address newOwner) public onlyOwner {\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n\n}\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20Basic {\n    uint public _totalSupply;\n    function totalSupply() public constant returns (uint);\n    function balanceOf(address who) public constant returns (uint);\n    function transfer(address to, uint value) public;\n    event Transfer(address indexed from, address indexed to, uint value);\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) public constant returns (uint);\n    function transferFrom(address from, address to, uint value) public;\n    function approve(address spender, uint value) public;\n    event Approval(address indexed owner, address indexed spender, uint value);\n}\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is Ownable, ERC20Basic {\n    using SafeMath for uint;\n\n    mapping(address => uint) public balances;\n\n    // additional variables for use if transaction fees ever became necessary\n    uint public basisPointsRate = 0;\n    uint public maximumFee = 0;\n\n    /**\n    * @dev Fix for the ERC20 short address attack.\n    */\n    modifier onlyPayloadSize(uint size) {\n        require(!(msg.data.length < size + 4));\n        _;\n    }\n\n    /**\n    * @dev transfer token for a specified address\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\n        if (fee > maximumFee) {\n            fee = maximumFee;\n        }\n        uint sendAmount = _value.sub(fee);\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(sendAmount);\n        if (fee > 0) {\n            balances[owner] = balances[owner].add(fee);\n            Transfer(msg.sender, owner, fee);\n        }\n        Transfer(msg.sender, _to, sendAmount);\n    }\n\n    /**\n    * @dev Gets the balance of the specified address.\n    * @param _owner The address to query the the balance of.\n    * @return An uint representing the amount owned by the passed address.\n    */\n    function balanceOf(address _owner) public constant returns (uint balance) {\n        return balances[_owner];\n    }\n\n}\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is BasicToken, ERC20 {\n\n    mapping (address => mapping (address => uint)) public allowed;\n\n    uint public constant MAX_UINT = 2**256 - 1;\n\n    /**\n    * @dev Transfer tokens from one address to another\n    * @param _from address The address which you want to send tokens from\n    * @param _to address The address which you want to transfer to\n    * @param _value uint the amount of tokens to be transferred\n    */\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\n        var _allowance = allowed[_from][msg.sender];\n\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\n        // if (_value > _allowance) throw;\n\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\n        if (fee > maximumFee) {\n            fee = maximumFee;\n        }\n        if (_allowance < MAX_UINT) {\n            allowed[_from][msg.sender] = _allowance.sub(_value);\n        }\n        uint sendAmount = _value.sub(fee);\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(sendAmount);\n        if (fee > 0) {\n            balances[owner] = balances[owner].add(fee);\n            Transfer(_from, owner, fee);\n        }\n        Transfer(_from, _to, sendAmount);\n    }\n\n    /**\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n    * @param _spender The address which will spend the funds.\n    * @param _value The amount of tokens to be spent.\n    */\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\n\n        // To change the approve amount you first have to reduce the addresses`\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\n        //  already 0 to mitigate the race condition described here:\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\n\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n    }\n\n    /**\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\n    * @param _owner address The address which owns the funds.\n    * @param _spender address The address which will spend the funds.\n    * @return A uint specifying the amount of tokens still available for the spender.\n    */\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\n        return allowed[_owner][_spender];\n    }\n\n}\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    Unpause();\n  }\n}\n\ncontract BlackList is Ownable, BasicToken {\n\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\n    function getBlackListStatus(address _maker) external constant returns (bool) {\n        return isBlackListed[_maker];\n    }\n\n    function getOwner() external constant returns (address) {\n        return owner;\n    }\n\n    mapping (address => bool) public isBlackListed;\n    \n    function addBlackList (address _evilUser) public onlyOwner {\n        isBlackListed[_evilUser] = true;\n        AddedBlackList(_evilUser);\n    }\n\n    function removeBlackList (address _clearedUser) public onlyOwner {\n        isBlackListed[_clearedUser] = false;\n        RemovedBlackList(_clearedUser);\n    }\n\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\n        require(isBlackListed[_blackListedUser]);\n        uint dirtyFunds = balanceOf(_blackListedUser);\n        balances[_blackListedUser] = 0;\n        _totalSupply -= dirtyFunds;\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\n    }\n\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\n\n    event AddedBlackList(address _user);\n\n    event RemovedBlackList(address _user);\n\n}\n\ncontract UpgradedStandardToken is StandardToken{\n    // those methods are called by the legacy contract\n    // and they must ensure msg.sender to be the contract address\n    function transferByLegacy(address from, address to, uint value) public;\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\n    function approveByLegacy(address from, address spender, uint value) public;\n}\n\ncontract TetherToken is Pausable, StandardToken, BlackList {\n\n    string public name;\n    string public symbol;\n    uint public decimals;\n    address public upgradedAddress;\n    bool public deprecated;\n\n    //  The contract can be initialized with a number of tokens\n    //  All the tokens are deposited to the owner address\n    //\n    // @param _balance Initial supply of the contract\n    // @param _name Token Name\n    // @param _symbol Token symbol\n    // @param _decimals Token decimals\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\n        _totalSupply = _initialSupply;\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n        balances[owner] = _initialSupply;\n        deprecated = false;\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function transfer(address _to, uint _value) public whenNotPaused {\n        require(!isBlackListed[msg.sender]);\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\n        } else {\n            return super.transfer(_to, _value);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\n        require(!isBlackListed[_from]);\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\n        } else {\n            return super.transferFrom(_from, _to, _value);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function balanceOf(address who) public constant returns (uint) {\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\n        } else {\n            return super.balanceOf(who);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\n        } else {\n            return super.approve(_spender, _value);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\n        if (deprecated) {\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\n        } else {\n            return super.allowance(_owner, _spender);\n        }\n    }\n\n    // deprecate current contract in favour of a new one\n    function deprecate(address _upgradedAddress) public onlyOwner {\n        deprecated = true;\n        upgradedAddress = _upgradedAddress;\n        Deprecate(_upgradedAddress);\n    }\n\n    // deprecate current contract if favour of a new one\n    function totalSupply() public constant returns (uint) {\n        if (deprecated) {\n            return StandardToken(upgradedAddress).totalSupply();\n        } else {\n            return _totalSupply;\n        }\n    }\n\n    // Issue a new amount of tokens\n    // these tokens are deposited into the owner address\n    //\n    // @param _amount Number of tokens to be issued\n    function issue(uint amount) public onlyOwner {\n        require(_totalSupply + amount > _totalSupply);\n        require(balances[owner] + amount > balances[owner]);\n\n        balances[owner] += amount;\n        _totalSupply += amount;\n        Issue(amount);\n    }\n\n    // Redeem tokens.\n    // These tokens are withdrawn from the owner address\n    // if the balance must be enough to cover the redeem\n    // or the call will fail.\n    // @param _amount Number of tokens to be issued\n    function redeem(uint amount) public onlyOwner {\n        require(_totalSupply >= amount);\n        require(balances[owner] >= amount);\n\n        _totalSupply -= amount;\n        balances[owner] -= amount;\n        Redeem(amount);\n    }\n\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\n        require(newBasisPoints < 20);\n        require(newMaxFee < 50);\n\n        basisPointsRate = newBasisPoints;\n        maximumFee = newMaxFee.mul(10**decimals);\n\n        Params(basisPointsRate, maximumFee);\n    }\n\n    // Called when new token are issued\n    event Issue(uint amount);\n\n    // Called when tokens are redeemed\n    event Redeem(uint amount);\n\n    // Called when contract is deprecated\n    event Deprecate(address newAddress);\n\n    // Called if contract ever adds fees\n    event Params(uint feeBasisPoints, uint maxFee);\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 0
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/test/TetherToken.sol": {
        "BasicToken": {
          "abi": [
            {
              "constant": true,
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "balances",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "maximumFee",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "_totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_to",
                  "type": "address"
                },
                {
                  "name": "_value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "basisPointsRate",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            }
          ],
          "devdoc": {
            "methods": {
              "balanceOf(address)": {
                "details": "Gets the balance of the specified address.",
                "params": {
                  "_owner": "The address to query the the balance of."
                },
                "return": "An uint representing the amount owned by the passed address."
              },
              "transfer(address,uint256)": {
                "details": "transfer token for a specified address",
                "params": {
                  "_to": "The address to transfer to.",
                  "_value": "The amount to be transferred."
                }
              },
              "transferOwnership(address)": {
                "details": "Allows the current owner to transfer control of the contract to a newOwner.",
                "params": {
                  "newOwner": "The address to transfer ownership to."
                }
              }
            },
            "title": "Basic token"
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "_totalSupply()": "3eaaf86b",
              "balanceOf(address)": "70a08231",
              "balances(address)": "27e235e3",
              "basisPointsRate()": "dd644f72",
              "maximumFee()": "35390714",
              "owner()": "8da5cb5b",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "",
          "userdoc": {
            "methods": {}
          }
        },
        "BlackList": {
          "abi": [
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_evilUser",
                  "type": "address"
                }
              ],
              "name": "addBlackList",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "balances",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "maximumFee",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "_totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "_maker",
                  "type": "address"
                }
              ],
              "name": "getBlackListStatus",
              "outputs": [
                {
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getOwner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_to",
                  "type": "address"
                },
                {
                  "name": "_value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "basisPointsRate",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isBlackListed",
              "outputs": [
                {
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_clearedUser",
                  "type": "address"
                }
              ],
              "name": "removeBlackList",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_blackListedUser",
                  "type": "address"
                }
              ],
              "name": "destroyBlackFunds",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "name": "_blackListedUser",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "_balance",
                  "type": "uint256"
                }
              ],
              "name": "DestroyedBlackFunds",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "name": "_user",
                  "type": "address"
                }
              ],
              "name": "AddedBlackList",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "name": "_user",
                  "type": "address"
                }
              ],
              "name": "RemovedBlackList",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            }
          ],
          "devdoc": {
            "methods": {
              "balanceOf(address)": {
                "details": "Gets the balance of the specified address.",
                "params": {
                  "_owner": "The address to query the the balance of."
                },
                "return": "An uint representing the amount owned by the passed address."
              },
              "transfer(address,uint256)": {
                "details": "transfer token for a specified address",
                "params": {
                  "_to": "The address to transfer to.",
                  "_value": "The amount to be transferred."
                }
              },
              "transferOwnership(address)": {
                "details": "Allows the current owner to transfer control of the contract to a newOwner.",
                "params": {
                  "newOwner": "The address to transfer ownership to."
                }
              }
            }
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "_totalSupply()": "3eaaf86b",
              "addBlackList(address)": "0ecb93c0",
              "balanceOf(address)": "70a08231",
              "balances(address)": "27e235e3",
              "basisPointsRate()": "dd644f72",
              "destroyBlackFunds(address)": "f3bdc228",
              "getBlackListStatus(address)": "59bf1abe",
              "getOwner()": "893d20e8",
              "isBlackListed(address)": "e47d6060",
              "maximumFee()": "35390714",
              "owner()": "8da5cb5b",
              "removeBlackList(address)": "e4997dc5",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "",
          "userdoc": {
            "methods": {
              "getBlackListStatus(address)": {
                "notice": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////"
              }
            }
          }
        },
        "ERC20": {
          "abi": [
            {
              "constant": false,
              "inputs": [
                {
                  "name": "spender",
                  "type": "address"
                },
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "from",
                  "type": "address"
                },
                {
                  "name": "to",
                  "type": "address"
                },
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "_totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "who",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "to",
                  "type": "address"
                },
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "owner",
                  "type": "address"
                },
                {
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            }
          ],
          "devdoc": {
            "methods": {},
            "title": "ERC20 interface"
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "_totalSupply()": "3eaaf86b",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "",
          "userdoc": {
            "methods": {}
          }
        },
        "ERC20Basic": {
          "abi": [
            {
              "constant": true,
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "_totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "who",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "to",
                  "type": "address"
                },
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            }
          ],
          "devdoc": {
            "methods": {},
            "title": "ERC20Basic"
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "_totalSupply()": "3eaaf86b",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb"
            }
          },
          "metadata": "",
          "userdoc": {
            "methods": {}
          }
        },
        "Ownable": {
          "abi": [
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "constructor"
            }
          ],
          "devdoc": {
            "methods": {
              "transferOwnership(address)": {
                "details": "Allows the current owner to transfer control of the contract to a newOwner.",
                "params": {
                  "newOwner": "The address to transfer ownership to."
                }
              }
            },
            "title": "Ownable"
          },
          "evm": {
            "assembly": "    /* \"contracts/test/TetherToken.sol\":1130:1853  contract Ownable {... */\n  mstore(0x40, 0x60)\n    /* \"contracts/test/TetherToken.sol\":1307:1368  function Ownable() public {... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n    /* \"contracts/test/TetherToken.sol\":1351:1361  msg.sender */\n  caller\n    /* \"contracts/test/TetherToken.sol\":1343:1348  owner */\n  0x0\n  dup1\n    /* \"contracts/test/TetherToken.sol\":1343:1361  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/test/TetherToken.sol\":1130:1853  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/test/TetherToken.sol\":1130:1853  contract Ownable {... */\n      mstore(0x40, 0x60)\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x8da5cb5b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_3\n      jumpi\n      0x0\n      dup1\n      revert\n        /* \"contracts/test/TetherToken.sol\":1153:1173  address public owner */\n    tag_2:\n      jumpi(tag_4, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_4:\n      tag_5\n      jump(tag_6)\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":1703:1850  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_3:\n      jumpi(tag_7, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_7:\n      tag_8\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"contracts/test/TetherToken.sol\":1153:1173  address public owner */\n    tag_6:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":1703:1850  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_9:\n        /* \"contracts/test/TetherToken.sol\":1511:1516  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1507  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/test/TetherToken.sol\":1489:1517  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_11\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_11:\n        /* \"contracts/test/TetherToken.sol\":1799:1800  0 */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":1779:1801  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1779:1787  newOwner */\n      dup2\n        /* \"contracts/test/TetherToken.sol\":1779:1801  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/test/TetherToken.sol\":1775:1844  if (newOwner != address(0)) {... */\n      iszero\n      tag_13\n      jumpi\n        /* \"contracts/test/TetherToken.sol\":1825:1833  newOwner */\n      dup1\n        /* \"contracts/test/TetherToken.sol\":1817:1822  owner */\n      0x0\n      dup1\n        /* \"contracts/test/TetherToken.sol\":1817:1833  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":1775:1844  if (newOwner != address(0)) {... */\n    tag_13:\n        /* \"contracts/test/TetherToken.sol\":1703:1850  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058200eda05bfee55f38d73f3582aae4a3b84cc3a6000e0fc2ed95b687b8a16ea554f0029\n}\n",
            "bytecode": {
              "linkReferences": {},
              "object": "6060604052341561000f57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101fc8061005e6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610048578063f2fde38b1461009d57600080fd5b341561005357600080fd5b61005b6100d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100a857600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506100fb565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156101cd57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a723058200eda05bfee55f38d73f3582aae4a3b84cc3a6000e0fc2ed95b687b8a16ea554f0029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1FC DUP1 PUSH2 0x5E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x48 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xFB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CD JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe 0xda SDIV 0xbf 0xee SSTORE RETURN DUP14 PUSH20 0xF3582AAE4A3B84CC3A6000E0FC2ED95B687B8A16 0xea SSTORE 0x4f STOP 0x29 ",
              "sourceMap": "1130:723:0:-;;;1307:61;;;;;;;;1351:10;1343:5;;:18;;;;;;;;;;;;;;;;;;1130:723;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "60606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610048578063f2fde38b1461009d57600080fd5b341561005357600080fd5b61005b6100d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100a857600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506100fb565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156101cd57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a723058200eda05bfee55f38d73f3582aae4a3b84cc3a6000e0fc2ed95b687b8a16ea554f0029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x48 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xFB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CD JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe 0xda SDIV 0xbf 0xee SSTORE RETURN DUP14 PUSH20 0xF3582AAE4A3B84CC3A6000E0FC2ED95B687B8A16 0xea SSTORE 0x4f STOP 0x29 ",
              "sourceMap": "1130:723:0:-;;;;;;;;;;;;;;;;;;;;;;;1153:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1703:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;1153:20;;;;;;;;;;;;;:::o;1703:147::-;1511:5;;;;;;;;;;;1497:19;;:10;:19;;;1489:28;;;;;;;;1799:1;1779:22;;:8;:22;;;;1775:69;;;1825:8;1817:5;;:16;;;;;;;;;;;;;;;;;;1775:69;1703:147;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "101600",
                "executionCost": "20408",
                "totalCost": "122008"
              },
              "external": {
                "owner()": "413",
                "transferOwnership(address)": "20755"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 1130,
                  "end": 1853,
                  "name": "PUSH",
                  "value": "60"
                },
                {
                  "begin": 1130,
                  "end": 1853,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 1130,
                  "end": 1853,
                  "name": "MSTORE"
                },
                {
                  "begin": 1307,
                  "end": 1368,
                  "name": "CALLVALUE"
                },
                {
                  "begin": 1307,
                  "end": 1368,
                  "name": "ISZERO"
                },
                {
                  "begin": 1307,
                  "end": 1368,
                  "name": "PUSH [tag]",
                  "value": "1"
                },
                {
                  "begin": 1307,
                  "end": 1368,
                  "name": "JUMPI"
                },
                {
                  "begin": 1307,
                  "end": 1368,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 1307,
                  "end": 1368,
                  "name": "DUP1"
                },
                {
                  "begin": 1307,
                  "end": 1368,
                  "name": "REVERT"
                },
                {
                  "begin": 1307,
                  "end": 1368,
                  "name": "tag",
                  "value": "1"
                },
                {
                  "begin": 1307,
                  "end": 1368,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 1351,
                  "end": 1361,
                  "name": "CALLER"
                },
                {
                  "begin": 1343,
                  "end": 1348,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 1343,
                  "end": 1348,
                  "name": "DUP1"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "EXP"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "DUP2"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "SLOAD"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "DUP2"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "PUSH",
                  "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "MUL"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "NOT"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "AND"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "SWAP1"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "DUP4"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "PUSH",
                  "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "AND"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "MUL"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "OR"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "SWAP1"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "SSTORE"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "POP"
                },
                {
                  "begin": 1130,
                  "end": 1853,
                  "name": "PUSH #[$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 1130,
                  "end": 1853,
                  "name": "DUP1"
                },
                {
                  "begin": 1130,
                  "end": 1853,
                  "name": "PUSH [$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 1130,
                  "end": 1853,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 1130,
                  "end": 1853,
                  "name": "CODECOPY"
                },
                {
                  "begin": 1130,
                  "end": 1853,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 1130,
                  "end": 1853,
                  "name": "RETURN"
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a165627a7a723058200eda05bfee55f38d73f3582aae4a3b84cc3a6000e0fc2ed95b687b8a16ea554f0029",
                  ".code": [
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "PUSH",
                      "value": "60"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "PUSH",
                      "value": "100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "DIV"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "AND"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "PUSH",
                      "value": "8DA5CB5B"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "EQ"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "PUSH [tag]",
                      "value": "2"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "PUSH",
                      "value": "F2FDE38B"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "EQ"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "PUSH [tag]",
                      "value": "3"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1130,
                      "end": 1853,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "tag",
                      "value": "2"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH [tag]",
                      "value": "4"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "tag",
                      "value": "4"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH [tag]",
                      "value": "5"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH [tag]",
                      "value": "6"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMP"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "tag",
                      "value": "5"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "AND"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "AND"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "ADD"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "POP"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "POP"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SUB"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "RETURN"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "tag",
                      "value": "3"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH [tag]",
                      "value": "7"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "tag",
                      "value": "7"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH [tag]",
                      "value": "8"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "AND"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "ADD"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "POP"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "POP"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH [tag]",
                      "value": "9"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMP"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "tag",
                      "value": "8"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "STOP"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "tag",
                      "value": "6"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "EXP"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DIV"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "AND"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "tag",
                      "value": "9"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "EXP"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DIV"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1507,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "EQ"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH [tag]",
                      "value": "11"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "tag",
                      "value": "11"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1799,
                      "end": 1800,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1779,
                      "end": 1801,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1779,
                      "end": 1801,
                      "name": "AND"
                    },
                    {
                      "begin": 1779,
                      "end": 1787,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1779,
                      "end": 1801,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1779,
                      "end": 1801,
                      "name": "AND"
                    },
                    {
                      "begin": 1779,
                      "end": 1801,
                      "name": "EQ"
                    },
                    {
                      "begin": 1779,
                      "end": 1801,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1775,
                      "end": 1844,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1775,
                      "end": 1844,
                      "name": "PUSH [tag]",
                      "value": "13"
                    },
                    {
                      "begin": 1775,
                      "end": 1844,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1825,
                      "end": 1833,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1817,
                      "end": 1822,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1817,
                      "end": 1822,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "EXP"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "MUL"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "NOT"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "AND"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "DUP4"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "AND"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "MUL"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "OR"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "POP"
                    },
                    {
                      "begin": 1775,
                      "end": 1844,
                      "name": "tag",
                      "value": "13"
                    },
                    {
                      "begin": 1775,
                      "end": 1844,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "POP"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMP",
                      "value": "[out]"
                    }
                  ]
                }
              }
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Ownable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/test/TetherToken.sol\":\"Ownable\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":0},\"remappings\":[]},\"sources\":{\"contracts/test/TetherToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.4.17;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that throw on error\\n */\\nlibrary SafeMath {\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n        uint256 c = a * b;\\n        assert(c / a == b);\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        assert(b <= a);\\n        return a - b;\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        assert(c >= a);\\n        return c;\\n    }\\n}\\n\\n/**\\n * @title Ownable\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\n */\\ncontract Ownable {\\n    address public owner;\\n\\n    /**\\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n      * account.\\n      */\\n    function Ownable() public {\\n        owner = msg.sender;\\n    }\\n\\n    /**\\n      * @dev Throws if called by any account other than the owner.\\n      */\\n    modifier onlyOwner() {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n    * @param newOwner The address to transfer ownership to.\\n    */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        if (newOwner != address(0)) {\\n            owner = newOwner;\\n        }\\n    }\\n\\n}\\n\\n/**\\n * @title ERC20Basic\\n * @dev Simpler version of ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20Basic {\\n    uint public _totalSupply;\\n    function totalSupply() public constant returns (uint);\\n    function balanceOf(address who) public constant returns (uint);\\n    function transfer(address to, uint value) public;\\n    event Transfer(address indexed from, address indexed to, uint value);\\n}\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20 is ERC20Basic {\\n    function allowance(address owner, address spender) public constant returns (uint);\\n    function transferFrom(address from, address to, uint value) public;\\n    function approve(address spender, uint value) public;\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n}\\n\\n/**\\n * @title Basic token\\n * @dev Basic version of StandardToken, with no allowances.\\n */\\ncontract BasicToken is Ownable, ERC20Basic {\\n    using SafeMath for uint;\\n\\n    mapping(address => uint) public balances;\\n\\n    // additional variables for use if transaction fees ever became necessary\\n    uint public basisPointsRate = 0;\\n    uint public maximumFee = 0;\\n\\n    /**\\n    * @dev Fix for the ERC20 short address attack.\\n    */\\n    modifier onlyPayloadSize(uint size) {\\n        require(!(msg.data.length < size + 4));\\n        _;\\n    }\\n\\n    /**\\n    * @dev transfer token for a specified address\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[msg.sender] = balances[msg.sender].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(msg.sender, owner, fee);\\n        }\\n        Transfer(msg.sender, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Gets the balance of the specified address.\\n    * @param _owner The address to query the the balance of.\\n    * @return An uint representing the amount owned by the passed address.\\n    */\\n    function balanceOf(address _owner) public constant returns (uint balance) {\\n        return balances[_owner];\\n    }\\n\\n}\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * @dev https://github.com/ethereum/EIPs/issues/20\\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n */\\ncontract StandardToken is BasicToken, ERC20 {\\n\\n    mapping (address => mapping (address => uint)) public allowed;\\n\\n    uint public constant MAX_UINT = 2**256 - 1;\\n\\n    /**\\n    * @dev Transfer tokens from one address to another\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\\n        var _allowance = allowed[_from][msg.sender];\\n\\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\\n        // if (_value > _allowance) throw;\\n\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        if (_allowance < MAX_UINT) {\\n            allowed[_from][msg.sender] = _allowance.sub(_value);\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[_from] = balances[_from].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(_from, owner, fee);\\n        }\\n        Transfer(_from, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\\n\\n        allowed[msg.sender][_spender] = _value;\\n        Approval(msg.sender, _spender, _value);\\n    }\\n\\n    /**\\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\\n    * @param _owner address The address which owns the funds.\\n    * @param _spender address The address which will spend the funds.\\n    * @return A uint specifying the amount of tokens still available for the spender.\\n    */\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n}\\n\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Ownable {\\n  event Pause();\\n  event Unpause();\\n\\n  bool public paused = false;\\n\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\n   */\\n  modifier whenNotPaused() {\\n    require(!paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is paused.\\n   */\\n  modifier whenPaused() {\\n    require(paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev called by the owner to pause, triggers stopped state\\n   */\\n  function pause() onlyOwner whenNotPaused public {\\n    paused = true;\\n    Pause();\\n  }\\n\\n  /**\\n   * @dev called by the owner to unpause, returns to normal state\\n   */\\n  function unpause() onlyOwner whenPaused public {\\n    paused = false;\\n    Unpause();\\n  }\\n}\\n\\ncontract BlackList is Ownable, BasicToken {\\n\\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\\n    function getBlackListStatus(address _maker) external constant returns (bool) {\\n        return isBlackListed[_maker];\\n    }\\n\\n    function getOwner() external constant returns (address) {\\n        return owner;\\n    }\\n\\n    mapping (address => bool) public isBlackListed;\\n    \\n    function addBlackList (address _evilUser) public onlyOwner {\\n        isBlackListed[_evilUser] = true;\\n        AddedBlackList(_evilUser);\\n    }\\n\\n    function removeBlackList (address _clearedUser) public onlyOwner {\\n        isBlackListed[_clearedUser] = false;\\n        RemovedBlackList(_clearedUser);\\n    }\\n\\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\\n        require(isBlackListed[_blackListedUser]);\\n        uint dirtyFunds = balanceOf(_blackListedUser);\\n        balances[_blackListedUser] = 0;\\n        _totalSupply -= dirtyFunds;\\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\\n    }\\n\\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\\n\\n    event AddedBlackList(address _user);\\n\\n    event RemovedBlackList(address _user);\\n\\n}\\n\\ncontract UpgradedStandardToken is StandardToken{\\n    // those methods are called by the legacy contract\\n    // and they must ensure msg.sender to be the contract address\\n    function transferByLegacy(address from, address to, uint value) public;\\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\\n    function approveByLegacy(address from, address spender, uint value) public;\\n}\\n\\ncontract TetherToken is Pausable, StandardToken, BlackList {\\n\\n    string public name;\\n    string public symbol;\\n    uint public decimals;\\n    address public upgradedAddress;\\n    bool public deprecated;\\n\\n    //  The contract can be initialized with a number of tokens\\n    //  All the tokens are deposited to the owner address\\n    //\\n    // @param _balance Initial supply of the contract\\n    // @param _name Token Name\\n    // @param _symbol Token symbol\\n    // @param _decimals Token decimals\\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\\n        _totalSupply = _initialSupply;\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n        balances[owner] = _initialSupply;\\n        deprecated = false;\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transfer(address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[msg.sender]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\\n        } else {\\n            return super.transfer(_to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[_from]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\\n        } else {\\n            return super.transferFrom(_from, _to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function balanceOf(address who) public constant returns (uint) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\\n        } else {\\n            return super.balanceOf(who);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\\n        } else {\\n            return super.approve(_spender, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\\n        } else {\\n            return super.allowance(_owner, _spender);\\n        }\\n    }\\n\\n    // deprecate current contract in favour of a new one\\n    function deprecate(address _upgradedAddress) public onlyOwner {\\n        deprecated = true;\\n        upgradedAddress = _upgradedAddress;\\n        Deprecate(_upgradedAddress);\\n    }\\n\\n    // deprecate current contract if favour of a new one\\n    function totalSupply() public constant returns (uint) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).totalSupply();\\n        } else {\\n            return _totalSupply;\\n        }\\n    }\\n\\n    // Issue a new amount of tokens\\n    // these tokens are deposited into the owner address\\n    //\\n    // @param _amount Number of tokens to be issued\\n    function issue(uint amount) public onlyOwner {\\n        require(_totalSupply + amount > _totalSupply);\\n        require(balances[owner] + amount > balances[owner]);\\n\\n        balances[owner] += amount;\\n        _totalSupply += amount;\\n        Issue(amount);\\n    }\\n\\n    // Redeem tokens.\\n    // These tokens are withdrawn from the owner address\\n    // if the balance must be enough to cover the redeem\\n    // or the call will fail.\\n    // @param _amount Number of tokens to be issued\\n    function redeem(uint amount) public onlyOwner {\\n        require(_totalSupply >= amount);\\n        require(balances[owner] >= amount);\\n\\n        _totalSupply -= amount;\\n        balances[owner] -= amount;\\n        Redeem(amount);\\n    }\\n\\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\\n        require(newBasisPoints < 20);\\n        require(newMaxFee < 50);\\n\\n        basisPointsRate = newBasisPoints;\\n        maximumFee = newMaxFee.mul(10**decimals);\\n\\n        Params(basisPointsRate, maximumFee);\\n    }\\n\\n    // Called when new token are issued\\n    event Issue(uint amount);\\n\\n    // Called when tokens are redeemed\\n    event Redeem(uint amount);\\n\\n    // Called when contract is deprecated\\n    event Deprecate(address newAddress);\\n\\n    // Called if contract ever adds fees\\n    event Params(uint feeBasisPoints, uint maxFee);\\n}\",\"keccak256\":\"0x334636311066f7e833a950d3100859886a9afb77ecf2702b0320dca164ec88cc\"}},\"version\":1}",
          "userdoc": {
            "methods": {}
          }
        },
        "Pausable": {
          "abi": [
            {
              "constant": false,
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [],
              "name": "Pause",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [],
              "name": "Unpause",
              "type": "event"
            }
          ],
          "devdoc": {
            "methods": {
              "pause()": {
                "details": "called by the owner to pause, triggers stopped state"
              },
              "transferOwnership(address)": {
                "details": "Allows the current owner to transfer control of the contract to a newOwner.",
                "params": {
                  "newOwner": "The address to transfer ownership to."
                }
              },
              "unpause()": {
                "details": "called by the owner to unpause, returns to normal state"
              }
            },
            "title": "Pausable"
          },
          "evm": {
            "assembly": "    /* \"contracts/test/TetherToken.sol\":7279:8024  contract Pausable is Ownable {... */\n  mstore(0x40, 0x60)\n    /* \"contracts/test/TetherToken.sol\":7370:7375  false */\n  0x0\n    /* \"contracts/test/TetherToken.sol\":7349:7375  bool public paused = false */\n  dup1\n  exp(0x100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/test/TetherToken.sol\":1351:1361  msg.sender */\n  caller\n    /* \"contracts/test/TetherToken.sol\":1343:1348  owner */\n  0x0\n  dup1\n    /* \"contracts/test/TetherToken.sol\":1343:1361  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/test/TetherToken.sol\":7279:8024  contract Pausable is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/test/TetherToken.sol\":7279:8024  contract Pausable is Ownable {... */\n      mstore(0x40, 0x60)\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x3f4ba83a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n      0x0\n      dup1\n      revert\n        /* \"contracts/test/TetherToken.sol\":7935:8022  function unpause() onlyOwner whenPaused public {... */\n    tag_2:\n      jumpi(tag_7, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_7:\n      tag_8\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"contracts/test/TetherToken.sol\":7349:7375  bool public paused = false */\n    tag_3:\n      jumpi(tag_10, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_10:\n      tag_11\n      jump(tag_12)\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":7768:7853  function pause() onlyOwner whenNotPaused public {... */\n    tag_4:\n      jumpi(tag_13, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_13:\n      tag_14\n      jump(tag_15)\n    tag_14:\n      stop\n        /* \"contracts/test/TetherToken.sol\":1153:1173  address public owner */\n    tag_5:\n      jumpi(tag_16, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_16:\n      tag_17\n      jump(tag_18)\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":1703:1850  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_6:\n      jumpi(tag_19, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_19:\n      tag_20\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_21)\n    tag_20:\n      stop\n        /* \"contracts/test/TetherToken.sol\":7935:8022  function unpause() onlyOwner whenPaused public {... */\n    tag_9:\n        /* \"contracts/test/TetherToken.sol\":1511:1516  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1507  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/test/TetherToken.sol\":1489:1517  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_23\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_23:\n        /* \"contracts/test/TetherToken.sol\":7670:7676  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/test/TetherToken.sol\":7662:7677  require(paused) */\n      iszero\n      iszero\n      tag_25\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_25:\n        /* \"contracts/test/TetherToken.sol\":7997:8002  false */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":7988:7994  paused */\n      dup1\n      0x14\n        /* \"contracts/test/TetherToken.sol\":7988:8002  paused = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":8008:8017  Unpause() */\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/test/TetherToken.sol\":7935:8022  function unpause() onlyOwner whenPaused public {... */\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":7349:7375  bool public paused = false */\n    tag_12:\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":7768:7853  function pause() onlyOwner whenNotPaused public {... */\n    tag_15:\n        /* \"contracts/test/TetherToken.sol\":1511:1516  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1507  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/test/TetherToken.sol\":1489:1517  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_28\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_28:\n        /* \"contracts/test/TetherToken.sol\":7518:7524  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/test/TetherToken.sol\":7517:7524  !paused */\n      iszero\n        /* \"contracts/test/TetherToken.sol\":7509:7525  require(!paused) */\n      iszero\n      iszero\n      tag_30\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_30:\n        /* \"contracts/test/TetherToken.sol\":7831:7835  true */\n      0x1\n        /* \"contracts/test/TetherToken.sol\":7822:7828  paused */\n      0x0\n      0x14\n        /* \"contracts/test/TetherToken.sol\":7822:7835  paused = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":7841:7848  Pause() */\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/test/TetherToken.sol\":7768:7853  function pause() onlyOwner whenNotPaused public {... */\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":1153:1173  address public owner */\n    tag_18:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":1703:1850  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_21:\n        /* \"contracts/test/TetherToken.sol\":1511:1516  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1507  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/test/TetherToken.sol\":1489:1517  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_33\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_33:\n        /* \"contracts/test/TetherToken.sol\":1799:1800  0 */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":1779:1801  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1779:1787  newOwner */\n      dup2\n        /* \"contracts/test/TetherToken.sol\":1779:1801  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/test/TetherToken.sol\":1775:1844  if (newOwner != address(0)) {... */\n      iszero\n      tag_35\n      jumpi\n        /* \"contracts/test/TetherToken.sol\":1825:1833  newOwner */\n      dup1\n        /* \"contracts/test/TetherToken.sol\":1817:1822  owner */\n      0x0\n      dup1\n        /* \"contracts/test/TetherToken.sol\":1817:1833  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":1775:1844  if (newOwner != address(0)) {... */\n    tag_35:\n        /* \"contracts/test/TetherToken.sol\":1703:1850  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820198e5f9a2a943a8143581f7ba13787f380dafd814fa17cce11fbd1c0cc98f0ea0029\n}\n",
            "bytecode": {
              "linkReferences": {},
              "object": "606060405260008060146101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104058061006d6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633f4ba83a146100695780635c975abb1461007e5780638456cb59146100ab5780638da5cb5b146100c0578063f2fde38b1461011557600080fd5b341561007457600080fd5b61007c61014e565b005b341561008957600080fd5b61009161020c565b604051808215151515815260200191505060405180910390f35b34156100b657600080fd5b6100be61021f565b005b34156100cb57600080fd5b6100d36102df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561012057600080fd5b61014c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610304565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101a957600080fd5b600060149054906101000a900460ff1615156101c457600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561027a57600080fd5b600060149054906101000a900460ff1615151561029657600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561035f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156103d657806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a72305820198e5f9a2a943a8143581f7ba13787f380dafd814fa17cce11fbd1c0cc98f0ea0029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x405 DUP1 PUSH2 0x6D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x69 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C PUSH2 0x14E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x21F JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x304 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3D6 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 NOT DUP15 0x5f SWAP11 0x2a SWAP5 GASPRICE DUP2 NUMBER PC 0x1f PUSH28 0xA13787F380DAFD814FA17CCE11FBD1C0CC98F0EA0029000000000000 ",
              "sourceMap": "7279:745:0:-;;;7370:5;7349:26;;;;;;;;;;;;;;;;;;;;1351:10;1343:5;;:18;;;;;;;;;;;;;;;;;;7279:745;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "60606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633f4ba83a146100695780635c975abb1461007e5780638456cb59146100ab5780638da5cb5b146100c0578063f2fde38b1461011557600080fd5b341561007457600080fd5b61007c61014e565b005b341561008957600080fd5b61009161020c565b604051808215151515815260200191505060405180910390f35b34156100b657600080fd5b6100be61021f565b005b34156100cb57600080fd5b6100d36102df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561012057600080fd5b61014c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610304565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101a957600080fd5b600060149054906101000a900460ff1615156101c457600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561027a57600080fd5b600060149054906101000a900460ff1615151561029657600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561035f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156103d657806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a72305820198e5f9a2a943a8143581f7ba13787f380dafd814fa17cce11fbd1c0cc98f0ea0029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x69 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C PUSH2 0x14E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x21F JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x304 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3D6 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 NOT DUP15 0x5f SWAP11 0x2a SWAP5 GASPRICE DUP2 NUMBER PC 0x1f PUSH28 0xA13787F380DAFD814FA17CCE11FBD1C0CC98F0EA0029000000000000 ",
              "sourceMap": "7279:745:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7935:87;;;;;;;;;;;;;;7349:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7768:85;;;;;;;;;;;;;;1153:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1703:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;7935:87;1511:5;;;;;;;;;;;1497:19;;:10;:19;;;1489:28;;;;;;;;7670:6;;;;;;;;;;;7662:15;;;;;;;;7997:5;7988:6;;:14;;;;;;;;;;;;;;;;;;8008:9;;;;;;;;;;7935:87::o;7349:26::-;;;;;;;;;;;;;:::o;7768:85::-;1511:5;;;;;;;;;;;1497:19;;:10;:19;;;1489:28;;;;;;;;7518:6;;;;;;;;;;;7517:7;7509:16;;;;;;;;7831:4;7822:6;;:13;;;;;;;;;;;;;;;;;;7841:7;;;;;;;;;;7768:85::o;1153:20::-;;;;;;;;;;;;;:::o;1703:147::-;1511:5;;;;;;;;;;;1497:19;;:10;:19;;;1489:28;;;;;;;;1799:1;1779:22;;:8;:22;;;;1775:69;;;1825:8;1817:5;;:16;;;;;;;;;;;;;;;;;;1775:69;1703:147;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "205800",
                "executionCost": "40810",
                "totalCost": "246610"
              },
              "external": {
                "owner()": "479",
                "pause()": "21833",
                "paused()": "485",
                "transferOwnership(address)": "20821",
                "unpause()": "21786"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 7279,
                  "end": 8024,
                  "name": "PUSH",
                  "value": "60"
                },
                {
                  "begin": 7279,
                  "end": 8024,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 7279,
                  "end": 8024,
                  "name": "MSTORE"
                },
                {
                  "begin": 7370,
                  "end": 7375,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "DUP1"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "PUSH",
                  "value": "14"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "EXP"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "DUP2"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "SLOAD"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "DUP2"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "MUL"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "NOT"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "AND"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "SWAP1"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "DUP4"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "ISZERO"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "ISZERO"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "MUL"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "OR"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "SWAP1"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "SSTORE"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "POP"
                },
                {
                  "begin": 1351,
                  "end": 1361,
                  "name": "CALLER"
                },
                {
                  "begin": 1343,
                  "end": 1348,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 1343,
                  "end": 1348,
                  "name": "DUP1"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "EXP"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "DUP2"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "SLOAD"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "DUP2"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "PUSH",
                  "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "MUL"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "NOT"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "AND"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "SWAP1"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "DUP4"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "PUSH",
                  "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "AND"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "MUL"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "OR"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "SWAP1"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "SSTORE"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "POP"
                },
                {
                  "begin": 7279,
                  "end": 8024,
                  "name": "PUSH #[$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 7279,
                  "end": 8024,
                  "name": "DUP1"
                },
                {
                  "begin": 7279,
                  "end": 8024,
                  "name": "PUSH [$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 7279,
                  "end": 8024,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 7279,
                  "end": 8024,
                  "name": "CODECOPY"
                },
                {
                  "begin": 7279,
                  "end": 8024,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 7279,
                  "end": 8024,
                  "name": "RETURN"
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a165627a7a72305820198e5f9a2a943a8143581f7ba13787f380dafd814fa17cce11fbd1c0cc98f0ea0029",
                  ".code": [
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "PUSH",
                      "value": "60"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "PUSH",
                      "value": "100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "DIV"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "AND"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "PUSH",
                      "value": "3F4BA83A"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "EQ"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "PUSH [tag]",
                      "value": "2"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "PUSH",
                      "value": "5C975ABB"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "EQ"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "PUSH [tag]",
                      "value": "3"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "PUSH",
                      "value": "8456CB59"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "EQ"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "PUSH [tag]",
                      "value": "4"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "PUSH",
                      "value": "8DA5CB5B"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "EQ"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "PUSH [tag]",
                      "value": "5"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "PUSH",
                      "value": "F2FDE38B"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "EQ"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "PUSH [tag]",
                      "value": "6"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7279,
                      "end": 8024,
                      "name": "REVERT"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "tag",
                      "value": "2"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "PUSH [tag]",
                      "value": "7"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "REVERT"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "tag",
                      "value": "7"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "PUSH [tag]",
                      "value": "8"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "PUSH [tag]",
                      "value": "9"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "JUMP"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "tag",
                      "value": "8"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "STOP"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "tag",
                      "value": "3"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH [tag]",
                      "value": "10"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "REVERT"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "tag",
                      "value": "10"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH [tag]",
                      "value": "11"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH [tag]",
                      "value": "12"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "JUMP"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "tag",
                      "value": "11"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "DUP3"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "ADD"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "POP"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "POP"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "SUB"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "RETURN"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "tag",
                      "value": "4"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "PUSH [tag]",
                      "value": "13"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "REVERT"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "tag",
                      "value": "13"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "PUSH [tag]",
                      "value": "14"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "PUSH [tag]",
                      "value": "15"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "JUMP"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "tag",
                      "value": "14"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "STOP"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "tag",
                      "value": "5"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH [tag]",
                      "value": "16"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "tag",
                      "value": "16"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH [tag]",
                      "value": "17"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH [tag]",
                      "value": "18"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMP"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "tag",
                      "value": "17"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "AND"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "AND"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "ADD"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "POP"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "POP"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SUB"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "RETURN"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "tag",
                      "value": "6"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH [tag]",
                      "value": "19"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "tag",
                      "value": "19"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH [tag]",
                      "value": "20"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "AND"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "ADD"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "POP"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "POP"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH [tag]",
                      "value": "21"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMP"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "tag",
                      "value": "20"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "STOP"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "tag",
                      "value": "9"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "EXP"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DIV"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1507,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "EQ"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH [tag]",
                      "value": "23"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "tag",
                      "value": "23"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "EXP"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "DIV"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "AND"
                    },
                    {
                      "begin": 7662,
                      "end": 7677,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7662,
                      "end": 7677,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7662,
                      "end": 7677,
                      "name": "PUSH [tag]",
                      "value": "25"
                    },
                    {
                      "begin": 7662,
                      "end": 7677,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7662,
                      "end": 7677,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7662,
                      "end": 7677,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7662,
                      "end": 7677,
                      "name": "REVERT"
                    },
                    {
                      "begin": 7662,
                      "end": 7677,
                      "name": "tag",
                      "value": "25"
                    },
                    {
                      "begin": 7662,
                      "end": 7677,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7997,
                      "end": 8002,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7988,
                      "end": 7994,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7988,
                      "end": 7994,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "EXP"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "MUL"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "NOT"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "AND"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "DUP4"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "MUL"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "OR"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "POP"
                    },
                    {
                      "begin": 8008,
                      "end": 8017,
                      "name": "PUSH",
                      "value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
                    },
                    {
                      "begin": 8008,
                      "end": 8017,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 8008,
                      "end": 8017,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 8008,
                      "end": 8017,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 8008,
                      "end": 8017,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 8008,
                      "end": 8017,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8008,
                      "end": 8017,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8008,
                      "end": 8017,
                      "name": "SUB"
                    },
                    {
                      "begin": 8008,
                      "end": 8017,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8008,
                      "end": 8017,
                      "name": "LOG1"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "tag",
                      "value": "12"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "EXP"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "DIV"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "AND"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "tag",
                      "value": "15"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "EXP"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DIV"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1507,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "EQ"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH [tag]",
                      "value": "28"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "tag",
                      "value": "28"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "EXP"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "DIV"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "AND"
                    },
                    {
                      "begin": 7517,
                      "end": 7524,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "PUSH [tag]",
                      "value": "30"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "REVERT"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "tag",
                      "value": "30"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7831,
                      "end": 7835,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 7822,
                      "end": 7828,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7822,
                      "end": 7828,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "EXP"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "MUL"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "NOT"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "AND"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "DUP4"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "MUL"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "OR"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "POP"
                    },
                    {
                      "begin": 7841,
                      "end": 7848,
                      "name": "PUSH",
                      "value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
                    },
                    {
                      "begin": 7841,
                      "end": 7848,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 7841,
                      "end": 7848,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 7841,
                      "end": 7848,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 7841,
                      "end": 7848,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 7841,
                      "end": 7848,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7841,
                      "end": 7848,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 7841,
                      "end": 7848,
                      "name": "SUB"
                    },
                    {
                      "begin": 7841,
                      "end": 7848,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7841,
                      "end": 7848,
                      "name": "LOG1"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "tag",
                      "value": "18"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "EXP"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DIV"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "AND"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "tag",
                      "value": "21"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "EXP"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DIV"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1507,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "EQ"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH [tag]",
                      "value": "33"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "tag",
                      "value": "33"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1799,
                      "end": 1800,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1779,
                      "end": 1801,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1779,
                      "end": 1801,
                      "name": "AND"
                    },
                    {
                      "begin": 1779,
                      "end": 1787,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1779,
                      "end": 1801,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1779,
                      "end": 1801,
                      "name": "AND"
                    },
                    {
                      "begin": 1779,
                      "end": 1801,
                      "name": "EQ"
                    },
                    {
                      "begin": 1779,
                      "end": 1801,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1775,
                      "end": 1844,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1775,
                      "end": 1844,
                      "name": "PUSH [tag]",
                      "value": "35"
                    },
                    {
                      "begin": 1775,
                      "end": 1844,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1825,
                      "end": 1833,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1817,
                      "end": 1822,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1817,
                      "end": 1822,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "EXP"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "MUL"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "NOT"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "AND"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "DUP4"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "AND"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "MUL"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "OR"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "POP"
                    },
                    {
                      "begin": 1775,
                      "end": 1844,
                      "name": "tag",
                      "value": "35"
                    },
                    {
                      "begin": 1775,
                      "end": 1844,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "POP"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMP",
                      "value": "[out]"
                    }
                  ]
                }
              }
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "transferOwnership(address)": "f2fde38b",
              "unpause()": "3f4ba83a"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Pausable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/test/TetherToken.sol\":\"Pausable\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":0},\"remappings\":[]},\"sources\":{\"contracts/test/TetherToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.4.17;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that throw on error\\n */\\nlibrary SafeMath {\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n        uint256 c = a * b;\\n        assert(c / a == b);\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        assert(b <= a);\\n        return a - b;\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        assert(c >= a);\\n        return c;\\n    }\\n}\\n\\n/**\\n * @title Ownable\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\n */\\ncontract Ownable {\\n    address public owner;\\n\\n    /**\\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n      * account.\\n      */\\n    function Ownable() public {\\n        owner = msg.sender;\\n    }\\n\\n    /**\\n      * @dev Throws if called by any account other than the owner.\\n      */\\n    modifier onlyOwner() {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n    * @param newOwner The address to transfer ownership to.\\n    */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        if (newOwner != address(0)) {\\n            owner = newOwner;\\n        }\\n    }\\n\\n}\\n\\n/**\\n * @title ERC20Basic\\n * @dev Simpler version of ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20Basic {\\n    uint public _totalSupply;\\n    function totalSupply() public constant returns (uint);\\n    function balanceOf(address who) public constant returns (uint);\\n    function transfer(address to, uint value) public;\\n    event Transfer(address indexed from, address indexed to, uint value);\\n}\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20 is ERC20Basic {\\n    function allowance(address owner, address spender) public constant returns (uint);\\n    function transferFrom(address from, address to, uint value) public;\\n    function approve(address spender, uint value) public;\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n}\\n\\n/**\\n * @title Basic token\\n * @dev Basic version of StandardToken, with no allowances.\\n */\\ncontract BasicToken is Ownable, ERC20Basic {\\n    using SafeMath for uint;\\n\\n    mapping(address => uint) public balances;\\n\\n    // additional variables for use if transaction fees ever became necessary\\n    uint public basisPointsRate = 0;\\n    uint public maximumFee = 0;\\n\\n    /**\\n    * @dev Fix for the ERC20 short address attack.\\n    */\\n    modifier onlyPayloadSize(uint size) {\\n        require(!(msg.data.length < size + 4));\\n        _;\\n    }\\n\\n    /**\\n    * @dev transfer token for a specified address\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[msg.sender] = balances[msg.sender].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(msg.sender, owner, fee);\\n        }\\n        Transfer(msg.sender, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Gets the balance of the specified address.\\n    * @param _owner The address to query the the balance of.\\n    * @return An uint representing the amount owned by the passed address.\\n    */\\n    function balanceOf(address _owner) public constant returns (uint balance) {\\n        return balances[_owner];\\n    }\\n\\n}\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * @dev https://github.com/ethereum/EIPs/issues/20\\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n */\\ncontract StandardToken is BasicToken, ERC20 {\\n\\n    mapping (address => mapping (address => uint)) public allowed;\\n\\n    uint public constant MAX_UINT = 2**256 - 1;\\n\\n    /**\\n    * @dev Transfer tokens from one address to another\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\\n        var _allowance = allowed[_from][msg.sender];\\n\\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\\n        // if (_value > _allowance) throw;\\n\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        if (_allowance < MAX_UINT) {\\n            allowed[_from][msg.sender] = _allowance.sub(_value);\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[_from] = balances[_from].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(_from, owner, fee);\\n        }\\n        Transfer(_from, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\\n\\n        allowed[msg.sender][_spender] = _value;\\n        Approval(msg.sender, _spender, _value);\\n    }\\n\\n    /**\\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\\n    * @param _owner address The address which owns the funds.\\n    * @param _spender address The address which will spend the funds.\\n    * @return A uint specifying the amount of tokens still available for the spender.\\n    */\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n}\\n\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Ownable {\\n  event Pause();\\n  event Unpause();\\n\\n  bool public paused = false;\\n\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\n   */\\n  modifier whenNotPaused() {\\n    require(!paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is paused.\\n   */\\n  modifier whenPaused() {\\n    require(paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev called by the owner to pause, triggers stopped state\\n   */\\n  function pause() onlyOwner whenNotPaused public {\\n    paused = true;\\n    Pause();\\n  }\\n\\n  /**\\n   * @dev called by the owner to unpause, returns to normal state\\n   */\\n  function unpause() onlyOwner whenPaused public {\\n    paused = false;\\n    Unpause();\\n  }\\n}\\n\\ncontract BlackList is Ownable, BasicToken {\\n\\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\\n    function getBlackListStatus(address _maker) external constant returns (bool) {\\n        return isBlackListed[_maker];\\n    }\\n\\n    function getOwner() external constant returns (address) {\\n        return owner;\\n    }\\n\\n    mapping (address => bool) public isBlackListed;\\n    \\n    function addBlackList (address _evilUser) public onlyOwner {\\n        isBlackListed[_evilUser] = true;\\n        AddedBlackList(_evilUser);\\n    }\\n\\n    function removeBlackList (address _clearedUser) public onlyOwner {\\n        isBlackListed[_clearedUser] = false;\\n        RemovedBlackList(_clearedUser);\\n    }\\n\\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\\n        require(isBlackListed[_blackListedUser]);\\n        uint dirtyFunds = balanceOf(_blackListedUser);\\n        balances[_blackListedUser] = 0;\\n        _totalSupply -= dirtyFunds;\\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\\n    }\\n\\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\\n\\n    event AddedBlackList(address _user);\\n\\n    event RemovedBlackList(address _user);\\n\\n}\\n\\ncontract UpgradedStandardToken is StandardToken{\\n    // those methods are called by the legacy contract\\n    // and they must ensure msg.sender to be the contract address\\n    function transferByLegacy(address from, address to, uint value) public;\\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\\n    function approveByLegacy(address from, address spender, uint value) public;\\n}\\n\\ncontract TetherToken is Pausable, StandardToken, BlackList {\\n\\n    string public name;\\n    string public symbol;\\n    uint public decimals;\\n    address public upgradedAddress;\\n    bool public deprecated;\\n\\n    //  The contract can be initialized with a number of tokens\\n    //  All the tokens are deposited to the owner address\\n    //\\n    // @param _balance Initial supply of the contract\\n    // @param _name Token Name\\n    // @param _symbol Token symbol\\n    // @param _decimals Token decimals\\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\\n        _totalSupply = _initialSupply;\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n        balances[owner] = _initialSupply;\\n        deprecated = false;\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transfer(address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[msg.sender]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\\n        } else {\\n            return super.transfer(_to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[_from]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\\n        } else {\\n            return super.transferFrom(_from, _to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function balanceOf(address who) public constant returns (uint) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\\n        } else {\\n            return super.balanceOf(who);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\\n        } else {\\n            return super.approve(_spender, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\\n        } else {\\n            return super.allowance(_owner, _spender);\\n        }\\n    }\\n\\n    // deprecate current contract in favour of a new one\\n    function deprecate(address _upgradedAddress) public onlyOwner {\\n        deprecated = true;\\n        upgradedAddress = _upgradedAddress;\\n        Deprecate(_upgradedAddress);\\n    }\\n\\n    // deprecate current contract if favour of a new one\\n    function totalSupply() public constant returns (uint) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).totalSupply();\\n        } else {\\n            return _totalSupply;\\n        }\\n    }\\n\\n    // Issue a new amount of tokens\\n    // these tokens are deposited into the owner address\\n    //\\n    // @param _amount Number of tokens to be issued\\n    function issue(uint amount) public onlyOwner {\\n        require(_totalSupply + amount > _totalSupply);\\n        require(balances[owner] + amount > balances[owner]);\\n\\n        balances[owner] += amount;\\n        _totalSupply += amount;\\n        Issue(amount);\\n    }\\n\\n    // Redeem tokens.\\n    // These tokens are withdrawn from the owner address\\n    // if the balance must be enough to cover the redeem\\n    // or the call will fail.\\n    // @param _amount Number of tokens to be issued\\n    function redeem(uint amount) public onlyOwner {\\n        require(_totalSupply >= amount);\\n        require(balances[owner] >= amount);\\n\\n        _totalSupply -= amount;\\n        balances[owner] -= amount;\\n        Redeem(amount);\\n    }\\n\\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\\n        require(newBasisPoints < 20);\\n        require(newMaxFee < 50);\\n\\n        basisPointsRate = newBasisPoints;\\n        maximumFee = newMaxFee.mul(10**decimals);\\n\\n        Params(basisPointsRate, maximumFee);\\n    }\\n\\n    // Called when new token are issued\\n    event Issue(uint amount);\\n\\n    // Called when tokens are redeemed\\n    event Redeem(uint amount);\\n\\n    // Called when contract is deprecated\\n    event Deprecate(address newAddress);\\n\\n    // Called if contract ever adds fees\\n    event Params(uint feeBasisPoints, uint maxFee);\\n}\",\"keccak256\":\"0x334636311066f7e833a950d3100859886a9afb77ecf2702b0320dca164ec88cc\"}},\"version\":1}",
          "userdoc": {
            "methods": {}
          }
        },
        "SafeMath": {
          "abi": [],
          "devdoc": {
            "methods": {},
            "title": "SafeMath"
          },
          "evm": {
            "assembly": "    /* \"contracts/test/TetherToken.sol\":148:938  library SafeMath {... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/test/TetherToken.sol\":148:938  library SafeMath {... */\n      mstore(0x40, 0x60)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058200c6ec080dfeab1e588c2b32fb4f59681d3fb95b656d4f9471d006d3ae79b563b0029\n}\n",
            "bytecode": {
              "linkReferences": {},
              "object": "60606040523415600e57600080fd5b603580601b6000396000f3006060604052600080fd00a165627a7a723058200c6ec080dfeab1e588c2b32fb4f59681d3fb95b656d4f9471d006d3ae79b563b0029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH1 0xE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 DUP1 PUSH1 0x1B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc PUSH15 0xC080DFEAB1E588C2B32FB4F59681D3 CREATE2 SWAP6 0xb6 JUMP 0xd4 0xf9 0x47 0x1d STOP PUSH14 0x3AE79B563B002900000000000000 ",
              "sourceMap": "148:790:0:-;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "6060604052600080fd00a165627a7a723058200c6ec080dfeab1e588c2b32fb4f59681d3fb95b656d4f9471d006d3ae79b563b0029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc PUSH15 0xC080DFEAB1E588C2B32FB4F59681D3 CREATE2 SWAP6 0xb6 JUMP 0xd4 0xf9 0x47 0x1d STOP PUSH14 0x3AE79B563B002900000000000000 ",
              "sourceMap": "148:790:0:-;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "10600",
                "executionCost": "61",
                "totalCost": "10661"
              },
              "internal": {
                "add(uint256,uint256)": "infinite",
                "div(uint256,uint256)": "infinite",
                "mul(uint256,uint256)": "infinite",
                "sub(uint256,uint256)": "infinite"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 148,
                  "end": 938,
                  "name": "PUSH",
                  "value": "60"
                },
                {
                  "begin": 148,
                  "end": 938,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 148,
                  "end": 938,
                  "name": "MSTORE"
                },
                {
                  "begin": 148,
                  "end": 938,
                  "name": "CALLVALUE"
                },
                {
                  "begin": 148,
                  "end": 938,
                  "name": "ISZERO"
                },
                {
                  "begin": 148,
                  "end": 938,
                  "name": "PUSH [tag]",
                  "value": "1"
                },
                {
                  "begin": 148,
                  "end": 938,
                  "name": "JUMPI"
                },
                {
                  "begin": 148,
                  "end": 938,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 148,
                  "end": 938,
                  "name": "DUP1"
                },
                {
                  "begin": 148,
                  "end": 938,
                  "name": "REVERT"
                },
                {
                  "begin": 148,
                  "end": 938,
                  "name": "tag",
                  "value": "1"
                },
                {
                  "begin": 148,
                  "end": 938,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 148,
                  "end": 938,
                  "name": "PUSH #[$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 148,
                  "end": 938,
                  "name": "DUP1"
                },
                {
                  "begin": 148,
                  "end": 938,
                  "name": "PUSH [$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 148,
                  "end": 938,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 148,
                  "end": 938,
                  "name": "CODECOPY"
                },
                {
                  "begin": 148,
                  "end": 938,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 148,
                  "end": 938,
                  "name": "RETURN"
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a165627a7a723058200c6ec080dfeab1e588c2b32fb4f59681d3fb95b656d4f9471d006d3ae79b563b0029",
                  ".code": [
                    {
                      "begin": 148,
                      "end": 938,
                      "name": "PUSH",
                      "value": "60"
                    },
                    {
                      "begin": 148,
                      "end": 938,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 148,
                      "end": 938,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 148,
                      "end": 938,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 148,
                      "end": 938,
                      "name": "DUP1"
                    },
                    {
                      "begin": 148,
                      "end": 938,
                      "name": "REVERT"
                    }
                  ]
                }
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"SafeMath\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/test/TetherToken.sol\":\"SafeMath\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":0},\"remappings\":[]},\"sources\":{\"contracts/test/TetherToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.4.17;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that throw on error\\n */\\nlibrary SafeMath {\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n        uint256 c = a * b;\\n        assert(c / a == b);\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        assert(b <= a);\\n        return a - b;\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        assert(c >= a);\\n        return c;\\n    }\\n}\\n\\n/**\\n * @title Ownable\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\n */\\ncontract Ownable {\\n    address public owner;\\n\\n    /**\\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n      * account.\\n      */\\n    function Ownable() public {\\n        owner = msg.sender;\\n    }\\n\\n    /**\\n      * @dev Throws if called by any account other than the owner.\\n      */\\n    modifier onlyOwner() {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n    * @param newOwner The address to transfer ownership to.\\n    */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        if (newOwner != address(0)) {\\n            owner = newOwner;\\n        }\\n    }\\n\\n}\\n\\n/**\\n * @title ERC20Basic\\n * @dev Simpler version of ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20Basic {\\n    uint public _totalSupply;\\n    function totalSupply() public constant returns (uint);\\n    function balanceOf(address who) public constant returns (uint);\\n    function transfer(address to, uint value) public;\\n    event Transfer(address indexed from, address indexed to, uint value);\\n}\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20 is ERC20Basic {\\n    function allowance(address owner, address spender) public constant returns (uint);\\n    function transferFrom(address from, address to, uint value) public;\\n    function approve(address spender, uint value) public;\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n}\\n\\n/**\\n * @title Basic token\\n * @dev Basic version of StandardToken, with no allowances.\\n */\\ncontract BasicToken is Ownable, ERC20Basic {\\n    using SafeMath for uint;\\n\\n    mapping(address => uint) public balances;\\n\\n    // additional variables for use if transaction fees ever became necessary\\n    uint public basisPointsRate = 0;\\n    uint public maximumFee = 0;\\n\\n    /**\\n    * @dev Fix for the ERC20 short address attack.\\n    */\\n    modifier onlyPayloadSize(uint size) {\\n        require(!(msg.data.length < size + 4));\\n        _;\\n    }\\n\\n    /**\\n    * @dev transfer token for a specified address\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[msg.sender] = balances[msg.sender].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(msg.sender, owner, fee);\\n        }\\n        Transfer(msg.sender, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Gets the balance of the specified address.\\n    * @param _owner The address to query the the balance of.\\n    * @return An uint representing the amount owned by the passed address.\\n    */\\n    function balanceOf(address _owner) public constant returns (uint balance) {\\n        return balances[_owner];\\n    }\\n\\n}\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * @dev https://github.com/ethereum/EIPs/issues/20\\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n */\\ncontract StandardToken is BasicToken, ERC20 {\\n\\n    mapping (address => mapping (address => uint)) public allowed;\\n\\n    uint public constant MAX_UINT = 2**256 - 1;\\n\\n    /**\\n    * @dev Transfer tokens from one address to another\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\\n        var _allowance = allowed[_from][msg.sender];\\n\\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\\n        // if (_value > _allowance) throw;\\n\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        if (_allowance < MAX_UINT) {\\n            allowed[_from][msg.sender] = _allowance.sub(_value);\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[_from] = balances[_from].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(_from, owner, fee);\\n        }\\n        Transfer(_from, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\\n\\n        allowed[msg.sender][_spender] = _value;\\n        Approval(msg.sender, _spender, _value);\\n    }\\n\\n    /**\\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\\n    * @param _owner address The address which owns the funds.\\n    * @param _spender address The address which will spend the funds.\\n    * @return A uint specifying the amount of tokens still available for the spender.\\n    */\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n}\\n\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Ownable {\\n  event Pause();\\n  event Unpause();\\n\\n  bool public paused = false;\\n\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\n   */\\n  modifier whenNotPaused() {\\n    require(!paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is paused.\\n   */\\n  modifier whenPaused() {\\n    require(paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev called by the owner to pause, triggers stopped state\\n   */\\n  function pause() onlyOwner whenNotPaused public {\\n    paused = true;\\n    Pause();\\n  }\\n\\n  /**\\n   * @dev called by the owner to unpause, returns to normal state\\n   */\\n  function unpause() onlyOwner whenPaused public {\\n    paused = false;\\n    Unpause();\\n  }\\n}\\n\\ncontract BlackList is Ownable, BasicToken {\\n\\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\\n    function getBlackListStatus(address _maker) external constant returns (bool) {\\n        return isBlackListed[_maker];\\n    }\\n\\n    function getOwner() external constant returns (address) {\\n        return owner;\\n    }\\n\\n    mapping (address => bool) public isBlackListed;\\n    \\n    function addBlackList (address _evilUser) public onlyOwner {\\n        isBlackListed[_evilUser] = true;\\n        AddedBlackList(_evilUser);\\n    }\\n\\n    function removeBlackList (address _clearedUser) public onlyOwner {\\n        isBlackListed[_clearedUser] = false;\\n        RemovedBlackList(_clearedUser);\\n    }\\n\\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\\n        require(isBlackListed[_blackListedUser]);\\n        uint dirtyFunds = balanceOf(_blackListedUser);\\n        balances[_blackListedUser] = 0;\\n        _totalSupply -= dirtyFunds;\\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\\n    }\\n\\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\\n\\n    event AddedBlackList(address _user);\\n\\n    event RemovedBlackList(address _user);\\n\\n}\\n\\ncontract UpgradedStandardToken is StandardToken{\\n    // those methods are called by the legacy contract\\n    // and they must ensure msg.sender to be the contract address\\n    function transferByLegacy(address from, address to, uint value) public;\\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\\n    function approveByLegacy(address from, address spender, uint value) public;\\n}\\n\\ncontract TetherToken is Pausable, StandardToken, BlackList {\\n\\n    string public name;\\n    string public symbol;\\n    uint public decimals;\\n    address public upgradedAddress;\\n    bool public deprecated;\\n\\n    //  The contract can be initialized with a number of tokens\\n    //  All the tokens are deposited to the owner address\\n    //\\n    // @param _balance Initial supply of the contract\\n    // @param _name Token Name\\n    // @param _symbol Token symbol\\n    // @param _decimals Token decimals\\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\\n        _totalSupply = _initialSupply;\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n        balances[owner] = _initialSupply;\\n        deprecated = false;\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transfer(address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[msg.sender]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\\n        } else {\\n            return super.transfer(_to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[_from]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\\n        } else {\\n            return super.transferFrom(_from, _to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function balanceOf(address who) public constant returns (uint) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\\n        } else {\\n            return super.balanceOf(who);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\\n        } else {\\n            return super.approve(_spender, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\\n        } else {\\n            return super.allowance(_owner, _spender);\\n        }\\n    }\\n\\n    // deprecate current contract in favour of a new one\\n    function deprecate(address _upgradedAddress) public onlyOwner {\\n        deprecated = true;\\n        upgradedAddress = _upgradedAddress;\\n        Deprecate(_upgradedAddress);\\n    }\\n\\n    // deprecate current contract if favour of a new one\\n    function totalSupply() public constant returns (uint) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).totalSupply();\\n        } else {\\n            return _totalSupply;\\n        }\\n    }\\n\\n    // Issue a new amount of tokens\\n    // these tokens are deposited into the owner address\\n    //\\n    // @param _amount Number of tokens to be issued\\n    function issue(uint amount) public onlyOwner {\\n        require(_totalSupply + amount > _totalSupply);\\n        require(balances[owner] + amount > balances[owner]);\\n\\n        balances[owner] += amount;\\n        _totalSupply += amount;\\n        Issue(amount);\\n    }\\n\\n    // Redeem tokens.\\n    // These tokens are withdrawn from the owner address\\n    // if the balance must be enough to cover the redeem\\n    // or the call will fail.\\n    // @param _amount Number of tokens to be issued\\n    function redeem(uint amount) public onlyOwner {\\n        require(_totalSupply >= amount);\\n        require(balances[owner] >= amount);\\n\\n        _totalSupply -= amount;\\n        balances[owner] -= amount;\\n        Redeem(amount);\\n    }\\n\\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\\n        require(newBasisPoints < 20);\\n        require(newMaxFee < 50);\\n\\n        basisPointsRate = newBasisPoints;\\n        maximumFee = newMaxFee.mul(10**decimals);\\n\\n        Params(basisPointsRate, maximumFee);\\n    }\\n\\n    // Called when new token are issued\\n    event Issue(uint amount);\\n\\n    // Called when tokens are redeemed\\n    event Redeem(uint amount);\\n\\n    // Called when contract is deprecated\\n    event Deprecate(address newAddress);\\n\\n    // Called if contract ever adds fees\\n    event Params(uint feeBasisPoints, uint maxFee);\\n}\",\"keccak256\":\"0x334636311066f7e833a950d3100859886a9afb77ecf2702b0320dca164ec88cc\"}},\"version\":1}",
          "userdoc": {
            "methods": {}
          }
        },
        "StandardToken": {
          "abi": [
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_spender",
                  "type": "address"
                },
                {
                  "name": "_value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_from",
                  "type": "address"
                },
                {
                  "name": "_to",
                  "type": "address"
                },
                {
                  "name": "_value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "balances",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "maximumFee",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "_totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "address"
                },
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowed",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_to",
                  "type": "address"
                },
                {
                  "name": "_value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "_owner",
                  "type": "address"
                },
                {
                  "name": "_spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "name": "remaining",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "basisPointsRate",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "MAX_UINT",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            }
          ],
          "devdoc": {
            "methods": {
              "allowance(address,address)": {
                "details": "Function to check the amount of tokens than an owner allowed to a spender.",
                "params": {
                  "_owner": "address The address which owns the funds.",
                  "_spender": "address The address which will spend the funds."
                },
                "return": "A uint specifying the amount of tokens still available for the spender."
              },
              "approve(address,uint256)": {
                "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.",
                "params": {
                  "_spender": "The address which will spend the funds.",
                  "_value": "The amount of tokens to be spent."
                }
              },
              "balanceOf(address)": {
                "details": "Gets the balance of the specified address.",
                "params": {
                  "_owner": "The address to query the the balance of."
                },
                "return": "An uint representing the amount owned by the passed address."
              },
              "transfer(address,uint256)": {
                "details": "transfer token for a specified address",
                "params": {
                  "_to": "The address to transfer to.",
                  "_value": "The amount to be transferred."
                }
              },
              "transferFrom(address,address,uint256)": {
                "details": "Transfer tokens from one address to another",
                "params": {
                  "_from": "address The address which you want to send tokens from",
                  "_to": "address The address which you want to transfer to",
                  "_value": "uint the amount of tokens to be transferred"
                }
              },
              "transferOwnership(address)": {
                "details": "Allows the current owner to transfer control of the contract to a newOwner.",
                "params": {
                  "newOwner": "The address to transfer ownership to."
                }
              }
            },
            "title": "Standard ERC20 token"
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "MAX_UINT()": "e5b5019a",
              "_totalSupply()": "3eaaf86b",
              "allowance(address,address)": "dd62ed3e",
              "allowed(address,address)": "5c658165",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "balances(address)": "27e235e3",
              "basisPointsRate()": "dd644f72",
              "maximumFee()": "35390714",
              "owner()": "8da5cb5b",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "",
          "userdoc": {
            "methods": {}
          }
        },
        "TetherToken": {
          "abi": [
            {
              "constant": true,
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "name": "",
                  "type": "string"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_upgradedAddress",
                  "type": "address"
                }
              ],
              "name": "deprecate",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_spender",
                  "type": "address"
                },
                {
                  "name": "_value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "deprecated",
              "outputs": [
                {
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_evilUser",
                  "type": "address"
                }
              ],
              "name": "addBlackList",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_from",
                  "type": "address"
                },
                {
                  "name": "_to",
                  "type": "address"
                },
                {
                  "name": "_value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "upgradedAddress",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "balances",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "maximumFee",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "_totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "_maker",
                  "type": "address"
                }
              ],
              "name": "getBlackListStatus",
              "outputs": [
                {
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "address"
                },
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowed",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "who",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getOwner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "name": "",
                  "type": "string"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_to",
                  "type": "address"
                },
                {
                  "name": "_value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "newBasisPoints",
                  "type": "uint256"
                },
                {
                  "name": "newMaxFee",
                  "type": "uint256"
                }
              ],
              "name": "setParams",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "issue",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "redeem",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "_owner",
                  "type": "address"
                },
                {
                  "name": "_spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "name": "remaining",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "basisPointsRate",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isBlackListed",
              "outputs": [
                {
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_clearedUser",
                  "type": "address"
                }
              ],
              "name": "removeBlackList",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "MAX_UINT",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_blackListedUser",
                  "type": "address"
                }
              ],
              "name": "destroyBlackFunds",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "name": "_initialSupply",
                  "type": "uint256"
                },
                {
                  "name": "_name",
                  "type": "string"
                },
                {
                  "name": "_symbol",
                  "type": "string"
                },
                {
                  "name": "_decimals",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Issue",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Redeem",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "name": "newAddress",
                  "type": "address"
                }
              ],
              "name": "Deprecate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "name": "feeBasisPoints",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "name": "maxFee",
                  "type": "uint256"
                }
              ],
              "name": "Params",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "name": "_blackListedUser",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "_balance",
                  "type": "uint256"
                }
              ],
              "name": "DestroyedBlackFunds",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "name": "_user",
                  "type": "address"
                }
              ],
              "name": "AddedBlackList",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "name": "_user",
                  "type": "address"
                }
              ],
              "name": "RemovedBlackList",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [],
              "name": "Pause",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [],
              "name": "Unpause",
              "type": "event"
            }
          ],
          "devdoc": {
            "methods": {
              "pause()": {
                "details": "called by the owner to pause, triggers stopped state"
              },
              "transferOwnership(address)": {
                "details": "Allows the current owner to transfer control of the contract to a newOwner.",
                "params": {
                  "newOwner": "The address to transfer ownership to."
                }
              },
              "unpause()": {
                "details": "called by the owner to unpause, returns to normal state"
              }
            }
          },
          "evm": {
            "assembly": "    /* \"contracts/test/TetherToken.sol\":9693:14474  contract TetherToken is Pausable, StandardToken, BlackList {... */\n  mstore(0x40, 0x60)\n    /* \"contracts/test/TetherToken.sol\":7370:7375  false */\n  0x0\n    /* \"contracts/test/TetherToken.sol\":7349:7375  bool public paused = false */\n  dup1\n  exp(0x100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/test/TetherToken.sol\":3036:3037  0 */\n  0x0\n    /* \"contracts/test/TetherToken.sol\":3006:3037  uint public basisPointsRate = 0 */\n  0x3\n  sstore\n    /* \"contracts/test/TetherToken.sol\":3068:3069  0 */\n  0x0\n    /* \"contracts/test/TetherToken.sol\":3043:3069  uint public maximumFee = 0 */\n  0x4\n  sstore\n    /* \"contracts/test/TetherToken.sol\":10188:10477  function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  dup1\n  mload\n  dup3\n  add\n  swap2\n  swap1\n  0x20\n  add\n  dup1\n  mload\n  dup3\n  add\n  swap2\n  swap1\n  0x20\n  add\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  pop\n  pop\n    /* \"contracts/test/TetherToken.sol\":1351:1361  msg.sender */\n  caller\n    /* \"contracts/test/TetherToken.sol\":1343:1348  owner */\n  0x0\n  dup1\n    /* \"contracts/test/TetherToken.sol\":1343:1361  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/test/TetherToken.sol\":10308:10322  _initialSupply */\n  dup4\n    /* \"contracts/test/TetherToken.sol\":10293:10305  _totalSupply */\n  0x1\n    /* \"contracts/test/TetherToken.sol\":10293:10322  _totalSupply = _initialSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/test/TetherToken.sol\":10339:10344  _name */\n  dup3\n    /* \"contracts/test/TetherToken.sol\":10332:10336  name */\n  0x7\n    /* \"contracts/test/TetherToken.sol\":10332:10344  name = _name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_7)\ntag_6:\n  pop\n    /* \"contracts/test/TetherToken.sol\":10363:10370  _symbol */\n  dup2\n    /* \"contracts/test/TetherToken.sol\":10354:10360  symbol */\n  0x8\n    /* \"contracts/test/TetherToken.sol\":10354:10370  symbol = _symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_7)\ntag_8:\n  pop\n    /* \"contracts/test/TetherToken.sol\":10391:10400  _decimals */\n  dup1\n    /* \"contracts/test/TetherToken.sol\":10380:10388  decimals */\n  0x9\n    /* \"contracts/test/TetherToken.sol\":10380:10400  decimals = _decimals */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/test/TetherToken.sol\":10428:10442  _initialSupply */\n  dup4\n    /* \"contracts/test/TetherToken.sol\":10410:10418  balances */\n  0x2\n    /* \"contracts/test/TetherToken.sol\":10410:10425  balances[owner] */\n  0x0\n    /* \"contracts/test/TetherToken.sol\":10419:10424  owner */\n  dup1\n  0x0\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/test/TetherToken.sol\":10410:10425  balances[owner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"contracts/test/TetherToken.sol\":10410:10442  balances[owner] = _initialSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/test/TetherToken.sol\":10465:10470  false */\n  0x0\n    /* \"contracts/test/TetherToken.sol\":10452:10462  deprecated */\n  0xa\n  0x14\n    /* \"contracts/test/TetherToken.sol\":10452:10470  deprecated = false */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/test/TetherToken.sol\":10188:10477  function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/test/TetherToken.sol\":9693:14474  contract TetherToken is Pausable, StandardToken, BlackList {... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  0x1\n  dup2\n  0x1\n  and\n  iszero\n  0x100\n  mul\n  sub\n  and\n  0x2\n  swap1\n  div\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_11\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_10)\ntag_11:\n  dup3\n  dup1\n  add\n  0x1\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_10\n  jumpi\n  swap2\n  dup3\n  add\ntag_12:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_12)\ntag_13:\ntag_10:\n  pop\n  swap1\n  pop\n  tag_14\n  swap2\n  swap1\n  jump\t// in(tag_15)\ntag_14:\n  pop\n  swap1\n  jump\t// out\ntag_15:\n  tag_16\n  swap2\n  swap1\ntag_17:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_18\n  jumpi\n  0x0\n  dup2\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_17)\ntag_18:\n  pop\n  swap1\n  jump\ntag_16:\n  swap1\n  jump\t// out\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/test/TetherToken.sol\":9693:14474  contract TetherToken is Pausable, StandardToken, BlackList {... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, iszero(calldatasize))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x6fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x753c30c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe136b19\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xecb93c0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x26976e3f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x35390714\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3eaaf86b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x59bf1abe\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5c658165\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc0324c77\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xcc872b66\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdb006a75\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd644f72\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe47d6060\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe4997dc5\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe5b5019a\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf3bdc228\n      eq\n      tag_33\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/test/TetherToken.sol\":9759:9777  string public name */\n    tag_2:\n      jumpi(tag_34, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_34:\n      tag_35\n      jump(tag_36)\n    tag_35:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_37:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_37)\n    tag_38:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_40\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_40:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":12445:12622  function deprecate(address _upgradedAddress) public onlyOwner {... */\n    tag_3:\n      jumpi(tag_41, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_41:\n      tag_42\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_43)\n    tag_42:\n      stop\n        /* \"contracts/test/TetherToken.sol\":11717:12013  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_4:\n      jumpi(tag_44, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_44:\n      tag_45\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_46)\n    tag_45:\n      stop\n        /* \"contracts/test/TetherToken.sol\":9871:9893  bool public deprecated */\n    tag_5:\n      jumpi(tag_47, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_47:\n      tag_48\n      jump(tag_49)\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":8470:8612  function addBlackList (address _evilUser) public onlyOwner {... */\n    tag_6:\n      jumpi(tag_50, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_50:\n      tag_51\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_52)\n    tag_51:\n      stop\n        /* \"contracts/test/TetherToken.sol\":12685:12897  function totalSupply() public constant returns (uint) {... */\n    tag_7:\n      jumpi(tag_53, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_53:\n      tag_54\n      jump(tag_55)\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":10960:11315  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {... */\n    tag_8:\n      jumpi(tag_56, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_56:\n      tag_57\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_58)\n    tag_57:\n      stop\n        /* \"contracts/test/TetherToken.sol\":9835:9865  address public upgradedAddress */\n    tag_9:\n      jumpi(tag_59, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_59:\n      tag_60\n      jump(tag_61)\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":2881:2921  mapping(address => uint) public balances */\n    tag_10:\n      jumpi(tag_62, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_62:\n      tag_63\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_64)\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":9809:9829  uint public decimals */\n    tag_11:\n      jumpi(tag_65, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_65:\n      tag_66\n      jump(tag_67)\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":3043:3069  uint public maximumFee = 0 */\n    tag_12:\n      jumpi(tag_68, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_68:\n      tag_69\n      jump(tag_70)\n    tag_69:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":2008:2032  uint public _totalSupply */\n    tag_13:\n      jumpi(tag_71, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_71:\n      tag_72\n      jump(tag_73)\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":7935:8022  function unpause() onlyOwner whenPaused public {... */\n    tag_14:\n      jumpi(tag_74, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_74:\n      tag_75\n      jump(tag_76)\n    tag_75:\n      stop\n        /* \"contracts/test/TetherToken.sol\":8194:8316  function getBlackListStatus(address _maker) external constant returns (bool) {... */\n    tag_15:\n      jumpi(tag_77, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_77:\n      tag_78\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_79)\n    tag_78:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":4617:4678  mapping (address => mapping (address => uint)) public allowed */\n    tag_16:\n      jumpi(tag_80, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_80:\n      tag_81\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_82)\n    tag_81:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":7349:7375  bool public paused = false */\n    tag_17:\n      jumpi(tag_83, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_83:\n      tag_84\n      jump(tag_85)\n    tag_84:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":11397:11635  function balanceOf(address who) public constant returns (uint) {... */\n    tag_18:\n      jumpi(tag_86, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_86:\n      tag_87\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_88)\n    tag_87:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":7768:7853  function pause() onlyOwner whenNotPaused public {... */\n    tag_19:\n      jumpi(tag_89, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_89:\n      tag_90\n      jump(tag_91)\n    tag_90:\n      stop\n        /* \"contracts/test/TetherToken.sol\":8322:8407  function getOwner() external constant returns (address) {... */\n    tag_20:\n      jumpi(tag_92, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_92:\n      tag_93\n      jump(tag_94)\n    tag_93:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":1153:1173  address public owner */\n    tag_21:\n      jumpi(tag_95, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_95:\n      tag_96\n      jump(tag_97)\n    tag_96:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":9783:9803  string public symbol */\n    tag_22:\n      jumpi(tag_98, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_98:\n      tag_99\n      jump(tag_100)\n    tag_99:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_101:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_102\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_101)\n    tag_102:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_104:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":10559:10878  function transfer(address _to, uint _value) public whenNotPaused {... */\n    tag_23:\n      jumpi(tag_105, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_105:\n      tag_106\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_107)\n    tag_106:\n      stop\n        /* \"contracts/test/TetherToken.sol\":13774:14152  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {... */\n    tag_24:\n      jumpi(tag_108, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_108:\n      tag_109\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_110)\n    tag_109:\n      stop\n        /* \"contracts/test/TetherToken.sol\":13055:13314  function issue(uint amount) public onlyOwner {... */\n    tag_25:\n      jumpi(tag_111, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_111:\n      tag_112\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_113)\n    tag_112:\n      stop\n        /* \"contracts/test/TetherToken.sol\":13538:13768  function redeem(uint amount) public onlyOwner {... */\n    tag_26:\n      jumpi(tag_114, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_114:\n      tag_115\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_116)\n    tag_115:\n      stop\n        /* \"contracts/test/TetherToken.sol\":12095:12382  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_27:\n      jumpi(tag_117, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_117:\n      tag_118\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_119)\n    tag_118:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":3006:3037  uint public basisPointsRate = 0 */\n    tag_28:\n      jumpi(tag_120, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_120:\n      tag_121\n      jump(tag_122)\n    tag_121:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":8413:8459  mapping (address => bool) public isBlackListed */\n    tag_29:\n      jumpi(tag_123, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_123:\n      tag_124\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_125)\n    tag_124:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":8618:8775  function removeBlackList (address _clearedUser) public onlyOwner {... */\n    tag_30:\n      jumpi(tag_126, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_126:\n      tag_127\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_128)\n    tag_127:\n      stop\n        /* \"contracts/test/TetherToken.sol\":4685:4727  uint public constant MAX_UINT = 2**256 - 1 */\n    tag_31:\n      jumpi(tag_129, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_129:\n      tag_130\n      jump(tag_131)\n    tag_130:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test/TetherToken.sol\":1703:1850  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_32:\n      jumpi(tag_132, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_132:\n      tag_133\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_134)\n    tag_133:\n      stop\n        /* \"contracts/test/TetherToken.sol\":8781:9099  function destroyBlackFunds (address _blackListedUser) public onlyOwner {... */\n    tag_33:\n      jumpi(tag_135, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_135:\n      tag_136\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_137)\n    tag_136:\n      stop\n        /* \"contracts/test/TetherToken.sol\":9759:9777  string public name */\n    tag_36:\n      0x7\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_138\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_139\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_138)\n    tag_139:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_140:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_140\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":12445:12622  function deprecate(address _upgradedAddress) public onlyOwner {... */\n    tag_43:\n        /* \"contracts/test/TetherToken.sol\":1511:1516  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1507  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/test/TetherToken.sol\":1489:1517  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_142\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_142:\n        /* \"contracts/test/TetherToken.sol\":12530:12534  true */\n      0x1\n        /* \"contracts/test/TetherToken.sol\":12517:12527  deprecated */\n      0xa\n      0x14\n        /* \"contracts/test/TetherToken.sol\":12517:12534  deprecated = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":12562:12578  _upgradedAddress */\n      dup1\n        /* \"contracts/test/TetherToken.sol\":12544:12559  upgradedAddress */\n      0xa\n      0x0\n        /* \"contracts/test/TetherToken.sol\":12544:12578  upgradedAddress = _upgradedAddress */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":12588:12615  Deprecate(_upgradedAddress) */\n      0xcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e\n        /* \"contracts/test/TetherToken.sol\":12598:12614  _upgradedAddress */\n      dup2\n        /* \"contracts/test/TetherToken.sol\":12588:12615  Deprecate(_upgradedAddress) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/test/TetherToken.sol\":12445:12622  function deprecate(address _upgradedAddress) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":11717:12013  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_46:\n        /* \"contracts/test/TetherToken.sol\":11788:11794  2 * 32 */\n      0x40\n        /* \"contracts/test/TetherToken.sol\":3223:3224  4 */\n      0x4\n        /* \"contracts/test/TetherToken.sol\":3216:3220  size */\n      dup2\n        /* \"contracts/test/TetherToken.sol\":3216:3224  size + 4 */\n      add\n        /* \"contracts/test/TetherToken.sol\":3198:3206  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/test/TetherToken.sol\":3198:3213  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/test/TetherToken.sol\":3198:3224  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/test/TetherToken.sol\":3196:3225  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/test/TetherToken.sol\":3188:3226  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_145\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_145:\n        /* \"contracts/test/TetherToken.sol\":11810:11820  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/test/TetherToken.sol\":11806:12007  if (deprecated) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"contracts/test/TetherToken.sol\":11865:11880  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":11843:11897  UpgradedStandardToken(upgradedAddress).approveByLegacy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaee92d33\n        /* \"contracts/test/TetherToken.sol\":11898:11908  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":11910:11918  _spender */\n      dup6\n        /* \"contracts/test/TetherToken.sol\":11920:11926  _value */\n      dup6\n        /* \"contracts/test/TetherToken.sol\":11843:11927  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_148\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_148:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_149\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_149:\n      pop\n      pop\n      pop\n        /* \"contracts/test/TetherToken.sol\":11836:11927  return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      jump(tag_146)\n        /* \"contracts/test/TetherToken.sol\":11806:12007  if (deprecated) {... */\n    tag_147:\n        /* \"contracts/test/TetherToken.sol\":11965:11996  super.approve(_spender, _value) */\n      tag_151\n        /* \"contracts/test/TetherToken.sol\":11979:11987  _spender */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":11989:11995  _value */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":11965:11978  super.approve */\n      tag_152\n        /* \"contracts/test/TetherToken.sol\":11965:11996  super.approve(_spender, _value) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/test/TetherToken.sol\":3236:3237  _ */\n    tag_146:\n        /* \"contracts/test/TetherToken.sol\":11717:12013  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":9871:9893  bool public deprecated */\n    tag_49:\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":8470:8612  function addBlackList (address _evilUser) public onlyOwner {... */\n    tag_52:\n        /* \"contracts/test/TetherToken.sol\":1511:1516  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1507  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/test/TetherToken.sol\":1489:1517  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_154\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_154:\n        /* \"contracts/test/TetherToken.sol\":8566:8570  true */\n      0x1\n        /* \"contracts/test/TetherToken.sol\":8539:8552  isBlackListed */\n      0x6\n        /* \"contracts/test/TetherToken.sol\":8539:8563  isBlackListed[_evilUser] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":8553:8562  _evilUser */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":8539:8563  isBlackListed[_evilUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/test/TetherToken.sol\":8539:8570  isBlackListed[_evilUser] = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":8580:8605  AddedBlackList(_evilUser) */\n      0x42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc\n        /* \"contracts/test/TetherToken.sol\":8595:8604  _evilUser */\n      dup2\n        /* \"contracts/test/TetherToken.sol\":8580:8605  AddedBlackList(_evilUser) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/test/TetherToken.sol\":8470:8612  function addBlackList (address _evilUser) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":12685:12897  function totalSupply() public constant returns (uint) {... */\n    tag_55:\n        /* \"contracts/test/TetherToken.sol\":12733:12737  uint */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":12753:12763  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/test/TetherToken.sol\":12749:12891  if (deprecated) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"contracts/test/TetherToken.sol\":12800:12815  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":12786:12828  StandardToken(upgradedAddress).totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/test/TetherToken.sol\":12786:12830  StandardToken(upgradedAddress).totalSupply() */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_158\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_158:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_159\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_159:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/test/TetherToken.sol\":12779:12830  return StandardToken(upgradedAddress).totalSupply() */\n      swap1\n      pop\n      jump(tag_156)\n        /* \"contracts/test/TetherToken.sol\":12749:12891  if (deprecated) {... */\n    tag_157:\n        /* \"contracts/test/TetherToken.sol\":12868:12880  _totalSupply */\n      sload(0x1)\n        /* \"contracts/test/TetherToken.sol\":12861:12880  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/test/TetherToken.sol\":12685:12897  function totalSupply() public constant returns (uint) {... */\n    tag_156:\n      swap1\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":10960:11315  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {... */\n    tag_58:\n        /* \"contracts/test/TetherToken.sol\":7518:7524  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/test/TetherToken.sol\":7517:7524  !paused */\n      iszero\n        /* \"contracts/test/TetherToken.sol\":7509:7525  require(!paused) */\n      iszero\n      iszero\n      tag_162\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_162:\n        /* \"contracts/test/TetherToken.sol\":11063:11076  isBlackListed */\n      0x6\n        /* \"contracts/test/TetherToken.sol\":11063:11083  isBlackListed[_from] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":11077:11082  _from */\n      dup5\n        /* \"contracts/test/TetherToken.sol\":11063:11083  isBlackListed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/test/TetherToken.sol\":11062:11083  !isBlackListed[_from] */\n      iszero\n        /* \"contracts/test/TetherToken.sol\":11054:11084  require(!isBlackListed[_from]) */\n      iszero\n      iszero\n      tag_164\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_164:\n        /* \"contracts/test/TetherToken.sol\":11098:11108  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/test/TetherToken.sol\":11094:11309  if (deprecated) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"contracts/test/TetherToken.sol\":11153:11168  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":11131:11190  UpgradedStandardToken(upgradedAddress).transferFromByLegacy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8b477adb\n        /* \"contracts/test/TetherToken.sol\":11191:11201  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":11203:11208  _from */\n      dup6\n        /* \"contracts/test/TetherToken.sol\":11210:11213  _to */\n      dup6\n        /* \"contracts/test/TetherToken.sol\":11215:11221  _value */\n      dup6\n        /* \"contracts/test/TetherToken.sol\":11131:11222  UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_166\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_166:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_167\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_167:\n      pop\n      pop\n      pop\n        /* \"contracts/test/TetherToken.sol\":11124:11222  return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      jump(tag_163)\n        /* \"contracts/test/TetherToken.sol\":11094:11309  if (deprecated) {... */\n    tag_165:\n        /* \"contracts/test/TetherToken.sol\":11260:11298  super.transferFrom(_from, _to, _value) */\n      tag_169\n        /* \"contracts/test/TetherToken.sol\":11279:11284  _from */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":11286:11289  _to */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":11291:11297  _value */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":11260:11278  super.transferFrom */\n      tag_170\n        /* \"contracts/test/TetherToken.sol\":11260:11298  super.transferFrom(_from, _to, _value) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/test/TetherToken.sol\":7531:7532  _ */\n    tag_163:\n        /* \"contracts/test/TetherToken.sol\":10960:11315  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":9835:9865  address public upgradedAddress */\n    tag_61:\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":2881:2921  mapping(address => uint) public balances */\n    tag_64:\n      mstore(0x20, 0x2)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":9809:9829  uint public decimals */\n    tag_67:\n      sload(0x9)\n      dup2\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":3043:3069  uint public maximumFee = 0 */\n    tag_70:\n      sload(0x4)\n      dup2\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":2008:2032  uint public _totalSupply */\n    tag_73:\n      sload(0x1)\n      dup2\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":7935:8022  function unpause() onlyOwner whenPaused public {... */\n    tag_76:\n        /* \"contracts/test/TetherToken.sol\":1511:1516  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1507  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/test/TetherToken.sol\":1489:1517  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_172\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_172:\n        /* \"contracts/test/TetherToken.sol\":7670:7676  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/test/TetherToken.sol\":7662:7677  require(paused) */\n      iszero\n      iszero\n      tag_174\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_174:\n        /* \"contracts/test/TetherToken.sol\":7997:8002  false */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":7988:7994  paused */\n      dup1\n      0x14\n        /* \"contracts/test/TetherToken.sol\":7988:8002  paused = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":8008:8017  Unpause() */\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/test/TetherToken.sol\":7935:8022  function unpause() onlyOwner whenPaused public {... */\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":8194:8316  function getBlackListStatus(address _maker) external constant returns (bool) {... */\n    tag_79:\n        /* \"contracts/test/TetherToken.sol\":8265:8269  bool */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":8288:8301  isBlackListed */\n      0x6\n        /* \"contracts/test/TetherToken.sol\":8288:8309  isBlackListed[_maker] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":8302:8308  _maker */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":8288:8309  isBlackListed[_maker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/test/TetherToken.sol\":8281:8309  return isBlackListed[_maker] */\n      swap1\n      pop\n        /* \"contracts/test/TetherToken.sol\":8194:8316  function getBlackListStatus(address _maker) external constant returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":4617:4678  mapping (address => mapping (address => uint)) public allowed */\n    tag_82:\n      mstore(0x20, 0x5)\n      dup2\n      0x0\n      mstore\n      mstore(0x20, keccak256(0x0, 0x40))\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":7349:7375  bool public paused = false */\n    tag_85:\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":11397:11635  function balanceOf(address who) public constant returns (uint) {... */\n    tag_88:\n        /* \"contracts/test/TetherToken.sol\":11454:11458  uint */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":11474:11484  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/test/TetherToken.sol\":11470:11629  if (deprecated) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"contracts/test/TetherToken.sol\":11529:11544  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":11507:11555  UpgradedStandardToken(upgradedAddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/test/TetherToken.sol\":11556:11559  who */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":11507:11560  UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_179\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_179:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_180\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_180:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/test/TetherToken.sol\":11500:11560  return UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      swap1\n      pop\n      jump(tag_177)\n        /* \"contracts/test/TetherToken.sol\":11470:11629  if (deprecated) {... */\n    tag_178:\n        /* \"contracts/test/TetherToken.sol\":11598:11618  super.balanceOf(who) */\n      tag_182\n        /* \"contracts/test/TetherToken.sol\":11614:11617  who */\n      dup3\n        /* \"contracts/test/TetherToken.sol\":11598:11613  super.balanceOf */\n      tag_183\n        /* \"contracts/test/TetherToken.sol\":11598:11618  super.balanceOf(who) */\n      jump\t// in\n    tag_182:\n        /* \"contracts/test/TetherToken.sol\":11591:11618  return super.balanceOf(who) */\n      swap1\n      pop\n        /* \"contracts/test/TetherToken.sol\":11397:11635  function balanceOf(address who) public constant returns (uint) {... */\n    tag_177:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":7768:7853  function pause() onlyOwner whenNotPaused public {... */\n    tag_91:\n        /* \"contracts/test/TetherToken.sol\":1511:1516  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1507  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/test/TetherToken.sol\":1489:1517  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_185\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_185:\n        /* \"contracts/test/TetherToken.sol\":7518:7524  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/test/TetherToken.sol\":7517:7524  !paused */\n      iszero\n        /* \"contracts/test/TetherToken.sol\":7509:7525  require(!paused) */\n      iszero\n      iszero\n      tag_187\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_187:\n        /* \"contracts/test/TetherToken.sol\":7831:7835  true */\n      0x1\n        /* \"contracts/test/TetherToken.sol\":7822:7828  paused */\n      0x0\n      0x14\n        /* \"contracts/test/TetherToken.sol\":7822:7835  paused = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":7841:7848  Pause() */\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/test/TetherToken.sol\":7768:7853  function pause() onlyOwner whenNotPaused public {... */\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":8322:8407  function getOwner() external constant returns (address) {... */\n    tag_94:\n        /* \"contracts/test/TetherToken.sol\":8369:8376  address */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":8395:8400  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":8388:8400  return owner */\n      swap1\n      pop\n        /* \"contracts/test/TetherToken.sol\":8322:8407  function getOwner() external constant returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":1153:1173  address public owner */\n    tag_97:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":9783:9803  string public symbol */\n    tag_100:\n      0x8\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_190\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_191\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_190)\n    tag_191:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_192:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_192\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":10559:10878  function transfer(address _to, uint _value) public whenNotPaused {... */\n    tag_107:\n        /* \"contracts/test/TetherToken.sol\":7518:7524  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/test/TetherToken.sol\":7517:7524  !paused */\n      iszero\n        /* \"contracts/test/TetherToken.sol\":7509:7525  require(!paused) */\n      iszero\n      iszero\n      tag_194\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_194:\n        /* \"contracts/test/TetherToken.sol\":10643:10656  isBlackListed */\n      0x6\n        /* \"contracts/test/TetherToken.sol\":10643:10668  isBlackListed[msg.sender] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":10657:10667  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":10643:10668  isBlackListed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/test/TetherToken.sol\":10642:10668  !isBlackListed[msg.sender] */\n      iszero\n        /* \"contracts/test/TetherToken.sol\":10634:10669  require(!isBlackListed[msg.sender]) */\n      iszero\n      iszero\n      tag_196\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_196:\n        /* \"contracts/test/TetherToken.sol\":10683:10693  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/test/TetherToken.sol\":10679:10872  if (deprecated) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/test/TetherToken.sol\":10738:10753  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":10716:10771  UpgradedStandardToken(upgradedAddress).transferByLegacy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6e18980a\n        /* \"contracts/test/TetherToken.sol\":10772:10782  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":10784:10787  _to */\n      dup5\n        /* \"contracts/test/TetherToken.sol\":10789:10795  _value */\n      dup5\n        /* \"contracts/test/TetherToken.sol\":10716:10796  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_198\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_198:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_199\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_199:\n      pop\n      pop\n      pop\n        /* \"contracts/test/TetherToken.sol\":10709:10796  return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      jump(tag_195)\n        /* \"contracts/test/TetherToken.sol\":10679:10872  if (deprecated) {... */\n    tag_197:\n        /* \"contracts/test/TetherToken.sol\":10834:10861  super.transfer(_to, _value) */\n      tag_201\n        /* \"contracts/test/TetherToken.sol\":10849:10852  _to */\n      dup3\n        /* \"contracts/test/TetherToken.sol\":10854:10860  _value */\n      dup3\n        /* \"contracts/test/TetherToken.sol\":10834:10848  super.transfer */\n      tag_202\n        /* \"contracts/test/TetherToken.sol\":10834:10861  super.transfer(_to, _value) */\n      jump\t// in\n    tag_201:\n        /* \"contracts/test/TetherToken.sol\":7531:7532  _ */\n    tag_195:\n        /* \"contracts/test/TetherToken.sol\":10559:10878  function transfer(address _to, uint _value) public whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":13774:14152  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {... */\n    tag_110:\n        /* \"contracts/test/TetherToken.sol\":1511:1516  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1507  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/test/TetherToken.sol\":1489:1517  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_204\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_204:\n        /* \"contracts/test/TetherToken.sol\":13970:13972  20 */\n      0x14\n        /* \"contracts/test/TetherToken.sol\":13953:13967  newBasisPoints */\n      dup3\n        /* \"contracts/test/TetherToken.sol\":13953:13972  newBasisPoints < 20 */\n      lt\n        /* \"contracts/test/TetherToken.sol\":13945:13973  require(newBasisPoints < 20) */\n      iszero\n      iszero\n      tag_206\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_206:\n        /* \"contracts/test/TetherToken.sol\":14003:14005  50 */\n      0x32\n        /* \"contracts/test/TetherToken.sol\":13991:14000  newMaxFee */\n      dup2\n        /* \"contracts/test/TetherToken.sol\":13991:14005  newMaxFee < 50 */\n      lt\n        /* \"contracts/test/TetherToken.sol\":13983:14006  require(newMaxFee < 50) */\n      iszero\n      iszero\n      tag_207\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_207:\n        /* \"contracts/test/TetherToken.sol\":14035:14049  newBasisPoints */\n      dup2\n        /* \"contracts/test/TetherToken.sol\":14017:14032  basisPointsRate */\n      0x3\n        /* \"contracts/test/TetherToken.sol\":14017:14049  basisPointsRate = newBasisPoints */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":14072:14099  newMaxFee.mul(10**decimals) */\n      tag_208\n        /* \"contracts/test/TetherToken.sol\":14090:14098  decimals */\n      sload(0x9)\n        /* \"contracts/test/TetherToken.sol\":14086:14088  10 */\n      0xa\n        /* \"contracts/test/TetherToken.sol\":14086:14098  10**decimals */\n      exp\n        /* \"contracts/test/TetherToken.sol\":14072:14081  newMaxFee */\n      dup3\n        /* \"contracts/test/TetherToken.sol\":14072:14085  newMaxFee.mul */\n      tag_209\n      swap1\n        /* \"contracts/test/TetherToken.sol\":14072:14099  newMaxFee.mul(10**decimals) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"contracts/test/TetherToken.sol\":14059:14069  maximumFee */\n      0x4\n        /* \"contracts/test/TetherToken.sol\":14059:14099  maximumFee = newMaxFee.mul(10**decimals) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":14110:14145  Params(basisPointsRate, maximumFee) */\n      0xb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e\n        /* \"contracts/test/TetherToken.sol\":14117:14132  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/test/TetherToken.sol\":14134:14144  maximumFee */\n      sload(0x4)\n        /* \"contracts/test/TetherToken.sol\":14110:14145  Params(basisPointsRate, maximumFee) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/test/TetherToken.sol\":13774:14152  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":13055:13314  function issue(uint amount) public onlyOwner {... */\n    tag_113:\n        /* \"contracts/test/TetherToken.sol\":1511:1516  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1507  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/test/TetherToken.sol\":1489:1517  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_211\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_211:\n        /* \"contracts/test/TetherToken.sol\":13142:13154  _totalSupply */\n      sload(0x1)\n        /* \"contracts/test/TetherToken.sol\":13133:13139  amount */\n      dup2\n        /* \"contracts/test/TetherToken.sol\":13118:13130  _totalSupply */\n      sload(0x1)\n        /* \"contracts/test/TetherToken.sol\":13118:13139  _totalSupply + amount */\n      add\n        /* \"contracts/test/TetherToken.sol\":13118:13154  _totalSupply + amount > _totalSupply */\n      gt\n        /* \"contracts/test/TetherToken.sol\":13110:13155  require(_totalSupply + amount > _totalSupply) */\n      iszero\n      iszero\n      tag_213\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_213:\n        /* \"contracts/test/TetherToken.sol\":13200:13208  balances */\n      0x2\n        /* \"contracts/test/TetherToken.sol\":13200:13215  balances[owner] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":13209:13214  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":13200:13215  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/test/TetherToken.sol\":13191:13197  amount */\n      dup2\n        /* \"contracts/test/TetherToken.sol\":13173:13181  balances */\n      0x2\n        /* \"contracts/test/TetherToken.sol\":13173:13188  balances[owner] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":13182:13187  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":13173:13188  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/test/TetherToken.sol\":13173:13197  balances[owner] + amount */\n      add\n        /* \"contracts/test/TetherToken.sol\":13173:13215  balances[owner] + amount > balances[owner] */\n      gt\n        /* \"contracts/test/TetherToken.sol\":13165:13216  require(balances[owner] + amount > balances[owner]) */\n      iszero\n      iszero\n      tag_214\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_214:\n        /* \"contracts/test/TetherToken.sol\":13246:13252  amount */\n      dup1\n        /* \"contracts/test/TetherToken.sol\":13227:13235  balances */\n      0x2\n        /* \"contracts/test/TetherToken.sol\":13227:13242  balances[owner] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":13236:13241  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":13227:13242  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/test/TetherToken.sol\":13227:13252  balances[owner] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":13278:13284  amount */\n      dup1\n        /* \"contracts/test/TetherToken.sol\":13262:13274  _totalSupply */\n      0x1\n      0x0\n        /* \"contracts/test/TetherToken.sol\":13262:13284  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":13294:13307  Issue(amount) */\n      0xcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a\n        /* \"contracts/test/TetherToken.sol\":13300:13306  amount */\n      dup2\n        /* \"contracts/test/TetherToken.sol\":13294:13307  Issue(amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/test/TetherToken.sol\":13055:13314  function issue(uint amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":13538:13768  function redeem(uint amount) public onlyOwner {... */\n    tag_116:\n        /* \"contracts/test/TetherToken.sol\":1511:1516  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1507  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/test/TetherToken.sol\":1489:1517  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_216\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_216:\n        /* \"contracts/test/TetherToken.sol\":13618:13624  amount */\n      dup1\n        /* \"contracts/test/TetherToken.sol\":13602:13614  _totalSupply */\n      sload(0x1)\n        /* \"contracts/test/TetherToken.sol\":13602:13624  _totalSupply >= amount */\n      lt\n      iszero\n        /* \"contracts/test/TetherToken.sol\":13594:13625  require(_totalSupply >= amount) */\n      iszero\n      iszero\n      tag_218\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_218:\n        /* \"contracts/test/TetherToken.sol\":13662:13668  amount */\n      dup1\n        /* \"contracts/test/TetherToken.sol\":13643:13651  balances */\n      0x2\n        /* \"contracts/test/TetherToken.sol\":13643:13658  balances[owner] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":13652:13657  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":13643:13658  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/test/TetherToken.sol\":13643:13668  balances[owner] >= amount */\n      lt\n      iszero\n        /* \"contracts/test/TetherToken.sol\":13635:13669  require(balances[owner] >= amount) */\n      iszero\n      iszero\n      tag_219\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_219:\n        /* \"contracts/test/TetherToken.sol\":13696:13702  amount */\n      dup1\n        /* \"contracts/test/TetherToken.sol\":13680:13692  _totalSupply */\n      0x1\n      0x0\n        /* \"contracts/test/TetherToken.sol\":13680:13702  _totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":13731:13737  amount */\n      dup1\n        /* \"contracts/test/TetherToken.sol\":13712:13720  balances */\n      0x2\n        /* \"contracts/test/TetherToken.sol\":13712:13727  balances[owner] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":13721:13726  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":13712:13727  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/test/TetherToken.sol\":13712:13737  balances[owner] -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":13747:13761  Redeem(amount) */\n      0x702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44\n        /* \"contracts/test/TetherToken.sol\":13754:13760  amount */\n      dup2\n        /* \"contracts/test/TetherToken.sol\":13747:13761  Redeem(amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/test/TetherToken.sol\":13538:13768  function redeem(uint amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":12095:12382  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_119:\n        /* \"contracts/test/TetherToken.sol\":12173:12187  uint remaining */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":12203:12213  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/test/TetherToken.sol\":12199:12376  if (deprecated) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \"contracts/test/TetherToken.sol\":12250:12265  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":12236:12276  StandardToken(upgradedAddress).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/test/TetherToken.sol\":12277:12283  _owner */\n      dup5\n        /* \"contracts/test/TetherToken.sol\":12285:12293  _spender */\n      dup5\n        /* \"contracts/test/TetherToken.sol\":12236:12294  StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_222\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_222:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_223\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_223:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/test/TetherToken.sol\":12229:12294  return StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      swap1\n      pop\n      jump(tag_220)\n        /* \"contracts/test/TetherToken.sol\":12199:12376  if (deprecated) {... */\n    tag_221:\n        /* \"contracts/test/TetherToken.sol\":12332:12365  super.allowance(_owner, _spender) */\n      tag_225\n        /* \"contracts/test/TetherToken.sol\":12348:12354  _owner */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":12356:12364  _spender */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":12332:12347  super.allowance */\n      tag_226\n        /* \"contracts/test/TetherToken.sol\":12332:12365  super.allowance(_owner, _spender) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/test/TetherToken.sol\":12325:12365  return super.allowance(_owner, _spender) */\n      swap1\n      pop\n        /* \"contracts/test/TetherToken.sol\":12095:12382  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_220:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":3006:3037  uint public basisPointsRate = 0 */\n    tag_122:\n      sload(0x3)\n      dup2\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":8413:8459  mapping (address => bool) public isBlackListed */\n    tag_125:\n      mstore(0x20, 0x6)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":8618:8775  function removeBlackList (address _clearedUser) public onlyOwner {... */\n    tag_128:\n        /* \"contracts/test/TetherToken.sol\":1511:1516  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1507  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/test/TetherToken.sol\":1489:1517  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_228\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_228:\n        /* \"contracts/test/TetherToken.sol\":8723:8728  false */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":8693:8706  isBlackListed */\n      0x6\n        /* \"contracts/test/TetherToken.sol\":8693:8720  isBlackListed[_clearedUser] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":8707:8719  _clearedUser */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":8693:8720  isBlackListed[_clearedUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/test/TetherToken.sol\":8693:8728  isBlackListed[_clearedUser] = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":8738:8768  RemovedBlackList(_clearedUser) */\n      0xd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c\n        /* \"contracts/test/TetherToken.sol\":8755:8767  _clearedUser */\n      dup2\n        /* \"contracts/test/TetherToken.sol\":8738:8768  RemovedBlackList(_clearedUser) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/test/TetherToken.sol\":8618:8775  function removeBlackList (address _clearedUser) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":4685:4727  uint public constant MAX_UINT = 2**256 - 1 */\n    tag_131:\n        /* \"contracts/test/TetherToken.sol\":4717:4727  2**256 - 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/test/TetherToken.sol\":4685:4727  uint public constant MAX_UINT = 2**256 - 1 */\n      dup2\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":1703:1850  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_134:\n        /* \"contracts/test/TetherToken.sol\":1511:1516  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1507  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/test/TetherToken.sol\":1489:1517  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_231\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_231:\n        /* \"contracts/test/TetherToken.sol\":1799:1800  0 */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":1779:1801  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1779:1787  newOwner */\n      dup2\n        /* \"contracts/test/TetherToken.sol\":1779:1801  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/test/TetherToken.sol\":1775:1844  if (newOwner != address(0)) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"contracts/test/TetherToken.sol\":1825:1833  newOwner */\n      dup1\n        /* \"contracts/test/TetherToken.sol\":1817:1822  owner */\n      0x0\n      dup1\n        /* \"contracts/test/TetherToken.sol\":1817:1833  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":1775:1844  if (newOwner != address(0)) {... */\n    tag_233:\n        /* \"contracts/test/TetherToken.sol\":1703:1850  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":8781:9099  function destroyBlackFunds (address _blackListedUser) public onlyOwner {... */\n    tag_137:\n        /* \"contracts/test/TetherToken.sol\":8912:8927  uint dirtyFunds */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":1511:1516  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":1497:1507  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":1497:1516  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/test/TetherToken.sol\":1489:1517  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_235\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_235:\n        /* \"contracts/test/TetherToken.sol\":8870:8883  isBlackListed */\n      0x6\n        /* \"contracts/test/TetherToken.sol\":8870:8901  isBlackListed[_blackListedUser] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":8884:8900  _blackListedUser */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":8870:8901  isBlackListed[_blackListedUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/test/TetherToken.sol\":8862:8902  require(isBlackListed[_blackListedUser]) */\n      iszero\n      iszero\n      tag_237\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_237:\n        /* \"contracts/test/TetherToken.sol\":8930:8957  balanceOf(_blackListedUser) */\n      tag_238\n        /* \"contracts/test/TetherToken.sol\":8940:8956  _blackListedUser */\n      dup3\n        /* \"contracts/test/TetherToken.sol\":8930:8939  balanceOf */\n      tag_88\n        /* \"contracts/test/TetherToken.sol\":8930:8957  balanceOf(_blackListedUser) */\n      jump\t// in\n    tag_238:\n        /* \"contracts/test/TetherToken.sol\":8912:8957  uint dirtyFunds = balanceOf(_blackListedUser) */\n      swap1\n      pop\n        /* \"contracts/test/TetherToken.sol\":8996:8997  0 */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":8967:8975  balances */\n      0x2\n        /* \"contracts/test/TetherToken.sol\":8967:8993  balances[_blackListedUser] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":8976:8992  _blackListedUser */\n      dup5\n        /* \"contracts/test/TetherToken.sol\":8967:8993  balances[_blackListedUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/test/TetherToken.sol\":8967:8997  balances[_blackListedUser] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":9023:9033  dirtyFunds */\n      dup1\n        /* \"contracts/test/TetherToken.sol\":9007:9019  _totalSupply */\n      0x1\n      0x0\n        /* \"contracts/test/TetherToken.sol\":9007:9033  _totalSupply -= dirtyFunds */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":9043:9092  DestroyedBlackFunds(_blackListedUser, dirtyFunds) */\n      0x61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c6\n        /* \"contracts/test/TetherToken.sol\":9063:9079  _blackListedUser */\n      dup3\n        /* \"contracts/test/TetherToken.sol\":9081:9091  dirtyFunds */\n      dup3\n        /* \"contracts/test/TetherToken.sol\":9043:9092  DestroyedBlackFunds(_blackListedUser, dirtyFunds) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/test/TetherToken.sol\":8781:9099  function destroyBlackFunds (address _blackListedUser) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":6129:6692  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_152:\n        /* \"contracts/test/TetherToken.sol\":6200:6206  2 * 32 */\n      0x40\n        /* \"contracts/test/TetherToken.sol\":3223:3224  4 */\n      0x4\n        /* \"contracts/test/TetherToken.sol\":3216:3220  size */\n      dup2\n        /* \"contracts/test/TetherToken.sol\":3216:3224  size + 4 */\n      add\n        /* \"contracts/test/TetherToken.sol\":3198:3206  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/test/TetherToken.sol\":3198:3213  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/test/TetherToken.sol\":3198:3224  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/test/TetherToken.sol\":3196:3225  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/test/TetherToken.sol\":3188:3226  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_240\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_240:\n        /* \"contracts/test/TetherToken.sol\":6544:6545  0 */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":6534:6540  _value */\n      dup3\n        /* \"contracts/test/TetherToken.sol\":6534:6545  _value != 0 */\n      eq\n      iszero\n        /* \"contracts/test/TetherToken.sol\":6533:6586  (_value != 0) && (allowed[msg.sender][_spender] != 0) */\n      dup1\n      iszero\n      tag_242\n      jumpi\n      pop\n        /* \"contracts/test/TetherToken.sol\":6584:6585  0 */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":6551:6558  allowed */\n      0x5\n        /* \"contracts/test/TetherToken.sol\":6551:6570  allowed[msg.sender] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":6559:6569  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":6551:6570  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/test/TetherToken.sol\":6551:6580  allowed[msg.sender][_spender] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":6571:6579  _spender */\n      dup6\n        /* \"contracts/test/TetherToken.sol\":6551:6580  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/test/TetherToken.sol\":6551:6585  allowed[msg.sender][_spender] != 0 */\n      eq\n      iszero\n        /* \"contracts/test/TetherToken.sol\":6533:6586  (_value != 0) && (allowed[msg.sender][_spender] != 0) */\n    tag_242:\n        /* \"contracts/test/TetherToken.sol\":6531:6587  !((_value != 0) && (allowed[msg.sender][_spender] != 0)) */\n      iszero\n        /* \"contracts/test/TetherToken.sol\":6523:6588  require(!((_value != 0) && (allowed[msg.sender][_spender] != 0))) */\n      iszero\n      iszero\n      tag_243\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_243:\n        /* \"contracts/test/TetherToken.sol\":6631:6637  _value */\n      dup2\n        /* \"contracts/test/TetherToken.sol\":6599:6606  allowed */\n      0x5\n        /* \"contracts/test/TetherToken.sol\":6599:6618  allowed[msg.sender] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":6607:6617  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":6599:6618  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/test/TetherToken.sol\":6599:6628  allowed[msg.sender][_spender] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":6619:6627  _spender */\n      dup6\n        /* \"contracts/test/TetherToken.sol\":6599:6628  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/test/TetherToken.sol\":6599:6637  allowed[msg.sender][_spender] = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":6668:6676  _spender */\n      dup3\n        /* \"contracts/test/TetherToken.sol\":6647:6685  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":6656:6666  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":6647:6685  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/test/TetherToken.sol\":6678:6684  _value */\n      dup5\n        /* \"contracts/test/TetherToken.sol\":6647:6685  Approval(msg.sender, _spender, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/test/TetherToken.sol\":6129:6692  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":5009:5889  function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {... */\n    tag_170:\n        /* \"contracts/test/TetherToken.sol\":5113:5127  var _allowance */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":5322:5330  uint fee */\n      dup1\n        /* \"contracts/test/TetherToken.sol\":5567:5582  uint sendAmount */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":5095:5101  3 * 32 */\n      0x60\n        /* \"contracts/test/TetherToken.sol\":3223:3224  4 */\n      0x4\n        /* \"contracts/test/TetherToken.sol\":3216:3220  size */\n      dup2\n        /* \"contracts/test/TetherToken.sol\":3216:3224  size + 4 */\n      add\n        /* \"contracts/test/TetherToken.sol\":3198:3206  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/test/TetherToken.sol\":3198:3213  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/test/TetherToken.sol\":3198:3224  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/test/TetherToken.sol\":3196:3225  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/test/TetherToken.sol\":3188:3226  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_245\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_245:\n        /* \"contracts/test/TetherToken.sol\":5130:5137  allowed */\n      0x5\n        /* \"contracts/test/TetherToken.sol\":5130:5144  allowed[_from] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":5138:5143  _from */\n      dup9\n        /* \"contracts/test/TetherToken.sol\":5130:5144  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/test/TetherToken.sol\":5130:5156  allowed[_from][msg.sender] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":5145:5155  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":5130:5156  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/test/TetherToken.sol\":5113:5156  var _allowance = allowed[_from][msg.sender] */\n      swap4\n      pop\n        /* \"contracts/test/TetherToken.sol\":5333:5373  (_value.mul(basisPointsRate)).div(10000) */\n      tag_247\n        /* \"contracts/test/TetherToken.sol\":5367:5372  10000 */\n      0x2710\n        /* \"contracts/test/TetherToken.sol\":5334:5361  _value.mul(basisPointsRate) */\n      tag_248\n        /* \"contracts/test/TetherToken.sol\":5345:5360  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/test/TetherToken.sol\":5334:5340  _value */\n      dup9\n        /* \"contracts/test/TetherToken.sol\":5334:5344  _value.mul */\n      tag_209\n      swap1\n        /* \"contracts/test/TetherToken.sol\":5334:5361  _value.mul(basisPointsRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_248:\n        /* \"contracts/test/TetherToken.sol\":5333:5366  (_value.mul(basisPointsRate)).div */\n      tag_249\n      swap1\n        /* \"contracts/test/TetherToken.sol\":5333:5373  (_value.mul(basisPointsRate)).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_247:\n        /* \"contracts/test/TetherToken.sol\":5322:5373  uint fee = (_value.mul(basisPointsRate)).div(10000) */\n      swap3\n      pop\n        /* \"contracts/test/TetherToken.sol\":5393:5403  maximumFee */\n      sload(0x4)\n        /* \"contracts/test/TetherToken.sol\":5387:5390  fee */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":5387:5403  fee > maximumFee */\n      gt\n        /* \"contracts/test/TetherToken.sol\":5383:5446  if (fee > maximumFee) {... */\n      iszero\n      tag_250\n      jumpi\n        /* \"contracts/test/TetherToken.sol\":5425:5435  maximumFee */\n      sload(0x4)\n        /* \"contracts/test/TetherToken.sol\":5419:5435  fee = maximumFee */\n      swap3\n      pop\n        /* \"contracts/test/TetherToken.sol\":5383:5446  if (fee > maximumFee) {... */\n    tag_250:\n        /* \"contracts/test/TetherToken.sol\":4717:4727  2**256 - 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/test/TetherToken.sol\":5459:5469  _allowance */\n      dup5\n        /* \"contracts/test/TetherToken.sol\":5459:5480  _allowance < MAX_UINT */\n      lt\n        /* \"contracts/test/TetherToken.sol\":5455:5558  if (_allowance < MAX_UINT) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"contracts/test/TetherToken.sol\":5525:5547  _allowance.sub(_value) */\n      tag_252\n        /* \"contracts/test/TetherToken.sol\":5540:5546  _value */\n      dup6\n        /* \"contracts/test/TetherToken.sol\":5525:5535  _allowance */\n      dup6\n        /* \"contracts/test/TetherToken.sol\":5525:5539  _allowance.sub */\n      tag_253\n      swap1\n        /* \"contracts/test/TetherToken.sol\":5525:5547  _allowance.sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_252:\n        /* \"contracts/test/TetherToken.sol\":5496:5503  allowed */\n      0x5\n        /* \"contracts/test/TetherToken.sol\":5496:5510  allowed[_from] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":5504:5509  _from */\n      dup10\n        /* \"contracts/test/TetherToken.sol\":5496:5510  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/test/TetherToken.sol\":5496:5522  allowed[_from][msg.sender] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":5511:5521  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":5496:5522  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/test/TetherToken.sol\":5496:5547  allowed[_from][msg.sender] = _allowance.sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":5455:5558  if (_allowance < MAX_UINT) {... */\n    tag_251:\n        /* \"contracts/test/TetherToken.sol\":5585:5600  _value.sub(fee) */\n      tag_254\n        /* \"contracts/test/TetherToken.sol\":5596:5599  fee */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":5585:5591  _value */\n      dup7\n        /* \"contracts/test/TetherToken.sol\":5585:5595  _value.sub */\n      tag_253\n      swap1\n        /* \"contracts/test/TetherToken.sol\":5585:5600  _value.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_254:\n        /* \"contracts/test/TetherToken.sol\":5567:5600  uint sendAmount = _value.sub(fee) */\n      swap2\n      pop\n        /* \"contracts/test/TetherToken.sol\":5628:5655  balances[_from].sub(_value) */\n      tag_255\n        /* \"contracts/test/TetherToken.sol\":5648:5654  _value */\n      dup6\n        /* \"contracts/test/TetherToken.sol\":5628:5636  balances */\n      0x2\n        /* \"contracts/test/TetherToken.sol\":5628:5643  balances[_from] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":5637:5642  _from */\n      dup11\n        /* \"contracts/test/TetherToken.sol\":5628:5643  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/test/TetherToken.sol\":5628:5647  balances[_from].sub */\n      tag_253\n      swap1\n        /* \"contracts/test/TetherToken.sol\":5628:5655  balances[_from].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"contracts/test/TetherToken.sol\":5610:5618  balances */\n      0x2\n        /* \"contracts/test/TetherToken.sol\":5610:5625  balances[_from] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":5619:5624  _from */\n      dup10\n        /* \"contracts/test/TetherToken.sol\":5610:5625  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/test/TetherToken.sol\":5610:5655  balances[_from] = balances[_from].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":5681:5710  balances[_to].add(sendAmount) */\n      tag_256\n        /* \"contracts/test/TetherToken.sol\":5699:5709  sendAmount */\n      dup3\n        /* \"contracts/test/TetherToken.sol\":5681:5689  balances */\n      0x2\n        /* \"contracts/test/TetherToken.sol\":5681:5694  balances[_to] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":5690:5693  _to */\n      dup10\n        /* \"contracts/test/TetherToken.sol\":5681:5694  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/test/TetherToken.sol\":5681:5698  balances[_to].add */\n      tag_257\n      swap1\n        /* \"contracts/test/TetherToken.sol\":5681:5710  balances[_to].add(sendAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_256:\n        /* \"contracts/test/TetherToken.sol\":5665:5673  balances */\n      0x2\n        /* \"contracts/test/TetherToken.sol\":5665:5678  balances[_to] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":5674:5677  _to */\n      dup9\n        /* \"contracts/test/TetherToken.sol\":5665:5678  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/test/TetherToken.sol\":5665:5710  balances[_to] = balances[_to].add(sendAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":5730:5731  0 */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":5724:5727  fee */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":5724:5731  fee > 0 */\n      gt\n        /* \"contracts/test/TetherToken.sol\":5720:5841  if (fee > 0) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"contracts/test/TetherToken.sol\":5765:5789  balances[owner].add(fee) */\n      tag_259\n        /* \"contracts/test/TetherToken.sol\":5785:5788  fee */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":5765:5773  balances */\n      0x2\n        /* \"contracts/test/TetherToken.sol\":5765:5780  balances[owner] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":5774:5779  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":5765:5780  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/test/TetherToken.sol\":5765:5784  balances[owner].add */\n      tag_257\n      swap1\n        /* \"contracts/test/TetherToken.sol\":5765:5789  balances[owner].add(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_259:\n        /* \"contracts/test/TetherToken.sol\":5747:5755  balances */\n      0x2\n        /* \"contracts/test/TetherToken.sol\":5747:5762  balances[owner] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":5756:5761  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":5747:5762  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/test/TetherToken.sol\":5747:5789  balances[owner] = balances[owner].add(fee) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":5819:5824  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":5803:5830  Transfer(_from, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":5812:5817  _from */\n      dup8\n        /* \"contracts/test/TetherToken.sol\":5803:5830  Transfer(_from, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/test/TetherToken.sol\":5826:5829  fee */\n      dup6\n        /* \"contracts/test/TetherToken.sol\":5803:5830  Transfer(_from, owner, fee) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/test/TetherToken.sol\":5720:5841  if (fee > 0) {... */\n    tag_258:\n        /* \"contracts/test/TetherToken.sol\":5866:5869  _to */\n      dup6\n        /* \"contracts/test/TetherToken.sol\":5850:5882  Transfer(_from, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":5859:5864  _from */\n      dup8\n        /* \"contracts/test/TetherToken.sol\":5850:5882  Transfer(_from, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/test/TetherToken.sol\":5871:5881  sendAmount */\n      dup5\n        /* \"contracts/test/TetherToken.sol\":5850:5882  Transfer(_from, _to, sendAmount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/test/TetherToken.sol\":5009:5889  function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":4181:4295  function balanceOf(address _owner) public constant returns (uint balance) {... */\n    tag_183:\n        /* \"contracts/test/TetherToken.sol\":4241:4253  uint balance */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":4272:4280  balances */\n      0x2\n        /* \"contracts/test/TetherToken.sol\":4272:4288  balances[_owner] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":4281:4287  _owner */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":4272:4288  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/test/TetherToken.sol\":4265:4288  return balances[_owner] */\n      swap1\n      pop\n        /* \"contracts/test/TetherToken.sol\":4181:4295  function balanceOf(address _owner) public constant returns (uint balance) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":3410:3970  function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_202:\n        /* \"contracts/test/TetherToken.sol\":3495:3503  uint fee */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":3628:3643  uint sendAmount */\n      dup1\n        /* \"contracts/test/TetherToken.sol\":3477:3483  2 * 32 */\n      0x40\n        /* \"contracts/test/TetherToken.sol\":3223:3224  4 */\n      0x4\n        /* \"contracts/test/TetherToken.sol\":3216:3220  size */\n      dup2\n        /* \"contracts/test/TetherToken.sol\":3216:3224  size + 4 */\n      add\n        /* \"contracts/test/TetherToken.sol\":3198:3206  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/test/TetherToken.sol\":3198:3213  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/test/TetherToken.sol\":3198:3224  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/test/TetherToken.sol\":3196:3225  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/test/TetherToken.sol\":3188:3226  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_262\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_262:\n        /* \"contracts/test/TetherToken.sol\":3506:3546  (_value.mul(basisPointsRate)).div(10000) */\n      tag_264\n        /* \"contracts/test/TetherToken.sol\":3540:3545  10000 */\n      0x2710\n        /* \"contracts/test/TetherToken.sol\":3507:3534  _value.mul(basisPointsRate) */\n      tag_265\n        /* \"contracts/test/TetherToken.sol\":3518:3533  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/test/TetherToken.sol\":3507:3513  _value */\n      dup8\n        /* \"contracts/test/TetherToken.sol\":3507:3517  _value.mul */\n      tag_209\n      swap1\n        /* \"contracts/test/TetherToken.sol\":3507:3534  _value.mul(basisPointsRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_265:\n        /* \"contracts/test/TetherToken.sol\":3506:3539  (_value.mul(basisPointsRate)).div */\n      tag_249\n      swap1\n        /* \"contracts/test/TetherToken.sol\":3506:3546  (_value.mul(basisPointsRate)).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_264:\n        /* \"contracts/test/TetherToken.sol\":3495:3546  uint fee = (_value.mul(basisPointsRate)).div(10000) */\n      swap3\n      pop\n        /* \"contracts/test/TetherToken.sol\":3566:3576  maximumFee */\n      sload(0x4)\n        /* \"contracts/test/TetherToken.sol\":3560:3563  fee */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":3560:3576  fee > maximumFee */\n      gt\n        /* \"contracts/test/TetherToken.sol\":3556:3619  if (fee > maximumFee) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"contracts/test/TetherToken.sol\":3598:3608  maximumFee */\n      sload(0x4)\n        /* \"contracts/test/TetherToken.sol\":3592:3608  fee = maximumFee */\n      swap3\n      pop\n        /* \"contracts/test/TetherToken.sol\":3556:3619  if (fee > maximumFee) {... */\n    tag_266:\n        /* \"contracts/test/TetherToken.sol\":3646:3661  _value.sub(fee) */\n      tag_267\n        /* \"contracts/test/TetherToken.sol\":3657:3660  fee */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":3646:3652  _value */\n      dup6\n        /* \"contracts/test/TetherToken.sol\":3646:3656  _value.sub */\n      tag_253\n      swap1\n        /* \"contracts/test/TetherToken.sol\":3646:3661  _value.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_267:\n        /* \"contracts/test/TetherToken.sol\":3628:3661  uint sendAmount = _value.sub(fee) */\n      swap2\n      pop\n        /* \"contracts/test/TetherToken.sol\":3694:3726  balances[msg.sender].sub(_value) */\n      tag_268\n        /* \"contracts/test/TetherToken.sol\":3719:3725  _value */\n      dup5\n        /* \"contracts/test/TetherToken.sol\":3694:3702  balances */\n      0x2\n        /* \"contracts/test/TetherToken.sol\":3694:3714  balances[msg.sender] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":3703:3713  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":3694:3714  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/test/TetherToken.sol\":3694:3718  balances[msg.sender].sub */\n      tag_253\n      swap1\n        /* \"contracts/test/TetherToken.sol\":3694:3726  balances[msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_268:\n        /* \"contracts/test/TetherToken.sol\":3671:3679  balances */\n      0x2\n        /* \"contracts/test/TetherToken.sol\":3671:3691  balances[msg.sender] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":3680:3690  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":3671:3691  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/test/TetherToken.sol\":3671:3726  balances[msg.sender] = balances[msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":3752:3781  balances[_to].add(sendAmount) */\n      tag_269\n        /* \"contracts/test/TetherToken.sol\":3770:3780  sendAmount */\n      dup3\n        /* \"contracts/test/TetherToken.sol\":3752:3760  balances */\n      0x2\n        /* \"contracts/test/TetherToken.sol\":3752:3765  balances[_to] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":3761:3764  _to */\n      dup9\n        /* \"contracts/test/TetherToken.sol\":3752:3765  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/test/TetherToken.sol\":3752:3769  balances[_to].add */\n      tag_257\n      swap1\n        /* \"contracts/test/TetherToken.sol\":3752:3781  balances[_to].add(sendAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_269:\n        /* \"contracts/test/TetherToken.sol\":3736:3744  balances */\n      0x2\n        /* \"contracts/test/TetherToken.sol\":3736:3749  balances[_to] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":3745:3748  _to */\n      dup8\n        /* \"contracts/test/TetherToken.sol\":3736:3749  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/test/TetherToken.sol\":3736:3781  balances[_to] = balances[_to].add(sendAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":3801:3802  0 */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":3795:3798  fee */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":3795:3802  fee > 0 */\n      gt\n        /* \"contracts/test/TetherToken.sol\":3791:3917  if (fee > 0) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"contracts/test/TetherToken.sol\":3836:3860  balances[owner].add(fee) */\n      tag_271\n        /* \"contracts/test/TetherToken.sol\":3856:3859  fee */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":3836:3844  balances */\n      0x2\n        /* \"contracts/test/TetherToken.sol\":3836:3851  balances[owner] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":3845:3850  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":3836:3851  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/test/TetherToken.sol\":3836:3855  balances[owner].add */\n      tag_257\n      swap1\n        /* \"contracts/test/TetherToken.sol\":3836:3860  balances[owner].add(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_271:\n        /* \"contracts/test/TetherToken.sol\":3818:3826  balances */\n      0x2\n        /* \"contracts/test/TetherToken.sol\":3818:3833  balances[owner] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":3827:3832  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":3818:3833  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/test/TetherToken.sol\":3818:3860  balances[owner] = balances[owner].add(fee) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/TetherToken.sol\":3895:3900  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":3874:3906  Transfer(msg.sender, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":3883:3893  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":3874:3906  Transfer(msg.sender, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/test/TetherToken.sol\":3902:3905  fee */\n      dup6\n        /* \"contracts/test/TetherToken.sol\":3874:3906  Transfer(msg.sender, owner, fee) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/test/TetherToken.sol\":3791:3917  if (fee > 0) {... */\n    tag_270:\n        /* \"contracts/test/TetherToken.sol\":3947:3950  _to */\n      dup5\n        /* \"contracts/test/TetherToken.sol\":3926:3963  Transfer(msg.sender, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/TetherToken.sol\":3935:3945  msg.sender */\n      caller\n        /* \"contracts/test/TetherToken.sol\":3926:3963  Transfer(msg.sender, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/test/TetherToken.sol\":3952:3962  sendAmount */\n      dup5\n        /* \"contracts/test/TetherToken.sol\":3926:3963  Transfer(msg.sender, _to, sendAmount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/test/TetherToken.sol\":3410:3970  function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":171:372  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_209:\n        /* \"contracts/test/TetherToken.sol\":229:236  uint256 */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":302:311  uint256 c */\n      dup1\n        /* \"contracts/test/TetherToken.sol\":257:258  0 */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":252:253  a */\n      dup5\n        /* \"contracts/test/TetherToken.sol\":252:258  a == 0 */\n      eq\n        /* \"contracts/test/TetherToken.sol\":248:293  if (a == 0) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"contracts/test/TetherToken.sol\":281:282  0 */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":274:282  return 0 */\n      swap2\n      pop\n      jump(tag_272)\n        /* \"contracts/test/TetherToken.sol\":248:293  if (a == 0) {... */\n    tag_273:\n        /* \"contracts/test/TetherToken.sol\":318:319  b */\n      dup3\n        /* \"contracts/test/TetherToken.sol\":314:315  a */\n      dup5\n        /* \"contracts/test/TetherToken.sol\":314:319  a * b */\n      mul\n        /* \"contracts/test/TetherToken.sol\":302:319  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/test/TetherToken.sol\":345:346  b */\n      dup3\n        /* \"contracts/test/TetherToken.sol\":340:341  a */\n      dup5\n        /* \"contracts/test/TetherToken.sol\":336:337  c */\n      dup3\n        /* \"contracts/test/TetherToken.sol\":336:341  c / a */\n      dup2\n      iszero\n      iszero\n      tag_274\n      jumpi\n      invalid\n    tag_274:\n      div\n        /* \"contracts/test/TetherToken.sol\":336:346  c / a == b */\n      eq\n        /* \"contracts/test/TetherToken.sol\":329:347  assert(c / a == b) */\n      iszero\n      iszero\n      tag_275\n      jumpi\n      invalid\n    tag_275:\n        /* \"contracts/test/TetherToken.sol\":364:365  c */\n      dup1\n        /* \"contracts/test/TetherToken.sol\":357:365  return c */\n      swap2\n      pop\n        /* \"contracts/test/TetherToken.sol\":171:372  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_272:\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":7017:7160  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_226:\n        /* \"contracts/test/TetherToken.sol\":7095:7109  uint remaining */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":7128:7135  allowed */\n      0x5\n        /* \"contracts/test/TetherToken.sol\":7128:7143  allowed[_owner] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":7136:7142  _owner */\n      dup5\n        /* \"contracts/test/TetherToken.sol\":7128:7143  allowed[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/test/TetherToken.sol\":7128:7153  allowed[_owner][_spender] */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":7144:7152  _spender */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":7128:7153  allowed[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/test/TetherToken.sol\":7121:7153  return allowed[_owner][_spender] */\n      swap1\n      pop\n        /* \"contracts/test/TetherToken.sol\":7017:7160  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":378:661  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_249:\n        /* \"contracts/test/TetherToken.sol\":436:443  uint256 */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":533:542  uint256 c */\n      dup1\n        /* \"contracts/test/TetherToken.sol\":549:550  b */\n      dup3\n        /* \"contracts/test/TetherToken.sol\":545:546  a */\n      dup5\n        /* \"contracts/test/TetherToken.sol\":545:550  a / b */\n      dup2\n      iszero\n      iszero\n      tag_278\n      jumpi\n      invalid\n    tag_278:\n      div\n        /* \"contracts/test/TetherToken.sol\":533:550  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/test/TetherToken.sol\":653:654  c */\n      dup1\n        /* \"contracts/test/TetherToken.sol\":646:654  return c */\n      swap2\n      pop\n        /* \"contracts/test/TetherToken.sol\":378:661  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":667:787  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_253:\n        /* \"contracts/test/TetherToken.sol\":725:732  uint256 */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":756:757  a */\n      dup3\n        /* \"contracts/test/TetherToken.sol\":751:752  b */\n      dup3\n        /* \"contracts/test/TetherToken.sol\":751:757  b <= a */\n      gt\n      iszero\n        /* \"contracts/test/TetherToken.sol\":744:758  assert(b <= a) */\n      iszero\n      iszero\n      tag_280\n      jumpi\n      invalid\n    tag_280:\n        /* \"contracts/test/TetherToken.sol\":779:780  b */\n      dup2\n        /* \"contracts/test/TetherToken.sol\":775:776  a */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":775:780  a - b */\n      sub\n        /* \"contracts/test/TetherToken.sol\":768:780  return a - b */\n      swap1\n      pop\n        /* \"contracts/test/TetherToken.sol\":667:787  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/test/TetherToken.sol\":793:936  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_257:\n        /* \"contracts/test/TetherToken.sol\":851:858  uint256 */\n      0x0\n        /* \"contracts/test/TetherToken.sol\":870:879  uint256 c */\n      dup1\n        /* \"contracts/test/TetherToken.sol\":886:887  b */\n      dup3\n        /* \"contracts/test/TetherToken.sol\":882:883  a */\n      dup5\n        /* \"contracts/test/TetherToken.sol\":882:887  a + b */\n      add\n        /* \"contracts/test/TetherToken.sol\":870:887  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/test/TetherToken.sol\":909:910  a */\n      dup4\n        /* \"contracts/test/TetherToken.sol\":904:905  c */\n      dup2\n        /* \"contracts/test/TetherToken.sol\":904:910  c >= a */\n      lt\n      iszero\n        /* \"contracts/test/TetherToken.sol\":897:911  assert(c >= a) */\n      iszero\n      iszero\n      tag_282\n      jumpi\n      invalid\n    tag_282:\n        /* \"contracts/test/TetherToken.sol\":928:929  c */\n      dup1\n        /* \"contracts/test/TetherToken.sol\":921:929  return c */\n      swap2\n      pop\n        /* \"contracts/test/TetherToken.sol\":793:936  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820e1102019e31e3e2e3f96210f7695ac4ab6166b170eb07282a4b703efd392f2460029\n}\n",
            "bytecode": {
              "linkReferences": {},
              "object": "606060405260008060146101000a81548160ff0219169083151502179055506000600355600060045534156200003457600080fd5b60405162002d7a38038062002d7a83398101604052808051906020019091908051820191906020018051820191906020018051906020019091905050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836001819055508260079080519060200190620000cf9291906200017a565b508160089080519060200190620000e89291906200017a565b508060098190555083600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600a60146101000a81548160ff0219169083151502179055505050505062000229565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001bd57805160ff1916838001178555620001ee565b82800160010185558215620001ee579182015b82811115620001ed578251825591602001919060010190620001d0565b5b509050620001fd919062000201565b5090565b6200022691905b808211156200022257600081600090555060010162000208565b5090565b90565b612b4180620002396000396000f30060606040523615610194576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101995780630753c30c14610227578063095ea7b3146102605780630e136b19146102a25780630ecb93c0146102cf57806318160ddd1461030857806323b872dd1461033157806326976e3f1461039257806327e235e3146103e7578063313ce56714610434578063353907141461045d5780633eaaf86b146104865780633f4ba83a146104af57806359bf1abe146104c45780635c658165146105155780635c975abb1461058157806370a08231146105ae5780638456cb59146105fb578063893d20e8146106105780638da5cb5b1461066557806395d89b41146106ba578063a9059cbb14610748578063c0324c771461078a578063cc872b66146107b6578063db006a75146107d9578063dd62ed3e146107fc578063dd644f7214610868578063e47d606014610891578063e4997dc5146108e2578063e5b5019a1461091b578063f2fde38b14610944578063f3bdc2281461097d575b600080fd5b34156101a457600080fd5b6101ac6109b6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101ec5780820151818401526020810190506101d1565b50505050905090810190601f1680156102195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561023257600080fd5b61025e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a54565b005b341561026b57600080fd5b6102a0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610b71565b005b34156102ad57600080fd5b6102b5610cbf565b604051808215151515815260200191505060405180910390f35b34156102da57600080fd5b610306600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610cd2565b005b341561031357600080fd5b61031b610deb565b6040518082815260200191505060405180910390f35b341561033c57600080fd5b610390600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610ebb565b005b341561039d57600080fd5b6103a561109b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103f257600080fd5b61041e600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506110c1565b6040518082815260200191505060405180910390f35b341561043f57600080fd5b6104476110d9565b6040518082815260200191505060405180910390f35b341561046857600080fd5b6104706110df565b6040518082815260200191505060405180910390f35b341561049157600080fd5b6104996110e5565b6040518082815260200191505060405180910390f35b34156104ba57600080fd5b6104c26110eb565b005b34156104cf57600080fd5b6104fb600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111a9565b604051808215151515815260200191505060405180910390f35b341561052057600080fd5b61056b600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111ff565b6040518082815260200191505060405180910390f35b341561058c57600080fd5b610594611224565b604051808215151515815260200191505060405180910390f35b34156105b957600080fd5b6105e5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611237565b6040518082815260200191505060405180910390f35b341561060657600080fd5b61060e611346565b005b341561061b57600080fd5b610623611406565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561067057600080fd5b61067861142f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156106c557600080fd5b6106cd611454565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561070d5780820151818401526020810190506106f2565b50505050905090810190601f16801561073a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561075357600080fd5b610788600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506114f2565b005b341561079557600080fd5b6107b4600480803590602001909190803590602001909190505061169c565b005b34156107c157600080fd5b6107d76004808035906020019091905050611781565b005b34156107e457600080fd5b6107fa6004808035906020019091905050611978565b005b341561080757600080fd5b610852600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611b0b565b6040518082815260200191505060405180910390f35b341561087357600080fd5b61087b611c50565b6040518082815260200191505060405180910390f35b341561089c57600080fd5b6108c8600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c56565b604051808215151515815260200191505060405180910390f35b34156108ed57600080fd5b610919600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c76565b005b341561092657600080fd5b61092e611d8f565b6040518082815260200191505060405180910390f35b341561094f57600080fd5b61097b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611db3565b005b341561098857600080fd5b6109b4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611e88565b005b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a4c5780601f10610a2157610100808354040283529160200191610a4c565b820191906000526020600020905b815481529060010190602001808311610a2f57829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610aaf57600080fd5b6001600a60146101000a81548160ff02191690831515021790555080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b604060048101600036905010151515610b8957600080fd5b600a60149054906101000a900460ff1615610caf57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aee92d333385856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1515610c9657600080fd5b6102c65a03f11515610ca757600080fd5b505050610cba565b610cb9838361200c565b5b505050565b600a60149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d2d57600080fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615610eb257600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610e9057600080fd5b6102c65a03f11515610ea157600080fd5b505050604051805190509050610eb8565b60015490505b90565b600060149054906101000a900460ff16151515610ed757600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610f3057600080fd5b600a60149054906101000a900460ff161561108a57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638b477adb338585856040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050600060405180830381600087803b151561107157600080fd5b6102c65a03f1151561108257600080fd5b505050611096565b6110958383836121a9565b5b505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b60095481565b60045481565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561114657600080fd5b600060149054906101000a900460ff16151561116157600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600060149054906101000a900460ff1681565b6000600a60149054906101000a900460ff161561133557600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561131357600080fd5b6102c65a03f1151561132457600080fd5b505050604051805190509050611341565b61133e82612650565b90505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a157600080fd5b600060149054906101000a900460ff161515156113bd57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114ea5780601f106114bf576101008083540402835291602001916114ea565b820191906000526020600020905b8154815290600101906020018083116114cd57829003601f168201915b505050505081565b600060149054906101000a900460ff1615151561150e57600080fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561156757600080fd5b600a60149054906101000a900460ff161561168d57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e18980a3384846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b151561167457600080fd5b6102c65a03f1151561168557600080fd5b505050611698565b6116978282612699565b5b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156116f757600080fd5b60148210151561170657600080fd5b60328110151561171557600080fd5b81600381905550611734600954600a0a82612a0190919063ffffffff16565b6004819055507fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e600354600454604051808381526020018281526020019250505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117dc57600080fd5b60015481600154011115156117f057600080fd5b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011115156118c057600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550806001600082825401925050819055507fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a816040518082815260200191505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119d357600080fd5b80600154101515156119e457600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515611a5357600080fd5b8060016000828254039250508190555080600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44816040518082815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615611c3d57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1515611c1b57600080fd5b6102c65a03f11515611c2c57600080fd5b505050604051805190509050611c4a565b611c478383612a3c565b90505b92915050565b60035481565b60066020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611cd157600080fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e0e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515611e8557806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ee557600080fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611f3d57600080fd5b611f4682611237565b90506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806001600082825403925050819055507f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c68282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60406004810160003690501015151561202457600080fd5b600082141580156120b257506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b1515156120be57600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3505050565b60008060006060600481016000369050101515156121c657600080fd5b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054935061226e61271061226060035488612a0190919063ffffffff16565b612ac390919063ffffffff16565b92506004548311156122805760045492505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84101561233c576122bb8585612ade90919063ffffffff16565b600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b61234f8386612ade90919063ffffffff16565b91506123a385600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ade90919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061243882600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008311156125e2576124f783600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806040600481016000369050101515156126b457600080fd5b6126dd6127106126cf60035487612a0190919063ffffffff16565b612ac390919063ffffffff16565b92506004548311156126ef5760045492505b6127028385612ade90919063ffffffff16565b915061275684600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ade90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506127eb82600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000831115612995576128aa83600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35050505050565b6000806000841415612a165760009150612a35565b8284029050828482811515612a2757fe5b04141515612a3157fe5b8091505b5092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000808284811515612ad157fe5b0490508091505092915050565b6000828211151515612aec57fe5b818303905092915050565b6000808284019050838110151515612b0b57fe5b80915050929150505600a165627a7a72305820e1102019e31e3e2e3f96210f7695ac4ab6166b170eb07282a4b703efd392f2460029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 SSTORE PUSH1 0x0 PUSH1 0x4 SSTORE CALLVALUE ISZERO PUSH3 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2D7A CODESIZE SUB DUP1 PUSH3 0x2D7A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 MLOAD DUP3 ADD SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD DUP3 ADD SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xCF SWAP3 SWAP2 SWAP1 PUSH3 0x17A JUMP JUMPDEST POP DUP2 PUSH1 0x8 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xE8 SWAP3 SWAP2 SWAP1 PUSH3 0x17A JUMP JUMPDEST POP DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH3 0x229 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x1BD JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1EE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1EE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1ED JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1D0 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x1FD SWAP2 SWAP1 PUSH3 0x201 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x226 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x222 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x208 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2B41 DUP1 PUSH3 0x239 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x753C30C EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xE136B19 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x26976E3F EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x35390714 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x5C658165 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5AE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6BA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x748 JUMPI DUP1 PUSH4 0xC0324C77 EQ PUSH2 0x78A JUMPI DUP1 PUSH4 0xCC872B66 EQ PUSH2 0x7B6 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x7D9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7FC JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x868 JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x891 JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x8E2 JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x91B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x944 JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x97D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AC PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x219 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xA54 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xB71 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B5 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xCD2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31B PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x390 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xEBB JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A5 PUSH2 0x109B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x447 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x470 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x499 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C2 PUSH2 0x10EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4FB PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x56B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x594 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E5 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60E PUSH2 0x1346 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x623 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x678 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6CD PUSH2 0x1454 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x70D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6F2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x73A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x788 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x14F2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x169C JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D7 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1781 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7FA PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1978 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x852 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87B PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x89C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C8 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x919 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C76 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x92E PUSH2 0x1D8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x94F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x97B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1DB3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1E88 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA4C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA21 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA4C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA2F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xAAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xCC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0xB89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCAF JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAEE92D33 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xC96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0xCBA JUMP JUMPDEST PUSH2 0xCB9 DUP4 DUP4 PUSH2 0x200C JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xD2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xEB2 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xE90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xED7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xF30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x108A JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8B477ADB CALLER DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1071 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1082 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1096 JUMP JUMPDEST PUSH2 0x1095 DUP4 DUP4 DUP4 PUSH2 0x21A9 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1335 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1341 JUMP JUMPDEST PUSH2 0x133E DUP3 PUSH2 0x2650 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x13BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x14EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x150E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x1567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x168D JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E18980A CALLER DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1697 DUP3 DUP3 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x16F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 DUP3 LT ISZERO ISZERO PUSH2 0x1706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x32 DUP2 LT ISZERO ISZERO PUSH2 0x1715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1734 PUSH1 0x9 SLOAD PUSH1 0xA EXP DUP3 PUSH2 0x2A01 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xB044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x17DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 PUSH1 0x1 SLOAD ADD GT ISZERO ISZERO PUSH2 0x17F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD GT ISZERO ISZERO PUSH2 0x18C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xCB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x19D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x19E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x1A53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C3D JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP5 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1C1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1C2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x1C47 DUP4 DUP4 PUSH2 0x2A3C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E85 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1EE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1F3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F46 DUP3 PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x2024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x20B2 JUMPI POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x20BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x21C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP PUSH2 0x226E PUSH2 0x2710 PUSH2 0x2260 PUSH1 0x3 SLOAD DUP9 PUSH2 0x2A01 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x2280 JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 LT ISZERO PUSH2 0x233C JUMPI PUSH2 0x22BB DUP6 DUP6 PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x234F DUP4 DUP7 PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x23A3 DUP6 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2438 DUP3 PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x25E2 JUMPI PUSH2 0x24F7 DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x26B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26DD PUSH2 0x2710 PUSH2 0x26CF PUSH1 0x3 SLOAD DUP8 PUSH2 0x2A01 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x26EF JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH2 0x2702 DUP4 DUP6 PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x2756 DUP5 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x27EB DUP3 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x2995 JUMPI PUSH2 0x28AA DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x2A16 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x2A35 JUMP JUMPDEST DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x2A27 JUMPI INVALID JUMPDEST DIV EQ ISZERO ISZERO PUSH2 0x2A31 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x2AD1 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x2AEC JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x2B0B JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe1 LT KECCAK256 NOT 0xe3 0x1e RETURNDATACOPY 0x2e 0x3f SWAP7 0x21 0xf PUSH23 0x95AC4AB6166B170EB07282A4B703EFD392F24600290000 ",
              "sourceMap": "9693:4781:0:-;;;7370:5;7349:26;;;;;;;;;;;;;;;;;;;;3036:1;3006:31;;3068:1;3043:26;;10188:289;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1351:10;1343:5;;:18;;;;;;;;;;;;;;;;;;10308:14;10293:12;:29;;;;10339:5;10332:4;:12;;;;;;;;;;;;:::i;:::-;;10363:7;10354:6;:16;;;;;;;;;;;;:::i;:::-;;10391:9;10380:8;:20;;;;10428:14;10410:8;:15;10419:5;;;;;;;;;;;10410:15;;;;;;;;;;;;;;;:32;;;;10465:5;10452:10;;:18;;;;;;;;;;;;;;;;;;10188:289;;;;9693:4781;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "60606040523615610194576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101995780630753c30c14610227578063095ea7b3146102605780630e136b19146102a25780630ecb93c0146102cf57806318160ddd1461030857806323b872dd1461033157806326976e3f1461039257806327e235e3146103e7578063313ce56714610434578063353907141461045d5780633eaaf86b146104865780633f4ba83a146104af57806359bf1abe146104c45780635c658165146105155780635c975abb1461058157806370a08231146105ae5780638456cb59146105fb578063893d20e8146106105780638da5cb5b1461066557806395d89b41146106ba578063a9059cbb14610748578063c0324c771461078a578063cc872b66146107b6578063db006a75146107d9578063dd62ed3e146107fc578063dd644f7214610868578063e47d606014610891578063e4997dc5146108e2578063e5b5019a1461091b578063f2fde38b14610944578063f3bdc2281461097d575b600080fd5b34156101a457600080fd5b6101ac6109b6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101ec5780820151818401526020810190506101d1565b50505050905090810190601f1680156102195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561023257600080fd5b61025e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a54565b005b341561026b57600080fd5b6102a0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610b71565b005b34156102ad57600080fd5b6102b5610cbf565b604051808215151515815260200191505060405180910390f35b34156102da57600080fd5b610306600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610cd2565b005b341561031357600080fd5b61031b610deb565b6040518082815260200191505060405180910390f35b341561033c57600080fd5b610390600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610ebb565b005b341561039d57600080fd5b6103a561109b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103f257600080fd5b61041e600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506110c1565b6040518082815260200191505060405180910390f35b341561043f57600080fd5b6104476110d9565b6040518082815260200191505060405180910390f35b341561046857600080fd5b6104706110df565b6040518082815260200191505060405180910390f35b341561049157600080fd5b6104996110e5565b6040518082815260200191505060405180910390f35b34156104ba57600080fd5b6104c26110eb565b005b34156104cf57600080fd5b6104fb600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111a9565b604051808215151515815260200191505060405180910390f35b341561052057600080fd5b61056b600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111ff565b6040518082815260200191505060405180910390f35b341561058c57600080fd5b610594611224565b604051808215151515815260200191505060405180910390f35b34156105b957600080fd5b6105e5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611237565b6040518082815260200191505060405180910390f35b341561060657600080fd5b61060e611346565b005b341561061b57600080fd5b610623611406565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561067057600080fd5b61067861142f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156106c557600080fd5b6106cd611454565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561070d5780820151818401526020810190506106f2565b50505050905090810190601f16801561073a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561075357600080fd5b610788600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506114f2565b005b341561079557600080fd5b6107b4600480803590602001909190803590602001909190505061169c565b005b34156107c157600080fd5b6107d76004808035906020019091905050611781565b005b34156107e457600080fd5b6107fa6004808035906020019091905050611978565b005b341561080757600080fd5b610852600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611b0b565b6040518082815260200191505060405180910390f35b341561087357600080fd5b61087b611c50565b6040518082815260200191505060405180910390f35b341561089c57600080fd5b6108c8600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c56565b604051808215151515815260200191505060405180910390f35b34156108ed57600080fd5b610919600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c76565b005b341561092657600080fd5b61092e611d8f565b6040518082815260200191505060405180910390f35b341561094f57600080fd5b61097b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611db3565b005b341561098857600080fd5b6109b4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611e88565b005b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a4c5780601f10610a2157610100808354040283529160200191610a4c565b820191906000526020600020905b815481529060010190602001808311610a2f57829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610aaf57600080fd5b6001600a60146101000a81548160ff02191690831515021790555080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b604060048101600036905010151515610b8957600080fd5b600a60149054906101000a900460ff1615610caf57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aee92d333385856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1515610c9657600080fd5b6102c65a03f11515610ca757600080fd5b505050610cba565b610cb9838361200c565b5b505050565b600a60149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d2d57600080fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615610eb257600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610e9057600080fd5b6102c65a03f11515610ea157600080fd5b505050604051805190509050610eb8565b60015490505b90565b600060149054906101000a900460ff16151515610ed757600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610f3057600080fd5b600a60149054906101000a900460ff161561108a57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638b477adb338585856040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050600060405180830381600087803b151561107157600080fd5b6102c65a03f1151561108257600080fd5b505050611096565b6110958383836121a9565b5b505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b60095481565b60045481565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561114657600080fd5b600060149054906101000a900460ff16151561116157600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600060149054906101000a900460ff1681565b6000600a60149054906101000a900460ff161561133557600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561131357600080fd5b6102c65a03f1151561132457600080fd5b505050604051805190509050611341565b61133e82612650565b90505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a157600080fd5b600060149054906101000a900460ff161515156113bd57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114ea5780601f106114bf576101008083540402835291602001916114ea565b820191906000526020600020905b8154815290600101906020018083116114cd57829003601f168201915b505050505081565b600060149054906101000a900460ff1615151561150e57600080fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561156757600080fd5b600a60149054906101000a900460ff161561168d57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e18980a3384846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b151561167457600080fd5b6102c65a03f1151561168557600080fd5b505050611698565b6116978282612699565b5b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156116f757600080fd5b60148210151561170657600080fd5b60328110151561171557600080fd5b81600381905550611734600954600a0a82612a0190919063ffffffff16565b6004819055507fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e600354600454604051808381526020018281526020019250505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117dc57600080fd5b60015481600154011115156117f057600080fd5b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011115156118c057600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550806001600082825401925050819055507fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a816040518082815260200191505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119d357600080fd5b80600154101515156119e457600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515611a5357600080fd5b8060016000828254039250508190555080600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44816040518082815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615611c3d57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1515611c1b57600080fd5b6102c65a03f11515611c2c57600080fd5b505050604051805190509050611c4a565b611c478383612a3c565b90505b92915050565b60035481565b60066020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611cd157600080fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e0e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515611e8557806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ee557600080fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611f3d57600080fd5b611f4682611237565b90506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806001600082825403925050819055507f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c68282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60406004810160003690501015151561202457600080fd5b600082141580156120b257506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b1515156120be57600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3505050565b60008060006060600481016000369050101515156121c657600080fd5b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054935061226e61271061226060035488612a0190919063ffffffff16565b612ac390919063ffffffff16565b92506004548311156122805760045492505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84101561233c576122bb8585612ade90919063ffffffff16565b600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b61234f8386612ade90919063ffffffff16565b91506123a385600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ade90919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061243882600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008311156125e2576124f783600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806040600481016000369050101515156126b457600080fd5b6126dd6127106126cf60035487612a0190919063ffffffff16565b612ac390919063ffffffff16565b92506004548311156126ef5760045492505b6127028385612ade90919063ffffffff16565b915061275684600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ade90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506127eb82600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000831115612995576128aa83600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35050505050565b6000806000841415612a165760009150612a35565b8284029050828482811515612a2757fe5b04141515612a3157fe5b8091505b5092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000808284811515612ad157fe5b0490508091505092915050565b6000828211151515612aec57fe5b818303905092915050565b6000808284019050838110151515612b0b57fe5b80915050929150505600a165627a7a72305820e1102019e31e3e2e3f96210f7695ac4ab6166b170eb07282a4b703efd392f2460029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x753C30C EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xE136B19 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x26976E3F EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x35390714 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x5C658165 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5AE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6BA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x748 JUMPI DUP1 PUSH4 0xC0324C77 EQ PUSH2 0x78A JUMPI DUP1 PUSH4 0xCC872B66 EQ PUSH2 0x7B6 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x7D9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7FC JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x868 JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x891 JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x8E2 JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x91B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x944 JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x97D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AC PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x219 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xA54 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xB71 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B5 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xCD2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31B PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x390 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xEBB JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A5 PUSH2 0x109B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x447 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x470 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x499 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C2 PUSH2 0x10EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4FB PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x56B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x594 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E5 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60E PUSH2 0x1346 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x623 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x678 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6CD PUSH2 0x1454 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x70D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6F2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x73A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x788 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x14F2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x169C JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D7 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1781 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7FA PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1978 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x852 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87B PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x89C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C8 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x919 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C76 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x92E PUSH2 0x1D8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x94F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x97B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1DB3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1E88 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA4C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA21 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA4C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA2F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xAAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xCC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0xB89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCAF JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAEE92D33 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xC96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0xCBA JUMP JUMPDEST PUSH2 0xCB9 DUP4 DUP4 PUSH2 0x200C JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xD2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xEB2 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xE90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xED7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xF30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x108A JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8B477ADB CALLER DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1071 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1082 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1096 JUMP JUMPDEST PUSH2 0x1095 DUP4 DUP4 DUP4 PUSH2 0x21A9 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1335 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1341 JUMP JUMPDEST PUSH2 0x133E DUP3 PUSH2 0x2650 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x13BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x14EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x150E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x1567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x168D JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E18980A CALLER DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1697 DUP3 DUP3 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x16F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 DUP3 LT ISZERO ISZERO PUSH2 0x1706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x32 DUP2 LT ISZERO ISZERO PUSH2 0x1715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1734 PUSH1 0x9 SLOAD PUSH1 0xA EXP DUP3 PUSH2 0x2A01 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xB044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x17DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 PUSH1 0x1 SLOAD ADD GT ISZERO ISZERO PUSH2 0x17F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD GT ISZERO ISZERO PUSH2 0x18C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xCB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x19D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x19E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x1A53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C3D JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP5 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1C1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1C2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x1C47 DUP4 DUP4 PUSH2 0x2A3C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E85 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1EE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1F3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F46 DUP3 PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x2024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x20B2 JUMPI POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x20BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x21C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP PUSH2 0x226E PUSH2 0x2710 PUSH2 0x2260 PUSH1 0x3 SLOAD DUP9 PUSH2 0x2A01 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x2280 JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 LT ISZERO PUSH2 0x233C JUMPI PUSH2 0x22BB DUP6 DUP6 PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x234F DUP4 DUP7 PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x23A3 DUP6 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2438 DUP3 PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x25E2 JUMPI PUSH2 0x24F7 DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x26B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26DD PUSH2 0x2710 PUSH2 0x26CF PUSH1 0x3 SLOAD DUP8 PUSH2 0x2A01 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x26EF JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH2 0x2702 DUP4 DUP6 PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x2756 DUP5 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x27EB DUP3 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x2995 JUMPI PUSH2 0x28AA DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x2A16 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x2A35 JUMP JUMPDEST DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x2A27 JUMPI INVALID JUMPDEST DIV EQ ISZERO ISZERO PUSH2 0x2A31 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x2AD1 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x2AEC JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x2B0B JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe1 LT KECCAK256 NOT 0xe3 0x1e RETURNDATACOPY 0x2e 0x3f SWAP7 0x21 0xf PUSH23 0x95AC4AB6166B170EB07282A4B703EFD392F24600290000 ",
              "sourceMap": "9693:4781:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9759:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12445:177:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;11717:296;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9871:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8470:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;12685:212;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10960:355;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9835:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2881:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9809:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3043:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2008:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7935:87;;;;;;;;;;;;;;8194:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4617:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7349:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11397:238;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7768:85;;;;;;;;;;;;;;8322;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1153:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9783;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10559:319:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13774:378;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13055:259;;;;;;;;;;;;;;;;;;;;;;;;;;13538:230;;;;;;;;;;;;;;;;;;;;;;;;;;12095:287;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3006:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8413:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8618:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;4685:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1703:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;8781:318;;;;;;;;;;;;;;;;;;;;;;;;;;;;9759:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12445:177::-;1511:5;;;;;;;;;;;1497:19;;:10;:19;;;1489:28;;;;;;;;12530:4;12517:10;;:17;;;;;;;;;;;;;;;;;;12562:16;12544:15;;:34;;;;;;;;;;;;;;;;;;12588:27;12598:16;12588:27;;;;;;;;;;;;;;;;;;;;;;12445:177;:::o;11717:296::-;11788:6;3223:1;3216:4;:8;3198;;:15;;:26;3196:29;3188:38;;;;;;;;11810:10;;;;;;;;;;;11806:201;;;11865:15;;;;;;;;;;;11843:54;;;11898:10;11910:8;11920:6;11843:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11836:91;;11806:201;11965:31;11979:8;11989:6;11965:13;:31::i;:::-;3236:1;11717:296;;;:::o;9871:22::-;;;;;;;;;;;;;:::o;8470:142::-;1511:5;;;;;;;;;;;1497:19;;:10;:19;;;1489:28;;;;;;;;8566:4;8539:13;:24;8553:9;8539:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;8580:25;8595:9;8580:25;;;;;;;;;;;;;;;;;;;;;;8470:142;:::o;12685:212::-;12733:4;12753:10;;;;;;;;;;;12749:142;;;12800:15;;;;;;;;;;;12786:42;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12779:51;;;;12749:142;12868:12;;12861:19;;12685:212;;:::o;10960:355::-;7518:6;;;;;;;;;;;7517:7;7509:16;;;;;;;;11063:13;:20;11077:5;11063:20;;;;;;;;;;;;;;;;;;;;;;;;;11062:21;11054:30;;;;;;;;11098:10;;;;;;;;;;;11094:215;;;11153:15;;;;;;;;;;;11131:59;;;11191:10;11203:5;11210:3;11215:6;11131:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11124:98;;11094:215;11260:38;11279:5;11286:3;11291:6;11260:18;:38::i;:::-;7531:1;10960:355;;;:::o;9835:30::-;;;;;;;;;;;;;:::o;2881:40::-;;;;;;;;;;;;;;;;;:::o;9809:20::-;;;;:::o;3043:26::-;;;;:::o;2008:24::-;;;;:::o;7935:87::-;1511:5;;;;;;;;;;;1497:19;;:10;:19;;;1489:28;;;;;;;;7670:6;;;;;;;;;;;7662:15;;;;;;;;7997:5;7988:6;;:14;;;;;;;;;;;;;;;;;;8008:9;;;;;;;;;;7935:87::o;8194:122::-;8265:4;8288:13;:21;8302:6;8288:21;;;;;;;;;;;;;;;;;;;;;;;;;8281:28;;8194:122;;;:::o;4617:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7349:26::-;;;;;;;;;;;;;:::o;11397:238::-;11454:4;11474:10;;;;;;;;;;;11470:159;;;11529:15;;;;;;;;;;;11507:48;;;11556:3;11507:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11500:60;;;;11470:159;11598:20;11614:3;11598:15;:20::i;:::-;11591:27;;11397:238;;;;:::o;7768:85::-;1511:5;;;;;;;;;;;1497:19;;:10;:19;;;1489:28;;;;;;;;7518:6;;;;;;;;;;;7517:7;7509:16;;;;;;;;7831:4;7822:6;;:13;;;;;;;;;;;;;;;;;;7841:7;;;;;;;;;;7768:85::o;8322:::-;8369:7;8395:5;;;;;;;;;;;8388:12;;8322:85;:::o;1153:20::-;;;;;;;;;;;;;:::o;9783:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10559:319::-;7518:6;;;;;;;;;;;7517:7;7509:16;;;;;;;;10643:13;:25;10657:10;10643:25;;;;;;;;;;;;;;;;;;;;;;;;;10642:26;10634:35;;;;;;;;10683:10;;;;;;;;;;;10679:193;;;10738:15;;;;;;;;;;;10716:55;;;10772:10;10784:3;10789:6;10716:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10709:87;;10679:193;10834:27;10849:3;10854:6;10834:14;:27::i;:::-;7531:1;10559:319;;:::o;13774:378::-;1511:5;;;;;;;;;;;1497:19;;:10;:19;;;1489:28;;;;;;;;13970:2;13953:14;:19;13945:28;;;;;;;;14003:2;13991:9;:14;13983:23;;;;;;;;14035:14;14017:15;:32;;;;14072:27;14090:8;;14086:2;:12;14072:9;:13;;:27;;;;:::i;:::-;14059:10;:40;;;;14110:35;14117:15;;14134:10;;14110:35;;;;;;;;;;;;;;;;;;;;;;;;13774:378;;:::o;13055:259::-;1511:5;;;;;;;;;;;1497:19;;:10;:19;;;1489:28;;;;;;;;13142:12;;13133:6;13118:12;;:21;:36;13110:45;;;;;;;;13200:8;:15;13209:5;;;;;;;;;;;13200:15;;;;;;;;;;;;;;;;13191:6;13173:8;:15;13182:5;;;;;;;;;;;13173:15;;;;;;;;;;;;;;;;:24;:42;13165:51;;;;;;;;13246:6;13227:8;:15;13236:5;;;;;;;;;;;13227:15;;;;;;;;;;;;;;;;:25;;;;;;;;;;;13278:6;13262:12;;:22;;;;;;;;;;;13294:13;13300:6;13294:13;;;;;;;;;;;;;;;;;;13055:259;:::o;13538:230::-;1511:5;;;;;;;;;;;1497:19;;:10;:19;;;1489:28;;;;;;;;13618:6;13602:12;;:22;;13594:31;;;;;;;;13662:6;13643:8;:15;13652:5;;;;;;;;;;;13643:15;;;;;;;;;;;;;;;;:25;;13635:34;;;;;;;;13696:6;13680:12;;:22;;;;;;;;;;;13731:6;13712:8;:15;13721:5;;;;;;;;;;;13712:15;;;;;;;;;;;;;;;;:25;;;;;;;;;;;13747:14;13754:6;13747:14;;;;;;;;;;;;;;;;;;13538:230;:::o;12095:287::-;12173:14;12203:10;;;;;;;;;;;12199:177;;;12250:15;;;;;;;;;;;12236:40;;;12277:6;12285:8;12236:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12229:65;;;;12199:177;12332:33;12348:6;12356:8;12332:15;:33::i;:::-;12325:40;;12095:287;;;;;:::o;3006:31::-;;;;:::o;8413:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;8618:157::-;1511:5;;;;;;;;;;;1497:19;;:10;:19;;;1489:28;;;;;;;;8723:5;8693:13;:27;8707:12;8693:27;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;8738:30;8755:12;8738:30;;;;;;;;;;;;;;;;;;;;;;8618:157;:::o;4685:42::-;4717:10;4685:42;:::o;1703:147::-;1511:5;;;;;;;;;;;1497:19;;:10;:19;;;1489:28;;;;;;;;1799:1;1779:22;;:8;:22;;;;1775:69;;;1825:8;1817:5;;:16;;;;;;;;;;;;;;;;;;1775:69;1703:147;:::o;8781:318::-;8912:15;1511:5;;;;;;;;;;;1497:19;;:10;:19;;;1489:28;;;;;;;;8870:13;:31;8884:16;8870:31;;;;;;;;;;;;;;;;;;;;;;;;;8862:40;;;;;;;;8930:27;8940:16;8930:9;:27::i;:::-;8912:45;;8996:1;8967:8;:26;8976:16;8967:26;;;;;;;;;;;;;;;:30;;;;9023:10;9007:12;;:26;;;;;;;;;;;9043:49;9063:16;9081:10;9043:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;8781:318;;:::o;6129:563::-;6200:6;3223:1;3216:4;:8;3198;;:15;;:26;3196:29;3188:38;;;;;;;;6544:1;6534:6;:11;;6533:53;;;;;6584:1;6551:7;:19;6559:10;6551:19;;;;;;;;;;;;;;;:29;6571:8;6551:29;;;;;;;;;;;;;;;;:34;;6533:53;6531:56;6523:65;;;;;;;;6631:6;6599:7;:19;6607:10;6599:19;;;;;;;;;;;;;;;:29;6619:8;6599:29;;;;;;;;;;;;;;;:38;;;;6668:8;6647:38;;6656:10;6647:38;;;6678:6;6647:38;;;;;;;;;;;;;;;;;;6129:563;;;:::o;5009:880::-;5113:14;5322:8;5567:15;5095:6;3223:1;3216:4;:8;3198;;:15;;:26;3196:29;3188:38;;;;;;;;5130:7;:14;5138:5;5130:14;;;;;;;;;;;;;;;:26;5145:10;5130:26;;;;;;;;;;;;;;;;5113:43;;5333:40;5367:5;5334:27;5345:15;;5334:6;:10;;:27;;;;:::i;:::-;5333:33;;:40;;;;:::i;:::-;5322:51;;5393:10;;5387:3;:16;5383:63;;;5425:10;;5419:16;;5383:63;4717:10;5459;:21;5455:103;;;5525:22;5540:6;5525:10;:14;;:22;;;;:::i;:::-;5496:7;:14;5504:5;5496:14;;;;;;;;;;;;;;;:26;5511:10;5496:26;;;;;;;;;;;;;;;:51;;;;5455:103;5585:15;5596:3;5585:6;:10;;:15;;;;:::i;:::-;5567:33;;5628:27;5648:6;5628:8;:15;5637:5;5628:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;5610:8;:15;5619:5;5610:15;;;;;;;;;;;;;;;:45;;;;5681:29;5699:10;5681:8;:13;5690:3;5681:13;;;;;;;;;;;;;;;;:17;;:29;;;;:::i;:::-;5665:8;:13;5674:3;5665:13;;;;;;;;;;;;;;;:45;;;;5730:1;5724:3;:7;5720:121;;;5765:24;5785:3;5765:8;:15;5774:5;;;;;;;;;;;5765:15;;;;;;;;;;;;;;;;:19;;:24;;;;:::i;:::-;5747:8;:15;5756:5;;;;;;;;;;;5747:15;;;;;;;;;;;;;;;:42;;;;5819:5;;;;;;;;;;;5803:27;;5812:5;5803:27;;;5826:3;5803:27;;;;;;;;;;;;;;;;;;5720:121;5866:3;5850:32;;5859:5;5850:32;;;5871:10;5850:32;;;;;;;;;;;;;;;;;;5009:880;;;;;;;:::o;4181:114::-;4241:12;4272:8;:16;4281:6;4272:16;;;;;;;;;;;;;;;;4265:23;;4181:114;;;:::o;3410:560::-;3495:8;3628:15;3477:6;3223:1;3216:4;:8;3198;;:15;;:26;3196:29;3188:38;;;;;;;;3506:40;3540:5;3507:27;3518:15;;3507:6;:10;;:27;;;;:::i;:::-;3506:33;;:40;;;;:::i;:::-;3495:51;;3566:10;;3560:3;:16;3556:63;;;3598:10;;3592:16;;3556:63;3646:15;3657:3;3646:6;:10;;:15;;;;:::i;:::-;3628:33;;3694:32;3719:6;3694:8;:20;3703:10;3694:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;3671:8;:20;3680:10;3671:20;;;;;;;;;;;;;;;:55;;;;3752:29;3770:10;3752:8;:13;3761:3;3752:13;;;;;;;;;;;;;;;;:17;;:29;;;;:::i;:::-;3736:8;:13;3745:3;3736:13;;;;;;;;;;;;;;;:45;;;;3801:1;3795:3;:7;3791:126;;;3836:24;3856:3;3836:8;:15;3845:5;;;;;;;;;;;3836:15;;;;;;;;;;;;;;;;:19;;:24;;;;:::i;:::-;3818:8;:15;3827:5;;;;;;;;;;;3818:15;;;;;;;;;;;;;;;:42;;;;3895:5;;;;;;;;;;;3874:32;;3883:10;3874:32;;;3902:3;3874:32;;;;;;;;;;;;;;;;;;3791:126;3947:3;3926:37;;3935:10;3926:37;;;3952:10;3926:37;;;;;;;;;;;;;;;;;;3410:560;;;;;:::o;171:201::-;229:7;302:9;257:1;252;:6;248:45;;;281:1;274:8;;;;248:45;318:1;314;:5;302:17;;345:1;340;336;:5;;;;;;;;:10;329:18;;;;;;364:1;357:8;;171:201;;;;;;:::o;7017:143::-;7095:14;7128:7;:15;7136:6;7128:15;;;;;;;;;;;;;;;:25;7144:8;7128:25;;;;;;;;;;;;;;;;7121:32;;7017:143;;;;:::o;378:283::-;436:7;533:9;549:1;545;:5;;;;;;;;533:17;;653:1;646:8;;378:283;;;;;:::o;667:120::-;725:7;756:1;751;:6;;744:14;;;;;;779:1;775;:5;768:12;;667:120;;;;:::o;793:143::-;851:7;870:9;886:1;882;:5;870:17;;909:1;904;:6;;897:14;;;;;;928:1;921:8;;793:143;;;;;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "2214600",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "MAX_UINT()": "821",
                "_totalSupply()": "625",
                "addBlackList(address)": "21964",
                "allowance(address,address)": "infinite",
                "allowed(address,address)": "902",
                "approve(address,uint256)": "infinite",
                "balanceOf(address)": "infinite",
                "balances(address)": "675",
                "basisPointsRate()": "955",
                "decimals()": "581",
                "deprecate(address)": "42125",
                "deprecated()": "547",
                "destroyBlackFunds(address)": "infinite",
                "getBlackListStatus(address)": "860",
                "getOwner()": "835",
                "isBlackListed(address)": "1130",
                "issue(uint256)": "44321",
                "maximumFee()": "603",
                "name()": "infinite",
                "owner()": "849",
                "pause()": "22181",
                "paused()": "811",
                "redeem(uint256)": "43611",
                "removeBlackList(address)": "22492",
                "setParams(uint256,uint256)": "infinite",
                "symbol()": "infinite",
                "totalSupply()": "infinite",
                "transfer(address,uint256)": "infinite",
                "transferFrom(address,address,uint256)": "infinite",
                "transferOwnership(address)": "21411",
                "unpause()": "22068",
                "upgradedAddress()": "585"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "60"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "MSTORE"
                },
                {
                  "begin": 7370,
                  "end": 7375,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "DUP1"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "PUSH",
                  "value": "14"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "EXP"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "DUP2"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "SLOAD"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "DUP2"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "MUL"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "NOT"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "AND"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "SWAP1"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "DUP4"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "ISZERO"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "ISZERO"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "MUL"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "OR"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "SWAP1"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "SSTORE"
                },
                {
                  "begin": 7349,
                  "end": 7375,
                  "name": "POP"
                },
                {
                  "begin": 3036,
                  "end": 3037,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3006,
                  "end": 3037,
                  "name": "PUSH",
                  "value": "3"
                },
                {
                  "begin": 3006,
                  "end": 3037,
                  "name": "SSTORE"
                },
                {
                  "begin": 3068,
                  "end": 3069,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3043,
                  "end": 3069,
                  "name": "PUSH",
                  "value": "4"
                },
                {
                  "begin": 3043,
                  "end": 3069,
                  "name": "SSTORE"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "CALLVALUE"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "ISZERO"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "PUSH [tag]",
                  "value": "1"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "JUMPI"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "DUP1"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "REVERT"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "tag",
                  "value": "1"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "MLOAD"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "PUSHSIZE"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "CODESIZE"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "SUB"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "DUP1"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "PUSHSIZE"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "DUP4"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "CODECOPY"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "DUP2"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "ADD"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "MSTORE"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "DUP1"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "DUP1"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "MLOAD"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "SWAP1"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "ADD"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "SWAP1"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "SWAP2"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "SWAP1"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "DUP1"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "MLOAD"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "DUP3"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "ADD"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "SWAP2"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "SWAP1"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "ADD"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "DUP1"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "MLOAD"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "DUP3"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "ADD"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "SWAP2"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "SWAP1"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "ADD"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "DUP1"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "MLOAD"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "SWAP1"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "ADD"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "SWAP1"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "SWAP2"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "SWAP1"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "POP"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "POP"
                },
                {
                  "begin": 1351,
                  "end": 1361,
                  "name": "CALLER"
                },
                {
                  "begin": 1343,
                  "end": 1348,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 1343,
                  "end": 1348,
                  "name": "DUP1"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "EXP"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "DUP2"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "SLOAD"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "DUP2"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "PUSH",
                  "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "MUL"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "NOT"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "AND"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "SWAP1"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "DUP4"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "PUSH",
                  "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "AND"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "MUL"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "OR"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "SWAP1"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "SSTORE"
                },
                {
                  "begin": 1343,
                  "end": 1361,
                  "name": "POP"
                },
                {
                  "begin": 10308,
                  "end": 10322,
                  "name": "DUP4"
                },
                {
                  "begin": 10293,
                  "end": 10305,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 10293,
                  "end": 10322,
                  "name": "DUP2"
                },
                {
                  "begin": 10293,
                  "end": 10322,
                  "name": "SWAP1"
                },
                {
                  "begin": 10293,
                  "end": 10322,
                  "name": "SSTORE"
                },
                {
                  "begin": 10293,
                  "end": 10322,
                  "name": "POP"
                },
                {
                  "begin": 10339,
                  "end": 10344,
                  "name": "DUP3"
                },
                {
                  "begin": 10332,
                  "end": 10336,
                  "name": "PUSH",
                  "value": "7"
                },
                {
                  "begin": 10332,
                  "end": 10344,
                  "name": "SWAP1"
                },
                {
                  "begin": 10332,
                  "end": 10344,
                  "name": "DUP1"
                },
                {
                  "begin": 10332,
                  "end": 10344,
                  "name": "MLOAD"
                },
                {
                  "begin": 10332,
                  "end": 10344,
                  "name": "SWAP1"
                },
                {
                  "begin": 10332,
                  "end": 10344,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 10332,
                  "end": 10344,
                  "name": "ADD"
                },
                {
                  "begin": 10332,
                  "end": 10344,
                  "name": "SWAP1"
                },
                {
                  "begin": 10332,
                  "end": 10344,
                  "name": "PUSH [tag]",
                  "value": "6"
                },
                {
                  "begin": 10332,
                  "end": 10344,
                  "name": "SWAP3"
                },
                {
                  "begin": 10332,
                  "end": 10344,
                  "name": "SWAP2"
                },
                {
                  "begin": 10332,
                  "end": 10344,
                  "name": "SWAP1"
                },
                {
                  "begin": 10332,
                  "end": 10344,
                  "name": "PUSH [tag]",
                  "value": "7"
                },
                {
                  "begin": 10332,
                  "end": 10344,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 10332,
                  "end": 10344,
                  "name": "tag",
                  "value": "6"
                },
                {
                  "begin": 10332,
                  "end": 10344,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 10332,
                  "end": 10344,
                  "name": "POP"
                },
                {
                  "begin": 10363,
                  "end": 10370,
                  "name": "DUP2"
                },
                {
                  "begin": 10354,
                  "end": 10360,
                  "name": "PUSH",
                  "value": "8"
                },
                {
                  "begin": 10354,
                  "end": 10370,
                  "name": "SWAP1"
                },
                {
                  "begin": 10354,
                  "end": 10370,
                  "name": "DUP1"
                },
                {
                  "begin": 10354,
                  "end": 10370,
                  "name": "MLOAD"
                },
                {
                  "begin": 10354,
                  "end": 10370,
                  "name": "SWAP1"
                },
                {
                  "begin": 10354,
                  "end": 10370,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 10354,
                  "end": 10370,
                  "name": "ADD"
                },
                {
                  "begin": 10354,
                  "end": 10370,
                  "name": "SWAP1"
                },
                {
                  "begin": 10354,
                  "end": 10370,
                  "name": "PUSH [tag]",
                  "value": "8"
                },
                {
                  "begin": 10354,
                  "end": 10370,
                  "name": "SWAP3"
                },
                {
                  "begin": 10354,
                  "end": 10370,
                  "name": "SWAP2"
                },
                {
                  "begin": 10354,
                  "end": 10370,
                  "name": "SWAP1"
                },
                {
                  "begin": 10354,
                  "end": 10370,
                  "name": "PUSH [tag]",
                  "value": "7"
                },
                {
                  "begin": 10354,
                  "end": 10370,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 10354,
                  "end": 10370,
                  "name": "tag",
                  "value": "8"
                },
                {
                  "begin": 10354,
                  "end": 10370,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 10354,
                  "end": 10370,
                  "name": "POP"
                },
                {
                  "begin": 10391,
                  "end": 10400,
                  "name": "DUP1"
                },
                {
                  "begin": 10380,
                  "end": 10388,
                  "name": "PUSH",
                  "value": "9"
                },
                {
                  "begin": 10380,
                  "end": 10400,
                  "name": "DUP2"
                },
                {
                  "begin": 10380,
                  "end": 10400,
                  "name": "SWAP1"
                },
                {
                  "begin": 10380,
                  "end": 10400,
                  "name": "SSTORE"
                },
                {
                  "begin": 10380,
                  "end": 10400,
                  "name": "POP"
                },
                {
                  "begin": 10428,
                  "end": 10442,
                  "name": "DUP4"
                },
                {
                  "begin": 10410,
                  "end": 10418,
                  "name": "PUSH",
                  "value": "2"
                },
                {
                  "begin": 10410,
                  "end": 10425,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 10419,
                  "end": 10424,
                  "name": "DUP1"
                },
                {
                  "begin": 10419,
                  "end": 10424,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 10419,
                  "end": 10424,
                  "name": "SWAP1"
                },
                {
                  "begin": 10419,
                  "end": 10424,
                  "name": "SLOAD"
                },
                {
                  "begin": 10419,
                  "end": 10424,
                  "name": "SWAP1"
                },
                {
                  "begin": 10419,
                  "end": 10424,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 10419,
                  "end": 10424,
                  "name": "EXP"
                },
                {
                  "begin": 10419,
                  "end": 10424,
                  "name": "SWAP1"
                },
                {
                  "begin": 10419,
                  "end": 10424,
                  "name": "DIV"
                },
                {
                  "begin": 10419,
                  "end": 10424,
                  "name": "PUSH",
                  "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 10419,
                  "end": 10424,
                  "name": "AND"
                },
                {
                  "begin": 10410,
                  "end": 10425,
                  "name": "PUSH",
                  "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 10410,
                  "end": 10425,
                  "name": "AND"
                },
                {
                  "begin": 10410,
                  "end": 10425,
                  "name": "PUSH",
                  "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 10410,
                  "end": 10425,
                  "name": "AND"
                },
                {
                  "begin": 10410,
                  "end": 10425,
                  "name": "DUP2"
                },
                {
                  "begin": 10410,
                  "end": 10425,
                  "name": "MSTORE"
                },
                {
                  "begin": 10410,
                  "end": 10425,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 10410,
                  "end": 10425,
                  "name": "ADD"
                },
                {
                  "begin": 10410,
                  "end": 10425,
                  "name": "SWAP1"
                },
                {
                  "begin": 10410,
                  "end": 10425,
                  "name": "DUP2"
                },
                {
                  "begin": 10410,
                  "end": 10425,
                  "name": "MSTORE"
                },
                {
                  "begin": 10410,
                  "end": 10425,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 10410,
                  "end": 10425,
                  "name": "ADD"
                },
                {
                  "begin": 10410,
                  "end": 10425,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 10410,
                  "end": 10425,
                  "name": "KECCAK256"
                },
                {
                  "begin": 10410,
                  "end": 10442,
                  "name": "DUP2"
                },
                {
                  "begin": 10410,
                  "end": 10442,
                  "name": "SWAP1"
                },
                {
                  "begin": 10410,
                  "end": 10442,
                  "name": "SSTORE"
                },
                {
                  "begin": 10410,
                  "end": 10442,
                  "name": "POP"
                },
                {
                  "begin": 10465,
                  "end": 10470,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 10452,
                  "end": 10462,
                  "name": "PUSH",
                  "value": "A"
                },
                {
                  "begin": 10452,
                  "end": 10462,
                  "name": "PUSH",
                  "value": "14"
                },
                {
                  "begin": 10452,
                  "end": 10470,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 10452,
                  "end": 10470,
                  "name": "EXP"
                },
                {
                  "begin": 10452,
                  "end": 10470,
                  "name": "DUP2"
                },
                {
                  "begin": 10452,
                  "end": 10470,
                  "name": "SLOAD"
                },
                {
                  "begin": 10452,
                  "end": 10470,
                  "name": "DUP2"
                },
                {
                  "begin": 10452,
                  "end": 10470,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": 10452,
                  "end": 10470,
                  "name": "MUL"
                },
                {
                  "begin": 10452,
                  "end": 10470,
                  "name": "NOT"
                },
                {
                  "begin": 10452,
                  "end": 10470,
                  "name": "AND"
                },
                {
                  "begin": 10452,
                  "end": 10470,
                  "name": "SWAP1"
                },
                {
                  "begin": 10452,
                  "end": 10470,
                  "name": "DUP4"
                },
                {
                  "begin": 10452,
                  "end": 10470,
                  "name": "ISZERO"
                },
                {
                  "begin": 10452,
                  "end": 10470,
                  "name": "ISZERO"
                },
                {
                  "begin": 10452,
                  "end": 10470,
                  "name": "MUL"
                },
                {
                  "begin": 10452,
                  "end": 10470,
                  "name": "OR"
                },
                {
                  "begin": 10452,
                  "end": 10470,
                  "name": "SWAP1"
                },
                {
                  "begin": 10452,
                  "end": 10470,
                  "name": "SSTORE"
                },
                {
                  "begin": 10452,
                  "end": 10470,
                  "name": "POP"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "POP"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "POP"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "POP"
                },
                {
                  "begin": 10188,
                  "end": 10477,
                  "name": "POP"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH [tag]",
                  "value": "9"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMP"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "tag",
                  "value": "7"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP3"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SLOAD"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP2"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "AND"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "ISZERO"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "MUL"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SUB"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "AND"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "2"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SWAP1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DIV"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SWAP1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "MSTORE"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "KECCAK256"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SWAP1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "1F"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "ADD"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SWAP1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DIV"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP2"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "ADD"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SWAP3"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP3"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "1F"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "LT"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH [tag]",
                  "value": "11"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMPI"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "MLOAD"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "NOT"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "AND"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP4"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "ADD"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "OR"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP6"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SSTORE"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH [tag]",
                  "value": "10"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMP"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "tag",
                  "value": "11"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP3"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "ADD"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "ADD"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP6"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SSTORE"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP3"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "ISZERO"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH [tag]",
                  "value": "10"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMPI"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SWAP2"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP3"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "ADD"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "tag",
                  "value": "12"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP3"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP2"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "GT"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "ISZERO"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH [tag]",
                  "value": "13"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMPI"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP3"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "MLOAD"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP3"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SSTORE"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SWAP2"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "ADD"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SWAP2"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SWAP1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "ADD"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SWAP1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH [tag]",
                  "value": "12"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMP"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "tag",
                  "value": "13"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "tag",
                  "value": "10"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "POP"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SWAP1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "POP"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH [tag]",
                  "value": "14"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SWAP2"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SWAP1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH [tag]",
                  "value": "15"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "tag",
                  "value": "14"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "POP"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SWAP1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "tag",
                  "value": "15"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH [tag]",
                  "value": "16"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SWAP2"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SWAP1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "tag",
                  "value": "17"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP3"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "GT"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "ISZERO"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH [tag]",
                  "value": "18"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMPI"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP2"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SWAP1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SSTORE"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "POP"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "ADD"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH [tag]",
                  "value": "17"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMP"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "tag",
                  "value": "18"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "POP"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SWAP1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMP"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "tag",
                  "value": "16"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "SWAP1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "tag",
                  "value": "9"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH #[$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "DUP1"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH [$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "CODECOPY"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 9693,
                  "end": 14474,
                  "name": "RETURN"
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a165627a7a72305820e1102019e31e3e2e3f96210f7695ac4ab6166b170eb07282a4b703efd392f2460029",
                  ".code": [
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "60"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "CALLDATASIZE"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DIV"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "AND"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "6FDDE03"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "2"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "753C30C"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "3"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "95EA7B3"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "4"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "E136B19"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "5"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "ECB93C0"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "6"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "18160DDD"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "7"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "23B872DD"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "8"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "26976E3F"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "9"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "27E235E3"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "10"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "313CE567"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "11"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "35390714"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "12"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "3EAAF86B"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "13"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "3F4BA83A"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "14"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "59BF1ABE"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "15"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "5C658165"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "16"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "5C975ABB"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "17"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "70A08231"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "18"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "8456CB59"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "19"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "893D20E8"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "20"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "8DA5CB5B"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "21"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "95D89B41"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "22"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "A9059CBB"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "23"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "C0324C77"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "24"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "CC872B66"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "25"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "DB006A75"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "26"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "DD62ED3E"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "27"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "DD644F72"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "28"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "E47D6060"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "29"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "E4997DC5"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "30"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "E5B5019A"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "31"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "F2FDE38B"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "32"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "F3BDC228"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "EQ"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH [tag]",
                      "value": "33"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "tag",
                      "value": "1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9693,
                      "end": 14474,
                      "name": "REVERT"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "tag",
                      "value": "2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH [tag]",
                      "value": "34"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "REVERT"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "tag",
                      "value": "34"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH [tag]",
                      "value": "35"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH [tag]",
                      "value": "36"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "JUMP"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "tag",
                      "value": "35"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "ADD"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP3"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SUB"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP3"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP4"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "ADD"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "POP"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "ADD"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP4"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP4"
                    },
                    {
                      "begin": 23,
                      "end": 24,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "tag",
                      "value": "37"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 33,
                      "end": 36,
                      "name": "DUP4"
                    },
                    {
                      "begin": 30,
                      "end": 31,
                      "name": "DUP2"
                    },
                    {
                      "begin": 27,
                      "end": 29,
                      "name": "LT"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "PUSH [tag]",
                      "value": "38"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 99,
                      "end": 100,
                      "name": "DUP1"
                    },
                    {
                      "begin": 94,
                      "end": 97,
                      "name": "DUP3"
                    },
                    {
                      "begin": 90,
                      "end": 93,
                      "name": "ADD"
                    },
                    {
                      "begin": 84,
                      "end": 89,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 80,
                      "end": 81,
                      "name": "DUP2"
                    },
                    {
                      "begin": 75,
                      "end": 78,
                      "name": "DUP5"
                    },
                    {
                      "begin": 71,
                      "end": 74,
                      "name": "ADD"
                    },
                    {
                      "begin": 64,
                      "end": 70,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 52,
                      "end": 54,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 49,
                      "end": 50,
                      "name": "DUP2"
                    },
                    {
                      "begin": 45,
                      "end": 48,
                      "name": "ADD"
                    },
                    {
                      "begin": 40,
                      "end": 55,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 40,
                      "end": 55,
                      "name": "POP"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "PUSH [tag]",
                      "value": "37"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMP"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "tag",
                      "value": "38"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12,
                      "end": 26,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ADD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "AND"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH [tag]",
                      "value": "40"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "EXP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "NOT"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "AND"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ADD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "tag",
                      "value": "40"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "RETURN"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "tag",
                      "value": "3"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "PUSH [tag]",
                      "value": "41"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "REVERT"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "tag",
                      "value": "41"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "PUSH [tag]",
                      "value": "42"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "AND"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "ADD"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "POP"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "POP"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "PUSH [tag]",
                      "value": "43"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "JUMP"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "tag",
                      "value": "42"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "STOP"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "tag",
                      "value": "4"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "PUSH [tag]",
                      "value": "44"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "REVERT"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "tag",
                      "value": "44"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "PUSH [tag]",
                      "value": "45"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "AND"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "ADD"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "ADD"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "POP"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "POP"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "PUSH [tag]",
                      "value": "46"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "JUMP"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "tag",
                      "value": "45"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "STOP"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "tag",
                      "value": "5"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "PUSH [tag]",
                      "value": "47"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "REVERT"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "tag",
                      "value": "47"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "PUSH [tag]",
                      "value": "48"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "PUSH [tag]",
                      "value": "49"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "JUMP"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "tag",
                      "value": "48"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "DUP3"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "ADD"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "POP"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "POP"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "SUB"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "RETURN"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "tag",
                      "value": "6"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "PUSH [tag]",
                      "value": "50"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "REVERT"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "tag",
                      "value": "50"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "PUSH [tag]",
                      "value": "51"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "AND"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "ADD"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "POP"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "POP"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "PUSH [tag]",
                      "value": "52"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "JUMP"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "tag",
                      "value": "51"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "STOP"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "tag",
                      "value": "7"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "REVERT"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "tag",
                      "value": "53"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "PUSH [tag]",
                      "value": "54"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "PUSH [tag]",
                      "value": "55"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "JUMP"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "tag",
                      "value": "54"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "DUP3"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "ADD"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "POP"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "POP"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "SUB"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "RETURN"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "tag",
                      "value": "8"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "PUSH [tag]",
                      "value": "56"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "REVERT"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "tag",
                      "value": "56"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "PUSH [tag]",
                      "value": "57"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "AND"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "ADD"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "AND"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "ADD"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "ADD"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "POP"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "POP"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "PUSH [tag]",
                      "value": "58"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "JUMP"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "tag",
                      "value": "57"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "STOP"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "tag",
                      "value": "9"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "PUSH [tag]",
                      "value": "59"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "REVERT"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "tag",
                      "value": "59"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "PUSH [tag]",
                      "value": "60"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "PUSH [tag]",
                      "value": "61"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "JUMP"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "tag",
                      "value": "60"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "DUP3"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "AND"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "AND"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "ADD"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "POP"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "POP"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "SUB"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "RETURN"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "tag",
                      "value": "10"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "PUSH [tag]",
                      "value": "62"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "REVERT"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "tag",
                      "value": "62"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "PUSH [tag]",
                      "value": "63"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "AND"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "ADD"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "POP"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "POP"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "PUSH [tag]",
                      "value": "64"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "JUMP"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "tag",
                      "value": "63"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "DUP3"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "ADD"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "POP"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "POP"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "SUB"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "RETURN"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "tag",
                      "value": "11"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "PUSH [tag]",
                      "value": "65"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "REVERT"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "tag",
                      "value": "65"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "PUSH [tag]",
                      "value": "66"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "PUSH [tag]",
                      "value": "67"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "JUMP"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "tag",
                      "value": "66"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "DUP3"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "ADD"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "POP"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "POP"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "SUB"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "RETURN"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "tag",
                      "value": "12"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "PUSH [tag]",
                      "value": "68"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "tag",
                      "value": "68"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "PUSH [tag]",
                      "value": "69"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "PUSH [tag]",
                      "value": "70"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "tag",
                      "value": "69"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "ADD"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "POP"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "POP"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "SUB"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "RETURN"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "tag",
                      "value": "13"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "PUSH [tag]",
                      "value": "71"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "REVERT"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "tag",
                      "value": "71"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "PUSH [tag]",
                      "value": "72"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "PUSH [tag]",
                      "value": "73"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "JUMP"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "tag",
                      "value": "72"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "DUP3"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "ADD"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "POP"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "POP"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "SUB"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "RETURN"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "tag",
                      "value": "14"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "PUSH [tag]",
                      "value": "74"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "REVERT"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "tag",
                      "value": "74"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "PUSH [tag]",
                      "value": "75"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "PUSH [tag]",
                      "value": "76"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "JUMP"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "tag",
                      "value": "75"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "STOP"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "tag",
                      "value": "15"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "PUSH [tag]",
                      "value": "77"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "REVERT"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "tag",
                      "value": "77"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "PUSH [tag]",
                      "value": "78"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "AND"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "ADD"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "POP"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "POP"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "PUSH [tag]",
                      "value": "79"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "JUMP"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "tag",
                      "value": "78"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "DUP3"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "ADD"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "POP"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "POP"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "SUB"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "RETURN"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "tag",
                      "value": "16"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH [tag]",
                      "value": "80"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "tag",
                      "value": "80"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH [tag]",
                      "value": "81"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "AND"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "ADD"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "AND"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "ADD"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "POP"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "POP"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH [tag]",
                      "value": "82"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "tag",
                      "value": "81"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "DUP3"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "ADD"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "POP"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "POP"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "SUB"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "RETURN"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "tag",
                      "value": "17"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH [tag]",
                      "value": "83"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "REVERT"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "tag",
                      "value": "83"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH [tag]",
                      "value": "84"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH [tag]",
                      "value": "85"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "JUMP"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "tag",
                      "value": "84"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "DUP3"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "ADD"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "POP"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "POP"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "SUB"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "RETURN"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "tag",
                      "value": "18"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "PUSH [tag]",
                      "value": "86"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "REVERT"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "tag",
                      "value": "86"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "PUSH [tag]",
                      "value": "87"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "AND"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "ADD"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "POP"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "POP"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "PUSH [tag]",
                      "value": "88"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "JUMP"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "tag",
                      "value": "87"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "DUP3"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "ADD"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "POP"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "POP"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "SUB"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "RETURN"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "tag",
                      "value": "19"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "PUSH [tag]",
                      "value": "89"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "REVERT"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "tag",
                      "value": "89"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "PUSH [tag]",
                      "value": "90"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "PUSH [tag]",
                      "value": "91"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "JUMP"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "tag",
                      "value": "90"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "STOP"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "tag",
                      "value": "20"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "PUSH [tag]",
                      "value": "92"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "REVERT"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "tag",
                      "value": "92"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "PUSH [tag]",
                      "value": "93"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "PUSH [tag]",
                      "value": "94"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "JUMP"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "tag",
                      "value": "93"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "DUP3"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "AND"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "AND"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "ADD"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "POP"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "POP"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "SUB"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "RETURN"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "tag",
                      "value": "21"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH [tag]",
                      "value": "95"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "tag",
                      "value": "95"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH [tag]",
                      "value": "96"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH [tag]",
                      "value": "97"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMP"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "tag",
                      "value": "96"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "AND"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "AND"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "ADD"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "POP"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "POP"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SUB"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "RETURN"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "tag",
                      "value": "22"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH [tag]",
                      "value": "98"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "REVERT"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "tag",
                      "value": "98"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH [tag]",
                      "value": "99"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH [tag]",
                      "value": "100"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "JUMP"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "tag",
                      "value": "99"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "ADD"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP3"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SUB"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP3"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP4"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "ADD"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "POP"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "ADD"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP4"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP4"
                    },
                    {
                      "begin": 23,
                      "end": 24,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "tag",
                      "value": "101"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 33,
                      "end": 36,
                      "name": "DUP4"
                    },
                    {
                      "begin": 30,
                      "end": 31,
                      "name": "DUP2"
                    },
                    {
                      "begin": 27,
                      "end": 29,
                      "name": "LT"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "PUSH [tag]",
                      "value": "102"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 99,
                      "end": 100,
                      "name": "DUP1"
                    },
                    {
                      "begin": 94,
                      "end": 97,
                      "name": "DUP3"
                    },
                    {
                      "begin": 90,
                      "end": 93,
                      "name": "ADD"
                    },
                    {
                      "begin": 84,
                      "end": 89,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 80,
                      "end": 81,
                      "name": "DUP2"
                    },
                    {
                      "begin": 75,
                      "end": 78,
                      "name": "DUP5"
                    },
                    {
                      "begin": 71,
                      "end": 74,
                      "name": "ADD"
                    },
                    {
                      "begin": 64,
                      "end": 70,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 52,
                      "end": 54,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 49,
                      "end": 50,
                      "name": "DUP2"
                    },
                    {
                      "begin": 45,
                      "end": 48,
                      "name": "ADD"
                    },
                    {
                      "begin": 40,
                      "end": 55,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 40,
                      "end": 55,
                      "name": "POP"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "PUSH [tag]",
                      "value": "101"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMP"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "tag",
                      "value": "102"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12,
                      "end": 26,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ADD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "AND"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH [tag]",
                      "value": "104"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "EXP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "NOT"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "AND"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ADD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "tag",
                      "value": "104"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "RETURN"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "tag",
                      "value": "23"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "PUSH [tag]",
                      "value": "105"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "REVERT"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "tag",
                      "value": "105"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "PUSH [tag]",
                      "value": "106"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "AND"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "ADD"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "ADD"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "POP"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "POP"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "PUSH [tag]",
                      "value": "107"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "JUMP"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "tag",
                      "value": "106"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "STOP"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "tag",
                      "value": "24"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "PUSH [tag]",
                      "value": "108"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "REVERT"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "tag",
                      "value": "108"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "PUSH [tag]",
                      "value": "109"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "ADD"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "ADD"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "POP"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "POP"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "PUSH [tag]",
                      "value": "110"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "JUMP"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "tag",
                      "value": "109"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "STOP"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "tag",
                      "value": "25"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "PUSH [tag]",
                      "value": "111"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "REVERT"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "tag",
                      "value": "111"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "PUSH [tag]",
                      "value": "112"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "ADD"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "POP"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "POP"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "PUSH [tag]",
                      "value": "113"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "JUMP"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "tag",
                      "value": "112"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "STOP"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "tag",
                      "value": "26"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "PUSH [tag]",
                      "value": "114"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "REVERT"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "tag",
                      "value": "114"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "PUSH [tag]",
                      "value": "115"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "ADD"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "POP"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "POP"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "PUSH [tag]",
                      "value": "116"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "JUMP"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "tag",
                      "value": "115"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "STOP"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "tag",
                      "value": "27"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "PUSH [tag]",
                      "value": "117"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "REVERT"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "tag",
                      "value": "117"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "PUSH [tag]",
                      "value": "118"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "AND"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "ADD"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "AND"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "ADD"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "POP"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "POP"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "PUSH [tag]",
                      "value": "119"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "JUMP"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "tag",
                      "value": "118"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "DUP3"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "ADD"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "POP"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "POP"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "SUB"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "RETURN"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "tag",
                      "value": "28"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "PUSH [tag]",
                      "value": "120"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "tag",
                      "value": "120"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "PUSH [tag]",
                      "value": "121"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "PUSH [tag]",
                      "value": "122"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "tag",
                      "value": "121"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "ADD"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "POP"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "POP"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "SUB"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "RETURN"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "tag",
                      "value": "29"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "PUSH [tag]",
                      "value": "123"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "REVERT"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "tag",
                      "value": "123"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "PUSH [tag]",
                      "value": "124"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "AND"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "ADD"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "POP"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "POP"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "PUSH [tag]",
                      "value": "125"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "JUMP"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "tag",
                      "value": "124"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "DUP3"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "ADD"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "POP"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "POP"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "SUB"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "RETURN"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "tag",
                      "value": "30"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "PUSH [tag]",
                      "value": "126"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "REVERT"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "tag",
                      "value": "126"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "PUSH [tag]",
                      "value": "127"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "AND"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "ADD"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "POP"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "POP"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "PUSH [tag]",
                      "value": "128"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "JUMP"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "tag",
                      "value": "127"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "STOP"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "tag",
                      "value": "31"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "PUSH [tag]",
                      "value": "129"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "tag",
                      "value": "129"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "PUSH [tag]",
                      "value": "130"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "PUSH [tag]",
                      "value": "131"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "tag",
                      "value": "130"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "DUP3"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "ADD"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "POP"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "POP"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "SUB"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "RETURN"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "tag",
                      "value": "32"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH [tag]",
                      "value": "132"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "tag",
                      "value": "132"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH [tag]",
                      "value": "133"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "AND"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "ADD"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "POP"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "POP"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "PUSH [tag]",
                      "value": "134"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMP"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "tag",
                      "value": "133"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "STOP"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "tag",
                      "value": "33"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "PUSH [tag]",
                      "value": "135"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "REVERT"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "tag",
                      "value": "135"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "PUSH [tag]",
                      "value": "136"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "AND"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "ADD"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "POP"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "POP"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "PUSH [tag]",
                      "value": "137"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "JUMP"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "tag",
                      "value": "136"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "STOP"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "tag",
                      "value": "36"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "7"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "AND"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "MUL"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SUB"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "AND"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DIV"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "ADD"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DIV"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "MUL"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "ADD"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "ADD"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "ADD"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP3"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "AND"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "MUL"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SUB"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "AND"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DIV"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH [tag]",
                      "value": "138"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "LT"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH [tag]",
                      "value": "139"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP4"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DIV"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "MUL"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP4"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "ADD"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH [tag]",
                      "value": "138"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "JUMP"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "tag",
                      "value": "139"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP3"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "ADD"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "tag",
                      "value": "140"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "ADD"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "ADD"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP4"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "GT"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH [tag]",
                      "value": "140"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP3"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SUB"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "AND"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP3"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "ADD"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "tag",
                      "value": "138"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "POP"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "POP"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "POP"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "POP"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "POP"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9759,
                      "end": 9777,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "tag",
                      "value": "43"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "EXP"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DIV"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1507,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "EQ"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH [tag]",
                      "value": "142"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "tag",
                      "value": "142"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12530,
                      "end": 12534,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 12517,
                      "end": 12527,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 12517,
                      "end": 12527,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 12517,
                      "end": 12534,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 12517,
                      "end": 12534,
                      "name": "EXP"
                    },
                    {
                      "begin": 12517,
                      "end": 12534,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12517,
                      "end": 12534,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 12517,
                      "end": 12534,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12517,
                      "end": 12534,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 12517,
                      "end": 12534,
                      "name": "MUL"
                    },
                    {
                      "begin": 12517,
                      "end": 12534,
                      "name": "NOT"
                    },
                    {
                      "begin": 12517,
                      "end": 12534,
                      "name": "AND"
                    },
                    {
                      "begin": 12517,
                      "end": 12534,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12517,
                      "end": 12534,
                      "name": "DUP4"
                    },
                    {
                      "begin": 12517,
                      "end": 12534,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12517,
                      "end": 12534,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12517,
                      "end": 12534,
                      "name": "MUL"
                    },
                    {
                      "begin": 12517,
                      "end": 12534,
                      "name": "OR"
                    },
                    {
                      "begin": 12517,
                      "end": 12534,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12517,
                      "end": 12534,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 12517,
                      "end": 12534,
                      "name": "POP"
                    },
                    {
                      "begin": 12562,
                      "end": 12578,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12544,
                      "end": 12559,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 12544,
                      "end": 12559,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12544,
                      "end": 12578,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 12544,
                      "end": 12578,
                      "name": "EXP"
                    },
                    {
                      "begin": 12544,
                      "end": 12578,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12544,
                      "end": 12578,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 12544,
                      "end": 12578,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12544,
                      "end": 12578,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12544,
                      "end": 12578,
                      "name": "MUL"
                    },
                    {
                      "begin": 12544,
                      "end": 12578,
                      "name": "NOT"
                    },
                    {
                      "begin": 12544,
                      "end": 12578,
                      "name": "AND"
                    },
                    {
                      "begin": 12544,
                      "end": 12578,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12544,
                      "end": 12578,
                      "name": "DUP4"
                    },
                    {
                      "begin": 12544,
                      "end": 12578,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12544,
                      "end": 12578,
                      "name": "AND"
                    },
                    {
                      "begin": 12544,
                      "end": 12578,
                      "name": "MUL"
                    },
                    {
                      "begin": 12544,
                      "end": 12578,
                      "name": "OR"
                    },
                    {
                      "begin": 12544,
                      "end": 12578,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12544,
                      "end": 12578,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 12544,
                      "end": 12578,
                      "name": "POP"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "PUSH",
                      "value": "CC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E"
                    },
                    {
                      "begin": 12598,
                      "end": 12614,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "DUP3"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "AND"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "AND"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "ADD"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "POP"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "POP"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "SUB"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12588,
                      "end": 12615,
                      "name": "LOG1"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "POP"
                    },
                    {
                      "begin": 12445,
                      "end": 12622,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "tag",
                      "value": "46"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11788,
                      "end": 11794,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3223,
                      "end": 3224,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 3216,
                      "end": 3220,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3216,
                      "end": 3224,
                      "name": "ADD"
                    },
                    {
                      "begin": 3198,
                      "end": 3206,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3198,
                      "end": 3206,
                      "name": "CALLDATASIZE"
                    },
                    {
                      "begin": 3198,
                      "end": 3213,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3198,
                      "end": 3213,
                      "name": "POP"
                    },
                    {
                      "begin": 3198,
                      "end": 3224,
                      "name": "LT"
                    },
                    {
                      "begin": 3196,
                      "end": 3225,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "PUSH [tag]",
                      "value": "145"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "tag",
                      "value": "145"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11810,
                      "end": 11820,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 11810,
                      "end": 11820,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 11810,
                      "end": 11820,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11810,
                      "end": 11820,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 11810,
                      "end": 11820,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11810,
                      "end": 11820,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 11810,
                      "end": 11820,
                      "name": "EXP"
                    },
                    {
                      "begin": 11810,
                      "end": 11820,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11810,
                      "end": 11820,
                      "name": "DIV"
                    },
                    {
                      "begin": 11810,
                      "end": 11820,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 11810,
                      "end": 11820,
                      "name": "AND"
                    },
                    {
                      "begin": 11806,
                      "end": 12007,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11806,
                      "end": 12007,
                      "name": "PUSH [tag]",
                      "value": "147"
                    },
                    {
                      "begin": 11806,
                      "end": 12007,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 11865,
                      "end": 11880,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 11865,
                      "end": 11880,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11865,
                      "end": 11880,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11865,
                      "end": 11880,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 11865,
                      "end": 11880,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11865,
                      "end": 11880,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 11865,
                      "end": 11880,
                      "name": "EXP"
                    },
                    {
                      "begin": 11865,
                      "end": 11880,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11865,
                      "end": 11880,
                      "name": "DIV"
                    },
                    {
                      "begin": 11865,
                      "end": 11880,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11865,
                      "end": 11880,
                      "name": "AND"
                    },
                    {
                      "begin": 11843,
                      "end": 11897,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11843,
                      "end": 11897,
                      "name": "AND"
                    },
                    {
                      "begin": 11843,
                      "end": 11897,
                      "name": "PUSH",
                      "value": "AEE92D33"
                    },
                    {
                      "begin": 11898,
                      "end": 11908,
                      "name": "CALLER"
                    },
                    {
                      "begin": 11910,
                      "end": 11918,
                      "name": "DUP6"
                    },
                    {
                      "begin": 11920,
                      "end": 11926,
                      "name": "DUP6"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "DUP5"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "AND"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "PUSH",
                      "value": "100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "MUL"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "ADD"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "DUP5"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "AND"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "AND"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "ADD"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "DUP4"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "AND"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "AND"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "ADD"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "DUP3"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "ADD"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "POP"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "POP"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "POP"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "POP"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "DUP4"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "SUB"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "DUP8"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "EXTCODESIZE"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "PUSH [tag]",
                      "value": "148"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "REVERT"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "tag",
                      "value": "148"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "PUSH",
                      "value": "2C6"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "GAS"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "SUB"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "CALL"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "PUSH [tag]",
                      "value": "149"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "REVERT"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "tag",
                      "value": "149"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "POP"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "POP"
                    },
                    {
                      "begin": 11843,
                      "end": 11927,
                      "name": "POP"
                    },
                    {
                      "begin": 11836,
                      "end": 11927,
                      "name": "PUSH [tag]",
                      "value": "146"
                    },
                    {
                      "begin": 11836,
                      "end": 11927,
                      "name": "JUMP"
                    },
                    {
                      "begin": 11806,
                      "end": 12007,
                      "name": "tag",
                      "value": "147"
                    },
                    {
                      "begin": 11806,
                      "end": 12007,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11965,
                      "end": 11996,
                      "name": "PUSH [tag]",
                      "value": "151"
                    },
                    {
                      "begin": 11979,
                      "end": 11987,
                      "name": "DUP4"
                    },
                    {
                      "begin": 11989,
                      "end": 11995,
                      "name": "DUP4"
                    },
                    {
                      "begin": 11965,
                      "end": 11978,
                      "name": "PUSH [tag]",
                      "value": "152"
                    },
                    {
                      "begin": 11965,
                      "end": 11996,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 11965,
                      "end": 11996,
                      "name": "tag",
                      "value": "151"
                    },
                    {
                      "begin": 11965,
                      "end": 11996,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3236,
                      "end": 3237,
                      "name": "tag",
                      "value": "146"
                    },
                    {
                      "begin": 3236,
                      "end": 3237,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "POP"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "POP"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "POP"
                    },
                    {
                      "begin": 11717,
                      "end": 12013,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "tag",
                      "value": "49"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "EXP"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "DIV"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "AND"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9871,
                      "end": 9893,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "tag",
                      "value": "52"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "EXP"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DIV"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1507,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "EQ"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH [tag]",
                      "value": "154"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "tag",
                      "value": "154"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8566,
                      "end": 8570,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 8539,
                      "end": 8552,
                      "name": "PUSH",
                      "value": "6"
                    },
                    {
                      "begin": 8539,
                      "end": 8563,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8553,
                      "end": 8562,
                      "name": "DUP4"
                    },
                    {
                      "begin": 8539,
                      "end": 8563,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8539,
                      "end": 8563,
                      "name": "AND"
                    },
                    {
                      "begin": 8539,
                      "end": 8563,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8539,
                      "end": 8563,
                      "name": "AND"
                    },
                    {
                      "begin": 8539,
                      "end": 8563,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8539,
                      "end": 8563,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 8539,
                      "end": 8563,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8539,
                      "end": 8563,
                      "name": "ADD"
                    },
                    {
                      "begin": 8539,
                      "end": 8563,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8539,
                      "end": 8563,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8539,
                      "end": 8563,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 8539,
                      "end": 8563,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8539,
                      "end": 8563,
                      "name": "ADD"
                    },
                    {
                      "begin": 8539,
                      "end": 8563,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8539,
                      "end": 8563,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 8539,
                      "end": 8563,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8539,
                      "end": 8570,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 8539,
                      "end": 8570,
                      "name": "EXP"
                    },
                    {
                      "begin": 8539,
                      "end": 8570,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8539,
                      "end": 8570,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 8539,
                      "end": 8570,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8539,
                      "end": 8570,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 8539,
                      "end": 8570,
                      "name": "MUL"
                    },
                    {
                      "begin": 8539,
                      "end": 8570,
                      "name": "NOT"
                    },
                    {
                      "begin": 8539,
                      "end": 8570,
                      "name": "AND"
                    },
                    {
                      "begin": 8539,
                      "end": 8570,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8539,
                      "end": 8570,
                      "name": "DUP4"
                    },
                    {
                      "begin": 8539,
                      "end": 8570,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8539,
                      "end": 8570,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8539,
                      "end": 8570,
                      "name": "MUL"
                    },
                    {
                      "begin": 8539,
                      "end": 8570,
                      "name": "OR"
                    },
                    {
                      "begin": 8539,
                      "end": 8570,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8539,
                      "end": 8570,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 8539,
                      "end": 8570,
                      "name": "POP"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "PUSH",
                      "value": "42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC"
                    },
                    {
                      "begin": 8595,
                      "end": 8604,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "DUP3"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "AND"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "AND"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "ADD"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "POP"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "POP"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "SUB"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8580,
                      "end": 8605,
                      "name": "LOG1"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "POP"
                    },
                    {
                      "begin": 8470,
                      "end": 8612,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "tag",
                      "value": "55"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12733,
                      "end": 12737,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12753,
                      "end": 12763,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 12753,
                      "end": 12763,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 12753,
                      "end": 12763,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12753,
                      "end": 12763,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 12753,
                      "end": 12763,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12753,
                      "end": 12763,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 12753,
                      "end": 12763,
                      "name": "EXP"
                    },
                    {
                      "begin": 12753,
                      "end": 12763,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12753,
                      "end": 12763,
                      "name": "DIV"
                    },
                    {
                      "begin": 12753,
                      "end": 12763,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 12753,
                      "end": 12763,
                      "name": "AND"
                    },
                    {
                      "begin": 12749,
                      "end": 12891,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12749,
                      "end": 12891,
                      "name": "PUSH [tag]",
                      "value": "157"
                    },
                    {
                      "begin": 12749,
                      "end": 12891,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 12800,
                      "end": 12815,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 12800,
                      "end": 12815,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12800,
                      "end": 12815,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12800,
                      "end": 12815,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 12800,
                      "end": 12815,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12800,
                      "end": 12815,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 12800,
                      "end": 12815,
                      "name": "EXP"
                    },
                    {
                      "begin": 12800,
                      "end": 12815,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12800,
                      "end": 12815,
                      "name": "DIV"
                    },
                    {
                      "begin": 12800,
                      "end": 12815,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12800,
                      "end": 12815,
                      "name": "AND"
                    },
                    {
                      "begin": 12786,
                      "end": 12828,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12786,
                      "end": 12828,
                      "name": "AND"
                    },
                    {
                      "begin": 12786,
                      "end": 12828,
                      "name": "PUSH",
                      "value": "18160DDD"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "ADD"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "AND"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "PUSH",
                      "value": "100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "MUL"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "ADD"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "DUP4"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "SUB"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "DUP8"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "EXTCODESIZE"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "PUSH [tag]",
                      "value": "158"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "REVERT"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "tag",
                      "value": "158"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "PUSH",
                      "value": "2C6"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "GAS"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "SUB"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "CALL"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "PUSH [tag]",
                      "value": "159"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "REVERT"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "tag",
                      "value": "159"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "POP"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "POP"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "POP"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12786,
                      "end": 12830,
                      "name": "POP"
                    },
                    {
                      "begin": 12779,
                      "end": 12830,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12779,
                      "end": 12830,
                      "name": "POP"
                    },
                    {
                      "begin": 12779,
                      "end": 12830,
                      "name": "PUSH [tag]",
                      "value": "156"
                    },
                    {
                      "begin": 12779,
                      "end": 12830,
                      "name": "JUMP"
                    },
                    {
                      "begin": 12749,
                      "end": 12891,
                      "name": "tag",
                      "value": "157"
                    },
                    {
                      "begin": 12749,
                      "end": 12891,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12868,
                      "end": 12880,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 12868,
                      "end": 12880,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 12861,
                      "end": 12880,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12861,
                      "end": 12880,
                      "name": "POP"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "tag",
                      "value": "156"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12685,
                      "end": 12897,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "tag",
                      "value": "58"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "EXP"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "DIV"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "AND"
                    },
                    {
                      "begin": 7517,
                      "end": 7524,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "PUSH [tag]",
                      "value": "162"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "REVERT"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "tag",
                      "value": "162"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11063,
                      "end": 11076,
                      "name": "PUSH",
                      "value": "6"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11077,
                      "end": 11082,
                      "name": "DUP5"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "AND"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "AND"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "ADD"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "ADD"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "EXP"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "DIV"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 11063,
                      "end": 11083,
                      "name": "AND"
                    },
                    {
                      "begin": 11062,
                      "end": 11083,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11054,
                      "end": 11084,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11054,
                      "end": 11084,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11054,
                      "end": 11084,
                      "name": "PUSH [tag]",
                      "value": "164"
                    },
                    {
                      "begin": 11054,
                      "end": 11084,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 11054,
                      "end": 11084,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11054,
                      "end": 11084,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11054,
                      "end": 11084,
                      "name": "REVERT"
                    },
                    {
                      "begin": 11054,
                      "end": 11084,
                      "name": "tag",
                      "value": "164"
                    },
                    {
                      "begin": 11054,
                      "end": 11084,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11098,
                      "end": 11108,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 11098,
                      "end": 11108,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 11098,
                      "end": 11108,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11098,
                      "end": 11108,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 11098,
                      "end": 11108,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11098,
                      "end": 11108,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 11098,
                      "end": 11108,
                      "name": "EXP"
                    },
                    {
                      "begin": 11098,
                      "end": 11108,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11098,
                      "end": 11108,
                      "name": "DIV"
                    },
                    {
                      "begin": 11098,
                      "end": 11108,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 11098,
                      "end": 11108,
                      "name": "AND"
                    },
                    {
                      "begin": 11094,
                      "end": 11309,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11094,
                      "end": 11309,
                      "name": "PUSH [tag]",
                      "value": "165"
                    },
                    {
                      "begin": 11094,
                      "end": 11309,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 11153,
                      "end": 11168,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 11153,
                      "end": 11168,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11153,
                      "end": 11168,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11153,
                      "end": 11168,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 11153,
                      "end": 11168,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11153,
                      "end": 11168,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 11153,
                      "end": 11168,
                      "name": "EXP"
                    },
                    {
                      "begin": 11153,
                      "end": 11168,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11153,
                      "end": 11168,
                      "name": "DIV"
                    },
                    {
                      "begin": 11153,
                      "end": 11168,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11153,
                      "end": 11168,
                      "name": "AND"
                    },
                    {
                      "begin": 11131,
                      "end": 11190,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11131,
                      "end": 11190,
                      "name": "AND"
                    },
                    {
                      "begin": 11131,
                      "end": 11190,
                      "name": "PUSH",
                      "value": "8B477ADB"
                    },
                    {
                      "begin": 11191,
                      "end": 11201,
                      "name": "CALLER"
                    },
                    {
                      "begin": 11203,
                      "end": 11208,
                      "name": "DUP6"
                    },
                    {
                      "begin": 11210,
                      "end": 11213,
                      "name": "DUP6"
                    },
                    {
                      "begin": 11215,
                      "end": 11221,
                      "name": "DUP6"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "DUP6"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "AND"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH",
                      "value": "100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "MUL"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "ADD"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "DUP6"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "AND"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "AND"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "ADD"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "DUP5"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "AND"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "AND"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "ADD"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "DUP4"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "AND"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "AND"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "ADD"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "DUP3"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "ADD"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "SWAP5"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "POP"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "POP"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "POP"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "POP"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "POP"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "DUP4"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "SUB"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "DUP8"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "EXTCODESIZE"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH [tag]",
                      "value": "166"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "REVERT"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "tag",
                      "value": "166"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH",
                      "value": "2C6"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "GAS"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "SUB"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "CALL"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH [tag]",
                      "value": "167"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "REVERT"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "tag",
                      "value": "167"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "POP"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "POP"
                    },
                    {
                      "begin": 11131,
                      "end": 11222,
                      "name": "POP"
                    },
                    {
                      "begin": 11124,
                      "end": 11222,
                      "name": "PUSH [tag]",
                      "value": "163"
                    },
                    {
                      "begin": 11124,
                      "end": 11222,
                      "name": "JUMP"
                    },
                    {
                      "begin": 11094,
                      "end": 11309,
                      "name": "tag",
                      "value": "165"
                    },
                    {
                      "begin": 11094,
                      "end": 11309,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11260,
                      "end": 11298,
                      "name": "PUSH [tag]",
                      "value": "169"
                    },
                    {
                      "begin": 11279,
                      "end": 11284,
                      "name": "DUP4"
                    },
                    {
                      "begin": 11286,
                      "end": 11289,
                      "name": "DUP4"
                    },
                    {
                      "begin": 11291,
                      "end": 11297,
                      "name": "DUP4"
                    },
                    {
                      "begin": 11260,
                      "end": 11278,
                      "name": "PUSH [tag]",
                      "value": "170"
                    },
                    {
                      "begin": 11260,
                      "end": 11298,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 11260,
                      "end": 11298,
                      "name": "tag",
                      "value": "169"
                    },
                    {
                      "begin": 11260,
                      "end": 11298,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7531,
                      "end": 7532,
                      "name": "tag",
                      "value": "163"
                    },
                    {
                      "begin": 7531,
                      "end": 7532,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "POP"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "POP"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "POP"
                    },
                    {
                      "begin": 10960,
                      "end": 11315,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "tag",
                      "value": "61"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "EXP"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "DIV"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "AND"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9835,
                      "end": 9865,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "tag",
                      "value": "64"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "POP"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "POP"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2881,
                      "end": 2921,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "tag",
                      "value": "67"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "PUSH",
                      "value": "9"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9809,
                      "end": 9829,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "tag",
                      "value": "70"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3043,
                      "end": 3069,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "tag",
                      "value": "73"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2008,
                      "end": 2032,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "tag",
                      "value": "76"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "EXP"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DIV"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1507,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "EQ"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH [tag]",
                      "value": "172"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "tag",
                      "value": "172"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "EXP"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "DIV"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 7670,
                      "end": 7676,
                      "name": "AND"
                    },
                    {
                      "begin": 7662,
                      "end": 7677,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7662,
                      "end": 7677,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7662,
                      "end": 7677,
                      "name": "PUSH [tag]",
                      "value": "174"
                    },
                    {
                      "begin": 7662,
                      "end": 7677,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7662,
                      "end": 7677,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7662,
                      "end": 7677,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7662,
                      "end": 7677,
                      "name": "REVERT"
                    },
                    {
                      "begin": 7662,
                      "end": 7677,
                      "name": "tag",
                      "value": "174"
                    },
                    {
                      "begin": 7662,
                      "end": 7677,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7997,
                      "end": 8002,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7988,
                      "end": 7994,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7988,
                      "end": 7994,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "EXP"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "MUL"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "NOT"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "AND"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "DUP4"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "MUL"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "OR"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 7988,
                      "end": 8002,
                      "name": "POP"
                    },
                    {
                      "begin": 8008,
                      "end": 8017,
                      "name": "PUSH",
                      "value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
                    },
                    {
                      "begin": 8008,
                      "end": 8017,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 8008,
                      "end": 8017,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 8008,
                      "end": 8017,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 8008,
                      "end": 8017,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 8008,
                      "end": 8017,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8008,
                      "end": 8017,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8008,
                      "end": 8017,
                      "name": "SUB"
                    },
                    {
                      "begin": 8008,
                      "end": 8017,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8008,
                      "end": 8017,
                      "name": "LOG1"
                    },
                    {
                      "begin": 7935,
                      "end": 8022,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "tag",
                      "value": "79"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8265,
                      "end": 8269,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8288,
                      "end": 8301,
                      "name": "PUSH",
                      "value": "6"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8302,
                      "end": 8308,
                      "name": "DUP4"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "AND"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "AND"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "ADD"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "ADD"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "EXP"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "DIV"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 8288,
                      "end": 8309,
                      "name": "AND"
                    },
                    {
                      "begin": 8281,
                      "end": 8309,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8281,
                      "end": 8309,
                      "name": "POP"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "POP"
                    },
                    {
                      "begin": 8194,
                      "end": 8316,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "tag",
                      "value": "82"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH",
                      "value": "5"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "POP"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "POP"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "POP"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4617,
                      "end": 4678,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "tag",
                      "value": "85"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "EXP"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "DIV"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "AND"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7349,
                      "end": 7375,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "tag",
                      "value": "88"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11454,
                      "end": 11458,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11474,
                      "end": 11484,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 11474,
                      "end": 11484,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 11474,
                      "end": 11484,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11474,
                      "end": 11484,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 11474,
                      "end": 11484,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11474,
                      "end": 11484,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 11474,
                      "end": 11484,
                      "name": "EXP"
                    },
                    {
                      "begin": 11474,
                      "end": 11484,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11474,
                      "end": 11484,
                      "name": "DIV"
                    },
                    {
                      "begin": 11474,
                      "end": 11484,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 11474,
                      "end": 11484,
                      "name": "AND"
                    },
                    {
                      "begin": 11470,
                      "end": 11629,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11470,
                      "end": 11629,
                      "name": "PUSH [tag]",
                      "value": "178"
                    },
                    {
                      "begin": 11470,
                      "end": 11629,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 11529,
                      "end": 11544,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 11529,
                      "end": 11544,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11529,
                      "end": 11544,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11529,
                      "end": 11544,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 11529,
                      "end": 11544,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11529,
                      "end": 11544,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 11529,
                      "end": 11544,
                      "name": "EXP"
                    },
                    {
                      "begin": 11529,
                      "end": 11544,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11529,
                      "end": 11544,
                      "name": "DIV"
                    },
                    {
                      "begin": 11529,
                      "end": 11544,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11529,
                      "end": 11544,
                      "name": "AND"
                    },
                    {
                      "begin": 11507,
                      "end": 11555,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11507,
                      "end": 11555,
                      "name": "AND"
                    },
                    {
                      "begin": 11507,
                      "end": 11555,
                      "name": "PUSH",
                      "value": "70A08231"
                    },
                    {
                      "begin": 11556,
                      "end": 11559,
                      "name": "DUP4"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "ADD"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "DUP3"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "AND"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "PUSH",
                      "value": "100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "MUL"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "ADD"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "DUP3"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "AND"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "AND"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "ADD"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "POP"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "POP"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "DUP4"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "SUB"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "DUP8"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "EXTCODESIZE"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "PUSH [tag]",
                      "value": "179"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "REVERT"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "tag",
                      "value": "179"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "PUSH",
                      "value": "2C6"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "GAS"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "SUB"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "CALL"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "PUSH [tag]",
                      "value": "180"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "REVERT"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "tag",
                      "value": "180"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "POP"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "POP"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "POP"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11507,
                      "end": 11560,
                      "name": "POP"
                    },
                    {
                      "begin": 11500,
                      "end": 11560,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11500,
                      "end": 11560,
                      "name": "POP"
                    },
                    {
                      "begin": 11500,
                      "end": 11560,
                      "name": "PUSH [tag]",
                      "value": "177"
                    },
                    {
                      "begin": 11500,
                      "end": 11560,
                      "name": "JUMP"
                    },
                    {
                      "begin": 11470,
                      "end": 11629,
                      "name": "tag",
                      "value": "178"
                    },
                    {
                      "begin": 11470,
                      "end": 11629,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11598,
                      "end": 11618,
                      "name": "PUSH [tag]",
                      "value": "182"
                    },
                    {
                      "begin": 11614,
                      "end": 11617,
                      "name": "DUP3"
                    },
                    {
                      "begin": 11598,
                      "end": 11613,
                      "name": "PUSH [tag]",
                      "value": "183"
                    },
                    {
                      "begin": 11598,
                      "end": 11618,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 11598,
                      "end": 11618,
                      "name": "tag",
                      "value": "182"
                    },
                    {
                      "begin": 11598,
                      "end": 11618,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11591,
                      "end": 11618,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11591,
                      "end": 11618,
                      "name": "POP"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "tag",
                      "value": "177"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "POP"
                    },
                    {
                      "begin": 11397,
                      "end": 11635,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "tag",
                      "value": "91"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "EXP"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DIV"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1507,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "EQ"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH [tag]",
                      "value": "185"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "tag",
                      "value": "185"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "EXP"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "DIV"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "AND"
                    },
                    {
                      "begin": 7517,
                      "end": 7524,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "PUSH [tag]",
                      "value": "187"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "REVERT"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "tag",
                      "value": "187"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7831,
                      "end": 7835,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 7822,
                      "end": 7828,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7822,
                      "end": 7828,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "EXP"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "MUL"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "NOT"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "AND"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "DUP4"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "MUL"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "OR"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 7822,
                      "end": 7835,
                      "name": "POP"
                    },
                    {
                      "begin": 7841,
                      "end": 7848,
                      "name": "PUSH",
                      "value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
                    },
                    {
                      "begin": 7841,
                      "end": 7848,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 7841,
                      "end": 7848,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 7841,
                      "end": 7848,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 7841,
                      "end": 7848,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 7841,
                      "end": 7848,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7841,
                      "end": 7848,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 7841,
                      "end": 7848,
                      "name": "SUB"
                    },
                    {
                      "begin": 7841,
                      "end": 7848,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7841,
                      "end": 7848,
                      "name": "LOG1"
                    },
                    {
                      "begin": 7768,
                      "end": 7853,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "tag",
                      "value": "94"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8369,
                      "end": 8376,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8395,
                      "end": 8400,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8395,
                      "end": 8400,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8395,
                      "end": 8400,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8395,
                      "end": 8400,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 8395,
                      "end": 8400,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8395,
                      "end": 8400,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 8395,
                      "end": 8400,
                      "name": "EXP"
                    },
                    {
                      "begin": 8395,
                      "end": 8400,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8395,
                      "end": 8400,
                      "name": "DIV"
                    },
                    {
                      "begin": 8395,
                      "end": 8400,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8395,
                      "end": 8400,
                      "name": "AND"
                    },
                    {
                      "begin": 8388,
                      "end": 8400,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8388,
                      "end": 8400,
                      "name": "POP"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8322,
                      "end": 8407,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "tag",
                      "value": "97"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "EXP"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DIV"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "AND"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1153,
                      "end": 1173,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "tag",
                      "value": "100"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "8"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "AND"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "MUL"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SUB"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "AND"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DIV"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "ADD"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DIV"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "MUL"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "ADD"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "ADD"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "ADD"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP3"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "AND"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "MUL"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SUB"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "AND"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DIV"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH [tag]",
                      "value": "190"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "LT"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH [tag]",
                      "value": "191"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP4"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DIV"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "MUL"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP4"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "ADD"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH [tag]",
                      "value": "190"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "JUMP"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "tag",
                      "value": "191"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP3"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "ADD"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "tag",
                      "value": "192"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "ADD"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "ADD"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP4"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "GT"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH [tag]",
                      "value": "192"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP3"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SUB"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "AND"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP3"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "ADD"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "tag",
                      "value": "190"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "POP"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "POP"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "POP"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "POP"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "POP"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9783,
                      "end": 9803,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "tag",
                      "value": "107"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "EXP"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "DIV"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 7518,
                      "end": 7524,
                      "name": "AND"
                    },
                    {
                      "begin": 7517,
                      "end": 7524,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "PUSH [tag]",
                      "value": "194"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "REVERT"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "tag",
                      "value": "194"
                    },
                    {
                      "begin": 7509,
                      "end": 7525,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10643,
                      "end": 10656,
                      "name": "PUSH",
                      "value": "6"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10657,
                      "end": 10667,
                      "name": "CALLER"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "AND"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "AND"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "DUP2"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "ADD"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "DUP2"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "ADD"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "EXP"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "DIV"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 10643,
                      "end": 10668,
                      "name": "AND"
                    },
                    {
                      "begin": 10642,
                      "end": 10668,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 10634,
                      "end": 10669,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 10634,
                      "end": 10669,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 10634,
                      "end": 10669,
                      "name": "PUSH [tag]",
                      "value": "196"
                    },
                    {
                      "begin": 10634,
                      "end": 10669,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 10634,
                      "end": 10669,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10634,
                      "end": 10669,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10634,
                      "end": 10669,
                      "name": "REVERT"
                    },
                    {
                      "begin": 10634,
                      "end": 10669,
                      "name": "tag",
                      "value": "196"
                    },
                    {
                      "begin": 10634,
                      "end": 10669,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10683,
                      "end": 10693,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 10683,
                      "end": 10693,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 10683,
                      "end": 10693,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10683,
                      "end": 10693,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10683,
                      "end": 10693,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10683,
                      "end": 10693,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 10683,
                      "end": 10693,
                      "name": "EXP"
                    },
                    {
                      "begin": 10683,
                      "end": 10693,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10683,
                      "end": 10693,
                      "name": "DIV"
                    },
                    {
                      "begin": 10683,
                      "end": 10693,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 10683,
                      "end": 10693,
                      "name": "AND"
                    },
                    {
                      "begin": 10679,
                      "end": 10872,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 10679,
                      "end": 10872,
                      "name": "PUSH [tag]",
                      "value": "197"
                    },
                    {
                      "begin": 10679,
                      "end": 10872,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 10738,
                      "end": 10753,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 10738,
                      "end": 10753,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10738,
                      "end": 10753,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10738,
                      "end": 10753,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10738,
                      "end": 10753,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10738,
                      "end": 10753,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 10738,
                      "end": 10753,
                      "name": "EXP"
                    },
                    {
                      "begin": 10738,
                      "end": 10753,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10738,
                      "end": 10753,
                      "name": "DIV"
                    },
                    {
                      "begin": 10738,
                      "end": 10753,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 10738,
                      "end": 10753,
                      "name": "AND"
                    },
                    {
                      "begin": 10716,
                      "end": 10771,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 10716,
                      "end": 10771,
                      "name": "AND"
                    },
                    {
                      "begin": 10716,
                      "end": 10771,
                      "name": "PUSH",
                      "value": "6E18980A"
                    },
                    {
                      "begin": 10772,
                      "end": 10782,
                      "name": "CALLER"
                    },
                    {
                      "begin": 10784,
                      "end": 10787,
                      "name": "DUP5"
                    },
                    {
                      "begin": 10789,
                      "end": 10795,
                      "name": "DUP5"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "DUP5"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "AND"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "PUSH",
                      "value": "100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "MUL"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "DUP2"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "ADD"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "DUP5"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "AND"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "AND"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "DUP2"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "ADD"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "DUP4"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "AND"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "AND"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "DUP2"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "ADD"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "DUP3"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "DUP2"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "ADD"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "POP"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "POP"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "POP"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "POP"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "DUP4"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "SUB"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "DUP2"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "DUP8"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "EXTCODESIZE"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "PUSH [tag]",
                      "value": "198"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "REVERT"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "tag",
                      "value": "198"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "PUSH",
                      "value": "2C6"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "GAS"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "SUB"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "CALL"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "PUSH [tag]",
                      "value": "199"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "REVERT"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "tag",
                      "value": "199"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "POP"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "POP"
                    },
                    {
                      "begin": 10716,
                      "end": 10796,
                      "name": "POP"
                    },
                    {
                      "begin": 10709,
                      "end": 10796,
                      "name": "PUSH [tag]",
                      "value": "195"
                    },
                    {
                      "begin": 10709,
                      "end": 10796,
                      "name": "JUMP"
                    },
                    {
                      "begin": 10679,
                      "end": 10872,
                      "name": "tag",
                      "value": "197"
                    },
                    {
                      "begin": 10679,
                      "end": 10872,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10834,
                      "end": 10861,
                      "name": "PUSH [tag]",
                      "value": "201"
                    },
                    {
                      "begin": 10849,
                      "end": 10852,
                      "name": "DUP3"
                    },
                    {
                      "begin": 10854,
                      "end": 10860,
                      "name": "DUP3"
                    },
                    {
                      "begin": 10834,
                      "end": 10848,
                      "name": "PUSH [tag]",
                      "value": "202"
                    },
                    {
                      "begin": 10834,
                      "end": 10861,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 10834,
                      "end": 10861,
                      "name": "tag",
                      "value": "201"
                    },
                    {
                      "begin": 10834,
                      "end": 10861,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7531,
                      "end": 7532,
                      "name": "tag",
                      "value": "195"
                    },
                    {
                      "begin": 7531,
                      "end": 7532,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "POP"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "POP"
                    },
                    {
                      "begin": 10559,
                      "end": 10878,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "tag",
                      "value": "110"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "EXP"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DIV"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1507,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "EQ"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH [tag]",
                      "value": "204"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "tag",
                      "value": "204"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13970,
                      "end": 13972,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 13953,
                      "end": 13967,
                      "name": "DUP3"
                    },
                    {
                      "begin": 13953,
                      "end": 13972,
                      "name": "LT"
                    },
                    {
                      "begin": 13945,
                      "end": 13973,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13945,
                      "end": 13973,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13945,
                      "end": 13973,
                      "name": "PUSH [tag]",
                      "value": "206"
                    },
                    {
                      "begin": 13945,
                      "end": 13973,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 13945,
                      "end": 13973,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13945,
                      "end": 13973,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13945,
                      "end": 13973,
                      "name": "REVERT"
                    },
                    {
                      "begin": 13945,
                      "end": 13973,
                      "name": "tag",
                      "value": "206"
                    },
                    {
                      "begin": 13945,
                      "end": 13973,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 14003,
                      "end": 14005,
                      "name": "PUSH",
                      "value": "32"
                    },
                    {
                      "begin": 13991,
                      "end": 14000,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13991,
                      "end": 14005,
                      "name": "LT"
                    },
                    {
                      "begin": 13983,
                      "end": 14006,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13983,
                      "end": 14006,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13983,
                      "end": 14006,
                      "name": "PUSH [tag]",
                      "value": "207"
                    },
                    {
                      "begin": 13983,
                      "end": 14006,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 13983,
                      "end": 14006,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13983,
                      "end": 14006,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13983,
                      "end": 14006,
                      "name": "REVERT"
                    },
                    {
                      "begin": 13983,
                      "end": 14006,
                      "name": "tag",
                      "value": "207"
                    },
                    {
                      "begin": 13983,
                      "end": 14006,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 14035,
                      "end": 14049,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14017,
                      "end": 14032,
                      "name": "PUSH",
                      "value": "3"
                    },
                    {
                      "begin": 14017,
                      "end": 14049,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14017,
                      "end": 14049,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14017,
                      "end": 14049,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 14017,
                      "end": 14049,
                      "name": "POP"
                    },
                    {
                      "begin": 14072,
                      "end": 14099,
                      "name": "PUSH [tag]",
                      "value": "208"
                    },
                    {
                      "begin": 14090,
                      "end": 14098,
                      "name": "PUSH",
                      "value": "9"
                    },
                    {
                      "begin": 14090,
                      "end": 14098,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 14086,
                      "end": 14088,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 14086,
                      "end": 14098,
                      "name": "EXP"
                    },
                    {
                      "begin": 14072,
                      "end": 14081,
                      "name": "DUP3"
                    },
                    {
                      "begin": 14072,
                      "end": 14085,
                      "name": "PUSH [tag]",
                      "value": "209"
                    },
                    {
                      "begin": 14072,
                      "end": 14085,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14072,
                      "end": 14099,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14072,
                      "end": 14099,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14072,
                      "end": 14099,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 14072,
                      "end": 14099,
                      "name": "AND"
                    },
                    {
                      "begin": 14072,
                      "end": 14099,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 14072,
                      "end": 14099,
                      "name": "tag",
                      "value": "208"
                    },
                    {
                      "begin": 14072,
                      "end": 14099,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 14059,
                      "end": 14069,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 14059,
                      "end": 14099,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14059,
                      "end": 14099,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14059,
                      "end": 14099,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 14059,
                      "end": 14099,
                      "name": "POP"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "PUSH",
                      "value": "B044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E"
                    },
                    {
                      "begin": 14117,
                      "end": 14132,
                      "name": "PUSH",
                      "value": "3"
                    },
                    {
                      "begin": 14117,
                      "end": 14132,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 14134,
                      "end": 14144,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 14134,
                      "end": 14144,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "DUP4"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "ADD"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "DUP3"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "ADD"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "POP"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "POP"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "POP"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "SUB"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14110,
                      "end": 14145,
                      "name": "LOG1"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "POP"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "POP"
                    },
                    {
                      "begin": 13774,
                      "end": 14152,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "tag",
                      "value": "113"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "EXP"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DIV"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1507,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "EQ"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH [tag]",
                      "value": "211"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "tag",
                      "value": "211"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13142,
                      "end": 13154,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 13142,
                      "end": 13154,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 13133,
                      "end": 13139,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13118,
                      "end": 13130,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 13118,
                      "end": 13130,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 13118,
                      "end": 13139,
                      "name": "ADD"
                    },
                    {
                      "begin": 13118,
                      "end": 13154,
                      "name": "GT"
                    },
                    {
                      "begin": 13110,
                      "end": 13155,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13110,
                      "end": 13155,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13110,
                      "end": 13155,
                      "name": "PUSH [tag]",
                      "value": "213"
                    },
                    {
                      "begin": 13110,
                      "end": 13155,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 13110,
                      "end": 13155,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13110,
                      "end": 13155,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13110,
                      "end": 13155,
                      "name": "REVERT"
                    },
                    {
                      "begin": 13110,
                      "end": 13155,
                      "name": "tag",
                      "value": "213"
                    },
                    {
                      "begin": 13110,
                      "end": 13155,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13200,
                      "end": 13208,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 13200,
                      "end": 13215,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13209,
                      "end": 13214,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13209,
                      "end": 13214,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13209,
                      "end": 13214,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13209,
                      "end": 13214,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 13209,
                      "end": 13214,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13209,
                      "end": 13214,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 13209,
                      "end": 13214,
                      "name": "EXP"
                    },
                    {
                      "begin": 13209,
                      "end": 13214,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13209,
                      "end": 13214,
                      "name": "DIV"
                    },
                    {
                      "begin": 13209,
                      "end": 13214,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13209,
                      "end": 13214,
                      "name": "AND"
                    },
                    {
                      "begin": 13200,
                      "end": 13215,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13200,
                      "end": 13215,
                      "name": "AND"
                    },
                    {
                      "begin": 13200,
                      "end": 13215,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13200,
                      "end": 13215,
                      "name": "AND"
                    },
                    {
                      "begin": 13200,
                      "end": 13215,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13200,
                      "end": 13215,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13200,
                      "end": 13215,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13200,
                      "end": 13215,
                      "name": "ADD"
                    },
                    {
                      "begin": 13200,
                      "end": 13215,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13200,
                      "end": 13215,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13200,
                      "end": 13215,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13200,
                      "end": 13215,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13200,
                      "end": 13215,
                      "name": "ADD"
                    },
                    {
                      "begin": 13200,
                      "end": 13215,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13200,
                      "end": 13215,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 13200,
                      "end": 13215,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 13191,
                      "end": 13197,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13173,
                      "end": 13181,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 13173,
                      "end": 13188,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13182,
                      "end": 13187,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13182,
                      "end": 13187,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13182,
                      "end": 13187,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13182,
                      "end": 13187,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 13182,
                      "end": 13187,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13182,
                      "end": 13187,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 13182,
                      "end": 13187,
                      "name": "EXP"
                    },
                    {
                      "begin": 13182,
                      "end": 13187,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13182,
                      "end": 13187,
                      "name": "DIV"
                    },
                    {
                      "begin": 13182,
                      "end": 13187,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13182,
                      "end": 13187,
                      "name": "AND"
                    },
                    {
                      "begin": 13173,
                      "end": 13188,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13173,
                      "end": 13188,
                      "name": "AND"
                    },
                    {
                      "begin": 13173,
                      "end": 13188,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13173,
                      "end": 13188,
                      "name": "AND"
                    },
                    {
                      "begin": 13173,
                      "end": 13188,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13173,
                      "end": 13188,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13173,
                      "end": 13188,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13173,
                      "end": 13188,
                      "name": "ADD"
                    },
                    {
                      "begin": 13173,
                      "end": 13188,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13173,
                      "end": 13188,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13173,
                      "end": 13188,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13173,
                      "end": 13188,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13173,
                      "end": 13188,
                      "name": "ADD"
                    },
                    {
                      "begin": 13173,
                      "end": 13188,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13173,
                      "end": 13188,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 13173,
                      "end": 13188,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 13173,
                      "end": 13197,
                      "name": "ADD"
                    },
                    {
                      "begin": 13173,
                      "end": 13215,
                      "name": "GT"
                    },
                    {
                      "begin": 13165,
                      "end": 13216,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13165,
                      "end": 13216,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13165,
                      "end": 13216,
                      "name": "PUSH [tag]",
                      "value": "214"
                    },
                    {
                      "begin": 13165,
                      "end": 13216,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 13165,
                      "end": 13216,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13165,
                      "end": 13216,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13165,
                      "end": 13216,
                      "name": "REVERT"
                    },
                    {
                      "begin": 13165,
                      "end": 13216,
                      "name": "tag",
                      "value": "214"
                    },
                    {
                      "begin": 13165,
                      "end": 13216,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13246,
                      "end": 13252,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13227,
                      "end": 13235,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 13227,
                      "end": 13242,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13236,
                      "end": 13241,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13236,
                      "end": 13241,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13236,
                      "end": 13241,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13236,
                      "end": 13241,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 13236,
                      "end": 13241,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13236,
                      "end": 13241,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 13236,
                      "end": 13241,
                      "name": "EXP"
                    },
                    {
                      "begin": 13236,
                      "end": 13241,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13236,
                      "end": 13241,
                      "name": "DIV"
                    },
                    {
                      "begin": 13236,
                      "end": 13241,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13236,
                      "end": 13241,
                      "name": "AND"
                    },
                    {
                      "begin": 13227,
                      "end": 13242,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13227,
                      "end": 13242,
                      "name": "AND"
                    },
                    {
                      "begin": 13227,
                      "end": 13242,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13227,
                      "end": 13242,
                      "name": "AND"
                    },
                    {
                      "begin": 13227,
                      "end": 13242,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13227,
                      "end": 13242,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13227,
                      "end": 13242,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13227,
                      "end": 13242,
                      "name": "ADD"
                    },
                    {
                      "begin": 13227,
                      "end": 13242,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13227,
                      "end": 13242,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13227,
                      "end": 13242,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13227,
                      "end": 13242,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13227,
                      "end": 13242,
                      "name": "ADD"
                    },
                    {
                      "begin": 13227,
                      "end": 13242,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13227,
                      "end": 13242,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 13227,
                      "end": 13242,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13227,
                      "end": 13252,
                      "name": "DUP3"
                    },
                    {
                      "begin": 13227,
                      "end": 13252,
                      "name": "DUP3"
                    },
                    {
                      "begin": 13227,
                      "end": 13252,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 13227,
                      "end": 13252,
                      "name": "ADD"
                    },
                    {
                      "begin": 13227,
                      "end": 13252,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 13227,
                      "end": 13252,
                      "name": "POP"
                    },
                    {
                      "begin": 13227,
                      "end": 13252,
                      "name": "POP"
                    },
                    {
                      "begin": 13227,
                      "end": 13252,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13227,
                      "end": 13252,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13227,
                      "end": 13252,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 13227,
                      "end": 13252,
                      "name": "POP"
                    },
                    {
                      "begin": 13278,
                      "end": 13284,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13262,
                      "end": 13274,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 13262,
                      "end": 13274,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13262,
                      "end": 13284,
                      "name": "DUP3"
                    },
                    {
                      "begin": 13262,
                      "end": 13284,
                      "name": "DUP3"
                    },
                    {
                      "begin": 13262,
                      "end": 13284,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 13262,
                      "end": 13284,
                      "name": "ADD"
                    },
                    {
                      "begin": 13262,
                      "end": 13284,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 13262,
                      "end": 13284,
                      "name": "POP"
                    },
                    {
                      "begin": 13262,
                      "end": 13284,
                      "name": "POP"
                    },
                    {
                      "begin": 13262,
                      "end": 13284,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13262,
                      "end": 13284,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13262,
                      "end": 13284,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 13262,
                      "end": 13284,
                      "name": "POP"
                    },
                    {
                      "begin": 13294,
                      "end": 13307,
                      "name": "PUSH",
                      "value": "CB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A"
                    },
                    {
                      "begin": 13300,
                      "end": 13306,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13294,
                      "end": 13307,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 13294,
                      "end": 13307,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 13294,
                      "end": 13307,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13294,
                      "end": 13307,
                      "name": "DUP3"
                    },
                    {
                      "begin": 13294,
                      "end": 13307,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13294,
                      "end": 13307,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13294,
                      "end": 13307,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13294,
                      "end": 13307,
                      "name": "ADD"
                    },
                    {
                      "begin": 13294,
                      "end": 13307,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13294,
                      "end": 13307,
                      "name": "POP"
                    },
                    {
                      "begin": 13294,
                      "end": 13307,
                      "name": "POP"
                    },
                    {
                      "begin": 13294,
                      "end": 13307,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 13294,
                      "end": 13307,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 13294,
                      "end": 13307,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13294,
                      "end": 13307,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13294,
                      "end": 13307,
                      "name": "SUB"
                    },
                    {
                      "begin": 13294,
                      "end": 13307,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13294,
                      "end": 13307,
                      "name": "LOG1"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "POP"
                    },
                    {
                      "begin": 13055,
                      "end": 13314,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "tag",
                      "value": "116"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "EXP"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DIV"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1507,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "EQ"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH [tag]",
                      "value": "216"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "tag",
                      "value": "216"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13618,
                      "end": 13624,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13602,
                      "end": 13614,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 13602,
                      "end": 13614,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 13602,
                      "end": 13624,
                      "name": "LT"
                    },
                    {
                      "begin": 13602,
                      "end": 13624,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13594,
                      "end": 13625,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13594,
                      "end": 13625,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13594,
                      "end": 13625,
                      "name": "PUSH [tag]",
                      "value": "218"
                    },
                    {
                      "begin": 13594,
                      "end": 13625,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 13594,
                      "end": 13625,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13594,
                      "end": 13625,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13594,
                      "end": 13625,
                      "name": "REVERT"
                    },
                    {
                      "begin": 13594,
                      "end": 13625,
                      "name": "tag",
                      "value": "218"
                    },
                    {
                      "begin": 13594,
                      "end": 13625,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13662,
                      "end": 13668,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13643,
                      "end": 13651,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 13643,
                      "end": 13658,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13652,
                      "end": 13657,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13652,
                      "end": 13657,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13652,
                      "end": 13657,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13652,
                      "end": 13657,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 13652,
                      "end": 13657,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13652,
                      "end": 13657,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 13652,
                      "end": 13657,
                      "name": "EXP"
                    },
                    {
                      "begin": 13652,
                      "end": 13657,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13652,
                      "end": 13657,
                      "name": "DIV"
                    },
                    {
                      "begin": 13652,
                      "end": 13657,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13652,
                      "end": 13657,
                      "name": "AND"
                    },
                    {
                      "begin": 13643,
                      "end": 13658,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13643,
                      "end": 13658,
                      "name": "AND"
                    },
                    {
                      "begin": 13643,
                      "end": 13658,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13643,
                      "end": 13658,
                      "name": "AND"
                    },
                    {
                      "begin": 13643,
                      "end": 13658,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13643,
                      "end": 13658,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13643,
                      "end": 13658,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13643,
                      "end": 13658,
                      "name": "ADD"
                    },
                    {
                      "begin": 13643,
                      "end": 13658,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13643,
                      "end": 13658,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13643,
                      "end": 13658,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13643,
                      "end": 13658,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13643,
                      "end": 13658,
                      "name": "ADD"
                    },
                    {
                      "begin": 13643,
                      "end": 13658,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13643,
                      "end": 13658,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 13643,
                      "end": 13658,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 13643,
                      "end": 13668,
                      "name": "LT"
                    },
                    {
                      "begin": 13643,
                      "end": 13668,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13635,
                      "end": 13669,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13635,
                      "end": 13669,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13635,
                      "end": 13669,
                      "name": "PUSH [tag]",
                      "value": "219"
                    },
                    {
                      "begin": 13635,
                      "end": 13669,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 13635,
                      "end": 13669,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13635,
                      "end": 13669,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13635,
                      "end": 13669,
                      "name": "REVERT"
                    },
                    {
                      "begin": 13635,
                      "end": 13669,
                      "name": "tag",
                      "value": "219"
                    },
                    {
                      "begin": 13635,
                      "end": 13669,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13696,
                      "end": 13702,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13680,
                      "end": 13692,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 13680,
                      "end": 13692,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13680,
                      "end": 13702,
                      "name": "DUP3"
                    },
                    {
                      "begin": 13680,
                      "end": 13702,
                      "name": "DUP3"
                    },
                    {
                      "begin": 13680,
                      "end": 13702,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 13680,
                      "end": 13702,
                      "name": "SUB"
                    },
                    {
                      "begin": 13680,
                      "end": 13702,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 13680,
                      "end": 13702,
                      "name": "POP"
                    },
                    {
                      "begin": 13680,
                      "end": 13702,
                      "name": "POP"
                    },
                    {
                      "begin": 13680,
                      "end": 13702,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13680,
                      "end": 13702,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13680,
                      "end": 13702,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 13680,
                      "end": 13702,
                      "name": "POP"
                    },
                    {
                      "begin": 13731,
                      "end": 13737,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13712,
                      "end": 13720,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 13712,
                      "end": 13727,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13721,
                      "end": 13726,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13721,
                      "end": 13726,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13721,
                      "end": 13726,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13721,
                      "end": 13726,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 13721,
                      "end": 13726,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13721,
                      "end": 13726,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 13721,
                      "end": 13726,
                      "name": "EXP"
                    },
                    {
                      "begin": 13721,
                      "end": 13726,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13721,
                      "end": 13726,
                      "name": "DIV"
                    },
                    {
                      "begin": 13721,
                      "end": 13726,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13721,
                      "end": 13726,
                      "name": "AND"
                    },
                    {
                      "begin": 13712,
                      "end": 13727,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13712,
                      "end": 13727,
                      "name": "AND"
                    },
                    {
                      "begin": 13712,
                      "end": 13727,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13712,
                      "end": 13727,
                      "name": "AND"
                    },
                    {
                      "begin": 13712,
                      "end": 13727,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13712,
                      "end": 13727,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13712,
                      "end": 13727,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13712,
                      "end": 13727,
                      "name": "ADD"
                    },
                    {
                      "begin": 13712,
                      "end": 13727,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13712,
                      "end": 13727,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13712,
                      "end": 13727,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13712,
                      "end": 13727,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13712,
                      "end": 13727,
                      "name": "ADD"
                    },
                    {
                      "begin": 13712,
                      "end": 13727,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13712,
                      "end": 13727,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 13712,
                      "end": 13727,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13712,
                      "end": 13737,
                      "name": "DUP3"
                    },
                    {
                      "begin": 13712,
                      "end": 13737,
                      "name": "DUP3"
                    },
                    {
                      "begin": 13712,
                      "end": 13737,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 13712,
                      "end": 13737,
                      "name": "SUB"
                    },
                    {
                      "begin": 13712,
                      "end": 13737,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 13712,
                      "end": 13737,
                      "name": "POP"
                    },
                    {
                      "begin": 13712,
                      "end": 13737,
                      "name": "POP"
                    },
                    {
                      "begin": 13712,
                      "end": 13737,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13712,
                      "end": 13737,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13712,
                      "end": 13737,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 13712,
                      "end": 13737,
                      "name": "POP"
                    },
                    {
                      "begin": 13747,
                      "end": 13761,
                      "name": "PUSH",
                      "value": "702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44"
                    },
                    {
                      "begin": 13754,
                      "end": 13760,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13747,
                      "end": 13761,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 13747,
                      "end": 13761,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 13747,
                      "end": 13761,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13747,
                      "end": 13761,
                      "name": "DUP3"
                    },
                    {
                      "begin": 13747,
                      "end": 13761,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13747,
                      "end": 13761,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13747,
                      "end": 13761,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13747,
                      "end": 13761,
                      "name": "ADD"
                    },
                    {
                      "begin": 13747,
                      "end": 13761,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13747,
                      "end": 13761,
                      "name": "POP"
                    },
                    {
                      "begin": 13747,
                      "end": 13761,
                      "name": "POP"
                    },
                    {
                      "begin": 13747,
                      "end": 13761,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 13747,
                      "end": 13761,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 13747,
                      "end": 13761,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13747,
                      "end": 13761,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13747,
                      "end": 13761,
                      "name": "SUB"
                    },
                    {
                      "begin": 13747,
                      "end": 13761,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13747,
                      "end": 13761,
                      "name": "LOG1"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "POP"
                    },
                    {
                      "begin": 13538,
                      "end": 13768,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "tag",
                      "value": "119"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12173,
                      "end": 12187,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12203,
                      "end": 12213,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 12203,
                      "end": 12213,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 12203,
                      "end": 12213,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12203,
                      "end": 12213,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 12203,
                      "end": 12213,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12203,
                      "end": 12213,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 12203,
                      "end": 12213,
                      "name": "EXP"
                    },
                    {
                      "begin": 12203,
                      "end": 12213,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12203,
                      "end": 12213,
                      "name": "DIV"
                    },
                    {
                      "begin": 12203,
                      "end": 12213,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 12203,
                      "end": 12213,
                      "name": "AND"
                    },
                    {
                      "begin": 12199,
                      "end": 12376,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12199,
                      "end": 12376,
                      "name": "PUSH [tag]",
                      "value": "221"
                    },
                    {
                      "begin": 12199,
                      "end": 12376,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 12250,
                      "end": 12265,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 12250,
                      "end": 12265,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12250,
                      "end": 12265,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12250,
                      "end": 12265,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 12250,
                      "end": 12265,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12250,
                      "end": 12265,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 12250,
                      "end": 12265,
                      "name": "EXP"
                    },
                    {
                      "begin": 12250,
                      "end": 12265,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12250,
                      "end": 12265,
                      "name": "DIV"
                    },
                    {
                      "begin": 12250,
                      "end": 12265,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12250,
                      "end": 12265,
                      "name": "AND"
                    },
                    {
                      "begin": 12236,
                      "end": 12276,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12236,
                      "end": 12276,
                      "name": "AND"
                    },
                    {
                      "begin": 12236,
                      "end": 12276,
                      "name": "PUSH",
                      "value": "DD62ED3E"
                    },
                    {
                      "begin": 12277,
                      "end": 12283,
                      "name": "DUP5"
                    },
                    {
                      "begin": 12285,
                      "end": 12293,
                      "name": "DUP5"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "ADD"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "DUP4"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "AND"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH",
                      "value": "100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "MUL"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "ADD"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "DUP4"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "AND"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "AND"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "ADD"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "DUP3"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "AND"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "AND"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "ADD"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "POP"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "POP"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "POP"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "DUP4"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "SUB"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "DUP8"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "EXTCODESIZE"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH [tag]",
                      "value": "222"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "REVERT"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "tag",
                      "value": "222"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH",
                      "value": "2C6"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "GAS"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "SUB"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "CALL"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH [tag]",
                      "value": "223"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "REVERT"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "tag",
                      "value": "223"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "POP"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "POP"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "POP"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12236,
                      "end": 12294,
                      "name": "POP"
                    },
                    {
                      "begin": 12229,
                      "end": 12294,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12229,
                      "end": 12294,
                      "name": "POP"
                    },
                    {
                      "begin": 12229,
                      "end": 12294,
                      "name": "PUSH [tag]",
                      "value": "220"
                    },
                    {
                      "begin": 12229,
                      "end": 12294,
                      "name": "JUMP"
                    },
                    {
                      "begin": 12199,
                      "end": 12376,
                      "name": "tag",
                      "value": "221"
                    },
                    {
                      "begin": 12199,
                      "end": 12376,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12332,
                      "end": 12365,
                      "name": "PUSH [tag]",
                      "value": "225"
                    },
                    {
                      "begin": 12348,
                      "end": 12354,
                      "name": "DUP4"
                    },
                    {
                      "begin": 12356,
                      "end": 12364,
                      "name": "DUP4"
                    },
                    {
                      "begin": 12332,
                      "end": 12347,
                      "name": "PUSH [tag]",
                      "value": "226"
                    },
                    {
                      "begin": 12332,
                      "end": 12365,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 12332,
                      "end": 12365,
                      "name": "tag",
                      "value": "225"
                    },
                    {
                      "begin": 12332,
                      "end": 12365,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12325,
                      "end": 12365,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12325,
                      "end": 12365,
                      "name": "POP"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "tag",
                      "value": "220"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "POP"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "POP"
                    },
                    {
                      "begin": 12095,
                      "end": 12382,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "tag",
                      "value": "122"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "PUSH",
                      "value": "3"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3006,
                      "end": 3037,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "tag",
                      "value": "125"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "PUSH",
                      "value": "6"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "POP"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "EXP"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "DIV"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "AND"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8413,
                      "end": 8459,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "tag",
                      "value": "128"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "EXP"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DIV"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1507,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "EQ"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH [tag]",
                      "value": "228"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "tag",
                      "value": "228"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8723,
                      "end": 8728,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8693,
                      "end": 8706,
                      "name": "PUSH",
                      "value": "6"
                    },
                    {
                      "begin": 8693,
                      "end": 8720,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8707,
                      "end": 8719,
                      "name": "DUP4"
                    },
                    {
                      "begin": 8693,
                      "end": 8720,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8693,
                      "end": 8720,
                      "name": "AND"
                    },
                    {
                      "begin": 8693,
                      "end": 8720,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8693,
                      "end": 8720,
                      "name": "AND"
                    },
                    {
                      "begin": 8693,
                      "end": 8720,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8693,
                      "end": 8720,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 8693,
                      "end": 8720,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8693,
                      "end": 8720,
                      "name": "ADD"
                    },
                    {
                      "begin": 8693,
                      "end": 8720,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8693,
                      "end": 8720,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8693,
                      "end": 8720,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 8693,
                      "end": 8720,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8693,
                      "end": 8720,
                      "name": "ADD"
                    },
                    {
                      "begin": 8693,
                      "end": 8720,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8693,
                      "end": 8720,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 8693,
                      "end": 8720,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8693,
                      "end": 8728,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 8693,
                      "end": 8728,
                      "name": "EXP"
                    },
                    {
                      "begin": 8693,
                      "end": 8728,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8693,
                      "end": 8728,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 8693,
                      "end": 8728,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8693,
                      "end": 8728,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 8693,
                      "end": 8728,
                      "name": "MUL"
                    },
                    {
                      "begin": 8693,
                      "end": 8728,
                      "name": "NOT"
                    },
                    {
                      "begin": 8693,
                      "end": 8728,
                      "name": "AND"
                    },
                    {
                      "begin": 8693,
                      "end": 8728,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8693,
                      "end": 8728,
                      "name": "DUP4"
                    },
                    {
                      "begin": 8693,
                      "end": 8728,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8693,
                      "end": 8728,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8693,
                      "end": 8728,
                      "name": "MUL"
                    },
                    {
                      "begin": 8693,
                      "end": 8728,
                      "name": "OR"
                    },
                    {
                      "begin": 8693,
                      "end": 8728,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8693,
                      "end": 8728,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 8693,
                      "end": 8728,
                      "name": "POP"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "PUSH",
                      "value": "D7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C"
                    },
                    {
                      "begin": 8755,
                      "end": 8767,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "DUP3"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "AND"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "AND"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "ADD"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "POP"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "POP"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "SUB"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8738,
                      "end": 8768,
                      "name": "LOG1"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "POP"
                    },
                    {
                      "begin": 8618,
                      "end": 8775,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "tag",
                      "value": "131"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4717,
                      "end": 4727,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4685,
                      "end": 4727,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "tag",
                      "value": "134"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "EXP"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DIV"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1507,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "EQ"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH [tag]",
                      "value": "231"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "tag",
                      "value": "231"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1799,
                      "end": 1800,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1779,
                      "end": 1801,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1779,
                      "end": 1801,
                      "name": "AND"
                    },
                    {
                      "begin": 1779,
                      "end": 1787,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1779,
                      "end": 1801,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1779,
                      "end": 1801,
                      "name": "AND"
                    },
                    {
                      "begin": 1779,
                      "end": 1801,
                      "name": "EQ"
                    },
                    {
                      "begin": 1779,
                      "end": 1801,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1775,
                      "end": 1844,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1775,
                      "end": 1844,
                      "name": "PUSH [tag]",
                      "value": "233"
                    },
                    {
                      "begin": 1775,
                      "end": 1844,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1825,
                      "end": 1833,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1817,
                      "end": 1822,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1817,
                      "end": 1822,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "EXP"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "MUL"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "NOT"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "AND"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "DUP4"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "AND"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "MUL"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "OR"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 1817,
                      "end": 1833,
                      "name": "POP"
                    },
                    {
                      "begin": 1775,
                      "end": 1844,
                      "name": "tag",
                      "value": "233"
                    },
                    {
                      "begin": 1775,
                      "end": 1844,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "POP"
                    },
                    {
                      "begin": 1703,
                      "end": 1850,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "tag",
                      "value": "137"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8912,
                      "end": 8927,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "EXP"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "DIV"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1511,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1507,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "AND"
                    },
                    {
                      "begin": 1497,
                      "end": 1516,
                      "name": "EQ"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH [tag]",
                      "value": "235"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "tag",
                      "value": "235"
                    },
                    {
                      "begin": 1489,
                      "end": 1517,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8870,
                      "end": 8883,
                      "name": "PUSH",
                      "value": "6"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8884,
                      "end": 8900,
                      "name": "DUP4"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "AND"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "AND"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "ADD"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "ADD"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "EXP"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "DIV"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 8870,
                      "end": 8901,
                      "name": "AND"
                    },
                    {
                      "begin": 8862,
                      "end": 8902,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8862,
                      "end": 8902,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8862,
                      "end": 8902,
                      "name": "PUSH [tag]",
                      "value": "237"
                    },
                    {
                      "begin": 8862,
                      "end": 8902,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 8862,
                      "end": 8902,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8862,
                      "end": 8902,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8862,
                      "end": 8902,
                      "name": "REVERT"
                    },
                    {
                      "begin": 8862,
                      "end": 8902,
                      "name": "tag",
                      "value": "237"
                    },
                    {
                      "begin": 8862,
                      "end": 8902,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8930,
                      "end": 8957,
                      "name": "PUSH [tag]",
                      "value": "238"
                    },
                    {
                      "begin": 8940,
                      "end": 8956,
                      "name": "DUP3"
                    },
                    {
                      "begin": 8930,
                      "end": 8939,
                      "name": "PUSH [tag]",
                      "value": "88"
                    },
                    {
                      "begin": 8930,
                      "end": 8957,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 8930,
                      "end": 8957,
                      "name": "tag",
                      "value": "238"
                    },
                    {
                      "begin": 8930,
                      "end": 8957,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8912,
                      "end": 8957,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8912,
                      "end": 8957,
                      "name": "POP"
                    },
                    {
                      "begin": 8996,
                      "end": 8997,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8967,
                      "end": 8975,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 8967,
                      "end": 8993,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8976,
                      "end": 8992,
                      "name": "DUP5"
                    },
                    {
                      "begin": 8967,
                      "end": 8993,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8967,
                      "end": 8993,
                      "name": "AND"
                    },
                    {
                      "begin": 8967,
                      "end": 8993,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8967,
                      "end": 8993,
                      "name": "AND"
                    },
                    {
                      "begin": 8967,
                      "end": 8993,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8967,
                      "end": 8993,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 8967,
                      "end": 8993,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8967,
                      "end": 8993,
                      "name": "ADD"
                    },
                    {
                      "begin": 8967,
                      "end": 8993,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8967,
                      "end": 8993,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8967,
                      "end": 8993,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 8967,
                      "end": 8993,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 8967,
                      "end": 8993,
                      "name": "ADD"
                    },
                    {
                      "begin": 8967,
                      "end": 8993,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8967,
                      "end": 8993,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 8967,
                      "end": 8997,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8967,
                      "end": 8997,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8967,
                      "end": 8997,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 8967,
                      "end": 8997,
                      "name": "POP"
                    },
                    {
                      "begin": 9023,
                      "end": 9033,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9007,
                      "end": 9019,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 9007,
                      "end": 9019,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 9007,
                      "end": 9033,
                      "name": "DUP3"
                    },
                    {
                      "begin": 9007,
                      "end": 9033,
                      "name": "DUP3"
                    },
                    {
                      "begin": 9007,
                      "end": 9033,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 9007,
                      "end": 9033,
                      "name": "SUB"
                    },
                    {
                      "begin": 9007,
                      "end": 9033,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 9007,
                      "end": 9033,
                      "name": "POP"
                    },
                    {
                      "begin": 9007,
                      "end": 9033,
                      "name": "POP"
                    },
                    {
                      "begin": 9007,
                      "end": 9033,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9007,
                      "end": 9033,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9007,
                      "end": 9033,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 9007,
                      "end": 9033,
                      "name": "POP"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "PUSH",
                      "value": "61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6"
                    },
                    {
                      "begin": 9063,
                      "end": 9079,
                      "name": "DUP3"
                    },
                    {
                      "begin": 9081,
                      "end": 9091,
                      "name": "DUP3"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "DUP4"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "AND"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "AND"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "ADD"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "DUP3"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "ADD"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "POP"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "POP"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "POP"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "SUB"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9043,
                      "end": 9092,
                      "name": "LOG1"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "POP"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "POP"
                    },
                    {
                      "begin": 8781,
                      "end": 9099,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 6129,
                      "end": 6692,
                      "name": "tag",
                      "value": "152"
                    },
                    {
                      "begin": 6129,
                      "end": 6692,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 6200,
                      "end": 6206,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3223,
                      "end": 3224,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 3216,
                      "end": 3220,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3216,
                      "end": 3224,
                      "name": "ADD"
                    },
                    {
                      "begin": 3198,
                      "end": 3206,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3198,
                      "end": 3206,
                      "name": "CALLDATASIZE"
                    },
                    {
                      "begin": 3198,
                      "end": 3213,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3198,
                      "end": 3213,
                      "name": "POP"
                    },
                    {
                      "begin": 3198,
                      "end": 3224,
                      "name": "LT"
                    },
                    {
                      "begin": 3196,
                      "end": 3225,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "PUSH [tag]",
                      "value": "240"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "tag",
                      "value": "240"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 6544,
                      "end": 6545,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6534,
                      "end": 6540,
                      "name": "DUP3"
                    },
                    {
                      "begin": 6534,
                      "end": 6545,
                      "name": "EQ"
                    },
                    {
                      "begin": 6534,
                      "end": 6545,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 6533,
                      "end": 6586,
                      "name": "DUP1"
                    },
                    {
                      "begin": 6533,
                      "end": 6586,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 6533,
                      "end": 6586,
                      "name": "PUSH [tag]",
                      "value": "242"
                    },
                    {
                      "begin": 6533,
                      "end": 6586,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 6533,
                      "end": 6586,
                      "name": "POP"
                    },
                    {
                      "begin": 6584,
                      "end": 6585,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6551,
                      "end": 6558,
                      "name": "PUSH",
                      "value": "5"
                    },
                    {
                      "begin": 6551,
                      "end": 6570,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6559,
                      "end": 6569,
                      "name": "CALLER"
                    },
                    {
                      "begin": 6551,
                      "end": 6570,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 6551,
                      "end": 6570,
                      "name": "AND"
                    },
                    {
                      "begin": 6551,
                      "end": 6570,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 6551,
                      "end": 6570,
                      "name": "AND"
                    },
                    {
                      "begin": 6551,
                      "end": 6570,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6551,
                      "end": 6570,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6551,
                      "end": 6570,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6551,
                      "end": 6570,
                      "name": "ADD"
                    },
                    {
                      "begin": 6551,
                      "end": 6570,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6551,
                      "end": 6570,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6551,
                      "end": 6570,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6551,
                      "end": 6570,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6551,
                      "end": 6570,
                      "name": "ADD"
                    },
                    {
                      "begin": 6551,
                      "end": 6570,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6551,
                      "end": 6570,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 6551,
                      "end": 6580,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6571,
                      "end": 6579,
                      "name": "DUP6"
                    },
                    {
                      "begin": 6551,
                      "end": 6580,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 6551,
                      "end": 6580,
                      "name": "AND"
                    },
                    {
                      "begin": 6551,
                      "end": 6580,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 6551,
                      "end": 6580,
                      "name": "AND"
                    },
                    {
                      "begin": 6551,
                      "end": 6580,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6551,
                      "end": 6580,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6551,
                      "end": 6580,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6551,
                      "end": 6580,
                      "name": "ADD"
                    },
                    {
                      "begin": 6551,
                      "end": 6580,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6551,
                      "end": 6580,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6551,
                      "end": 6580,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6551,
                      "end": 6580,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6551,
                      "end": 6580,
                      "name": "ADD"
                    },
                    {
                      "begin": 6551,
                      "end": 6580,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6551,
                      "end": 6580,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 6551,
                      "end": 6580,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 6551,
                      "end": 6585,
                      "name": "EQ"
                    },
                    {
                      "begin": 6551,
                      "end": 6585,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 6533,
                      "end": 6586,
                      "name": "tag",
                      "value": "242"
                    },
                    {
                      "begin": 6533,
                      "end": 6586,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 6531,
                      "end": 6587,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 6523,
                      "end": 6588,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 6523,
                      "end": 6588,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 6523,
                      "end": 6588,
                      "name": "PUSH [tag]",
                      "value": "243"
                    },
                    {
                      "begin": 6523,
                      "end": 6588,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 6523,
                      "end": 6588,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6523,
                      "end": 6588,
                      "name": "DUP1"
                    },
                    {
                      "begin": 6523,
                      "end": 6588,
                      "name": "REVERT"
                    },
                    {
                      "begin": 6523,
                      "end": 6588,
                      "name": "tag",
                      "value": "243"
                    },
                    {
                      "begin": 6523,
                      "end": 6588,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 6631,
                      "end": 6637,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6599,
                      "end": 6606,
                      "name": "PUSH",
                      "value": "5"
                    },
                    {
                      "begin": 6599,
                      "end": 6618,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6607,
                      "end": 6617,
                      "name": "CALLER"
                    },
                    {
                      "begin": 6599,
                      "end": 6618,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 6599,
                      "end": 6618,
                      "name": "AND"
                    },
                    {
                      "begin": 6599,
                      "end": 6618,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 6599,
                      "end": 6618,
                      "name": "AND"
                    },
                    {
                      "begin": 6599,
                      "end": 6618,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6599,
                      "end": 6618,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6599,
                      "end": 6618,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6599,
                      "end": 6618,
                      "name": "ADD"
                    },
                    {
                      "begin": 6599,
                      "end": 6618,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6599,
                      "end": 6618,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6599,
                      "end": 6618,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6599,
                      "end": 6618,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6599,
                      "end": 6618,
                      "name": "ADD"
                    },
                    {
                      "begin": 6599,
                      "end": 6618,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6599,
                      "end": 6618,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 6599,
                      "end": 6628,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6619,
                      "end": 6627,
                      "name": "DUP6"
                    },
                    {
                      "begin": 6599,
                      "end": 6628,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 6599,
                      "end": 6628,
                      "name": "AND"
                    },
                    {
                      "begin": 6599,
                      "end": 6628,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 6599,
                      "end": 6628,
                      "name": "AND"
                    },
                    {
                      "begin": 6599,
                      "end": 6628,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6599,
                      "end": 6628,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6599,
                      "end": 6628,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6599,
                      "end": 6628,
                      "name": "ADD"
                    },
                    {
                      "begin": 6599,
                      "end": 6628,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6599,
                      "end": 6628,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6599,
                      "end": 6628,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6599,
                      "end": 6628,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6599,
                      "end": 6628,
                      "name": "ADD"
                    },
                    {
                      "begin": 6599,
                      "end": 6628,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6599,
                      "end": 6628,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 6599,
                      "end": 6637,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6599,
                      "end": 6637,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6599,
                      "end": 6637,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 6599,
                      "end": 6637,
                      "name": "POP"
                    },
                    {
                      "begin": 6668,
                      "end": 6676,
                      "name": "DUP3"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "AND"
                    },
                    {
                      "begin": 6656,
                      "end": 6666,
                      "name": "CALLER"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "AND"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "PUSH",
                      "value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
                    },
                    {
                      "begin": 6678,
                      "end": 6684,
                      "name": "DUP5"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "DUP1"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "DUP3"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "ADD"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "POP"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "POP"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "DUP1"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "SUB"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6647,
                      "end": 6685,
                      "name": "LOG3"
                    },
                    {
                      "begin": 6129,
                      "end": 6692,
                      "name": "POP"
                    },
                    {
                      "begin": 6129,
                      "end": 6692,
                      "name": "POP"
                    },
                    {
                      "begin": 6129,
                      "end": 6692,
                      "name": "POP"
                    },
                    {
                      "begin": 6129,
                      "end": 6692,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 5009,
                      "end": 5889,
                      "name": "tag",
                      "value": "170"
                    },
                    {
                      "begin": 5009,
                      "end": 5889,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 5113,
                      "end": 5127,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5322,
                      "end": 5330,
                      "name": "DUP1"
                    },
                    {
                      "begin": 5567,
                      "end": 5582,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5095,
                      "end": 5101,
                      "name": "PUSH",
                      "value": "60"
                    },
                    {
                      "begin": 3223,
                      "end": 3224,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 3216,
                      "end": 3220,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3216,
                      "end": 3224,
                      "name": "ADD"
                    },
                    {
                      "begin": 3198,
                      "end": 3206,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3198,
                      "end": 3206,
                      "name": "CALLDATASIZE"
                    },
                    {
                      "begin": 3198,
                      "end": 3213,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3198,
                      "end": 3213,
                      "name": "POP"
                    },
                    {
                      "begin": 3198,
                      "end": 3224,
                      "name": "LT"
                    },
                    {
                      "begin": 3196,
                      "end": 3225,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "PUSH [tag]",
                      "value": "245"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "tag",
                      "value": "245"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 5130,
                      "end": 5137,
                      "name": "PUSH",
                      "value": "5"
                    },
                    {
                      "begin": 5130,
                      "end": 5144,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5138,
                      "end": 5143,
                      "name": "DUP9"
                    },
                    {
                      "begin": 5130,
                      "end": 5144,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5130,
                      "end": 5144,
                      "name": "AND"
                    },
                    {
                      "begin": 5130,
                      "end": 5144,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5130,
                      "end": 5144,
                      "name": "AND"
                    },
                    {
                      "begin": 5130,
                      "end": 5144,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5130,
                      "end": 5144,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5130,
                      "end": 5144,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5130,
                      "end": 5144,
                      "name": "ADD"
                    },
                    {
                      "begin": 5130,
                      "end": 5144,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5130,
                      "end": 5144,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5130,
                      "end": 5144,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5130,
                      "end": 5144,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5130,
                      "end": 5144,
                      "name": "ADD"
                    },
                    {
                      "begin": 5130,
                      "end": 5144,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5130,
                      "end": 5144,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 5130,
                      "end": 5156,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5145,
                      "end": 5155,
                      "name": "CALLER"
                    },
                    {
                      "begin": 5130,
                      "end": 5156,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5130,
                      "end": 5156,
                      "name": "AND"
                    },
                    {
                      "begin": 5130,
                      "end": 5156,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5130,
                      "end": 5156,
                      "name": "AND"
                    },
                    {
                      "begin": 5130,
                      "end": 5156,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5130,
                      "end": 5156,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5130,
                      "end": 5156,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5130,
                      "end": 5156,
                      "name": "ADD"
                    },
                    {
                      "begin": 5130,
                      "end": 5156,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5130,
                      "end": 5156,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5130,
                      "end": 5156,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5130,
                      "end": 5156,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5130,
                      "end": 5156,
                      "name": "ADD"
                    },
                    {
                      "begin": 5130,
                      "end": 5156,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5130,
                      "end": 5156,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 5130,
                      "end": 5156,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 5113,
                      "end": 5156,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 5113,
                      "end": 5156,
                      "name": "POP"
                    },
                    {
                      "begin": 5333,
                      "end": 5373,
                      "name": "PUSH [tag]",
                      "value": "247"
                    },
                    {
                      "begin": 5367,
                      "end": 5372,
                      "name": "PUSH",
                      "value": "2710"
                    },
                    {
                      "begin": 5334,
                      "end": 5361,
                      "name": "PUSH [tag]",
                      "value": "248"
                    },
                    {
                      "begin": 5345,
                      "end": 5360,
                      "name": "PUSH",
                      "value": "3"
                    },
                    {
                      "begin": 5345,
                      "end": 5360,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 5334,
                      "end": 5340,
                      "name": "DUP9"
                    },
                    {
                      "begin": 5334,
                      "end": 5344,
                      "name": "PUSH [tag]",
                      "value": "209"
                    },
                    {
                      "begin": 5334,
                      "end": 5344,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5334,
                      "end": 5361,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 5334,
                      "end": 5361,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5334,
                      "end": 5361,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 5334,
                      "end": 5361,
                      "name": "AND"
                    },
                    {
                      "begin": 5334,
                      "end": 5361,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 5334,
                      "end": 5361,
                      "name": "tag",
                      "value": "248"
                    },
                    {
                      "begin": 5334,
                      "end": 5361,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 5333,
                      "end": 5366,
                      "name": "PUSH [tag]",
                      "value": "249"
                    },
                    {
                      "begin": 5333,
                      "end": 5366,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5333,
                      "end": 5373,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 5333,
                      "end": 5373,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5333,
                      "end": 5373,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 5333,
                      "end": 5373,
                      "name": "AND"
                    },
                    {
                      "begin": 5333,
                      "end": 5373,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 5333,
                      "end": 5373,
                      "name": "tag",
                      "value": "247"
                    },
                    {
                      "begin": 5333,
                      "end": 5373,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 5322,
                      "end": 5373,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 5322,
                      "end": 5373,
                      "name": "POP"
                    },
                    {
                      "begin": 5393,
                      "end": 5403,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 5393,
                      "end": 5403,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 5387,
                      "end": 5390,
                      "name": "DUP4"
                    },
                    {
                      "begin": 5387,
                      "end": 5403,
                      "name": "GT"
                    },
                    {
                      "begin": 5383,
                      "end": 5446,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 5383,
                      "end": 5446,
                      "name": "PUSH [tag]",
                      "value": "250"
                    },
                    {
                      "begin": 5383,
                      "end": 5446,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 5425,
                      "end": 5435,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 5425,
                      "end": 5435,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 5419,
                      "end": 5435,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 5419,
                      "end": 5435,
                      "name": "POP"
                    },
                    {
                      "begin": 5383,
                      "end": 5446,
                      "name": "tag",
                      "value": "250"
                    },
                    {
                      "begin": 5383,
                      "end": 5446,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4717,
                      "end": 4727,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5459,
                      "end": 5469,
                      "name": "DUP5"
                    },
                    {
                      "begin": 5459,
                      "end": 5480,
                      "name": "LT"
                    },
                    {
                      "begin": 5455,
                      "end": 5558,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 5455,
                      "end": 5558,
                      "name": "PUSH [tag]",
                      "value": "251"
                    },
                    {
                      "begin": 5455,
                      "end": 5558,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 5525,
                      "end": 5547,
                      "name": "PUSH [tag]",
                      "value": "252"
                    },
                    {
                      "begin": 5540,
                      "end": 5546,
                      "name": "DUP6"
                    },
                    {
                      "begin": 5525,
                      "end": 5535,
                      "name": "DUP6"
                    },
                    {
                      "begin": 5525,
                      "end": 5539,
                      "name": "PUSH [tag]",
                      "value": "253"
                    },
                    {
                      "begin": 5525,
                      "end": 5539,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5525,
                      "end": 5547,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 5525,
                      "end": 5547,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5525,
                      "end": 5547,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 5525,
                      "end": 5547,
                      "name": "AND"
                    },
                    {
                      "begin": 5525,
                      "end": 5547,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 5525,
                      "end": 5547,
                      "name": "tag",
                      "value": "252"
                    },
                    {
                      "begin": 5525,
                      "end": 5547,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 5496,
                      "end": 5503,
                      "name": "PUSH",
                      "value": "5"
                    },
                    {
                      "begin": 5496,
                      "end": 5510,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5504,
                      "end": 5509,
                      "name": "DUP10"
                    },
                    {
                      "begin": 5496,
                      "end": 5510,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5496,
                      "end": 5510,
                      "name": "AND"
                    },
                    {
                      "begin": 5496,
                      "end": 5510,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5496,
                      "end": 5510,
                      "name": "AND"
                    },
                    {
                      "begin": 5496,
                      "end": 5510,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5496,
                      "end": 5510,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5496,
                      "end": 5510,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5496,
                      "end": 5510,
                      "name": "ADD"
                    },
                    {
                      "begin": 5496,
                      "end": 5510,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5496,
                      "end": 5510,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5496,
                      "end": 5510,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5496,
                      "end": 5510,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5496,
                      "end": 5510,
                      "name": "ADD"
                    },
                    {
                      "begin": 5496,
                      "end": 5510,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5496,
                      "end": 5510,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 5496,
                      "end": 5522,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5511,
                      "end": 5521,
                      "name": "CALLER"
                    },
                    {
                      "begin": 5496,
                      "end": 5522,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5496,
                      "end": 5522,
                      "name": "AND"
                    },
                    {
                      "begin": 5496,
                      "end": 5522,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5496,
                      "end": 5522,
                      "name": "AND"
                    },
                    {
                      "begin": 5496,
                      "end": 5522,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5496,
                      "end": 5522,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5496,
                      "end": 5522,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5496,
                      "end": 5522,
                      "name": "ADD"
                    },
                    {
                      "begin": 5496,
                      "end": 5522,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5496,
                      "end": 5522,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5496,
                      "end": 5522,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5496,
                      "end": 5522,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5496,
                      "end": 5522,
                      "name": "ADD"
                    },
                    {
                      "begin": 5496,
                      "end": 5522,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5496,
                      "end": 5522,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 5496,
                      "end": 5547,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5496,
                      "end": 5547,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5496,
                      "end": 5547,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 5496,
                      "end": 5547,
                      "name": "POP"
                    },
                    {
                      "begin": 5455,
                      "end": 5558,
                      "name": "tag",
                      "value": "251"
                    },
                    {
                      "begin": 5455,
                      "end": 5558,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 5585,
                      "end": 5600,
                      "name": "PUSH [tag]",
                      "value": "254"
                    },
                    {
                      "begin": 5596,
                      "end": 5599,
                      "name": "DUP4"
                    },
                    {
                      "begin": 5585,
                      "end": 5591,
                      "name": "DUP7"
                    },
                    {
                      "begin": 5585,
                      "end": 5595,
                      "name": "PUSH [tag]",
                      "value": "253"
                    },
                    {
                      "begin": 5585,
                      "end": 5595,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5585,
                      "end": 5600,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 5585,
                      "end": 5600,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5585,
                      "end": 5600,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 5585,
                      "end": 5600,
                      "name": "AND"
                    },
                    {
                      "begin": 5585,
                      "end": 5600,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 5585,
                      "end": 5600,
                      "name": "tag",
                      "value": "254"
                    },
                    {
                      "begin": 5585,
                      "end": 5600,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 5567,
                      "end": 5600,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 5567,
                      "end": 5600,
                      "name": "POP"
                    },
                    {
                      "begin": 5628,
                      "end": 5655,
                      "name": "PUSH [tag]",
                      "value": "255"
                    },
                    {
                      "begin": 5648,
                      "end": 5654,
                      "name": "DUP6"
                    },
                    {
                      "begin": 5628,
                      "end": 5636,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 5628,
                      "end": 5643,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5637,
                      "end": 5642,
                      "name": "DUP11"
                    },
                    {
                      "begin": 5628,
                      "end": 5643,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5628,
                      "end": 5643,
                      "name": "AND"
                    },
                    {
                      "begin": 5628,
                      "end": 5643,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5628,
                      "end": 5643,
                      "name": "AND"
                    },
                    {
                      "begin": 5628,
                      "end": 5643,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5628,
                      "end": 5643,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5628,
                      "end": 5643,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5628,
                      "end": 5643,
                      "name": "ADD"
                    },
                    {
                      "begin": 5628,
                      "end": 5643,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5628,
                      "end": 5643,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5628,
                      "end": 5643,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5628,
                      "end": 5643,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5628,
                      "end": 5643,
                      "name": "ADD"
                    },
                    {
                      "begin": 5628,
                      "end": 5643,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5628,
                      "end": 5643,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 5628,
                      "end": 5643,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 5628,
                      "end": 5647,
                      "name": "PUSH [tag]",
                      "value": "253"
                    },
                    {
                      "begin": 5628,
                      "end": 5647,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5628,
                      "end": 5655,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 5628,
                      "end": 5655,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5628,
                      "end": 5655,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 5628,
                      "end": 5655,
                      "name": "AND"
                    },
                    {
                      "begin": 5628,
                      "end": 5655,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 5628,
                      "end": 5655,
                      "name": "tag",
                      "value": "255"
                    },
                    {
                      "begin": 5628,
                      "end": 5655,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 5610,
                      "end": 5618,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 5610,
                      "end": 5625,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5619,
                      "end": 5624,
                      "name": "DUP10"
                    },
                    {
                      "begin": 5610,
                      "end": 5625,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5610,
                      "end": 5625,
                      "name": "AND"
                    },
                    {
                      "begin": 5610,
                      "end": 5625,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5610,
                      "end": 5625,
                      "name": "AND"
                    },
                    {
                      "begin": 5610,
                      "end": 5625,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5610,
                      "end": 5625,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5610,
                      "end": 5625,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5610,
                      "end": 5625,
                      "name": "ADD"
                    },
                    {
                      "begin": 5610,
                      "end": 5625,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5610,
                      "end": 5625,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5610,
                      "end": 5625,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5610,
                      "end": 5625,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5610,
                      "end": 5625,
                      "name": "ADD"
                    },
                    {
                      "begin": 5610,
                      "end": 5625,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5610,
                      "end": 5625,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 5610,
                      "end": 5655,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5610,
                      "end": 5655,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5610,
                      "end": 5655,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 5610,
                      "end": 5655,
                      "name": "POP"
                    },
                    {
                      "begin": 5681,
                      "end": 5710,
                      "name": "PUSH [tag]",
                      "value": "256"
                    },
                    {
                      "begin": 5699,
                      "end": 5709,
                      "name": "DUP3"
                    },
                    {
                      "begin": 5681,
                      "end": 5689,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 5681,
                      "end": 5694,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5690,
                      "end": 5693,
                      "name": "DUP10"
                    },
                    {
                      "begin": 5681,
                      "end": 5694,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5681,
                      "end": 5694,
                      "name": "AND"
                    },
                    {
                      "begin": 5681,
                      "end": 5694,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5681,
                      "end": 5694,
                      "name": "AND"
                    },
                    {
                      "begin": 5681,
                      "end": 5694,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5681,
                      "end": 5694,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5681,
                      "end": 5694,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5681,
                      "end": 5694,
                      "name": "ADD"
                    },
                    {
                      "begin": 5681,
                      "end": 5694,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5681,
                      "end": 5694,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5681,
                      "end": 5694,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5681,
                      "end": 5694,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5681,
                      "end": 5694,
                      "name": "ADD"
                    },
                    {
                      "begin": 5681,
                      "end": 5694,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5681,
                      "end": 5694,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 5681,
                      "end": 5694,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 5681,
                      "end": 5698,
                      "name": "PUSH [tag]",
                      "value": "257"
                    },
                    {
                      "begin": 5681,
                      "end": 5698,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5681,
                      "end": 5710,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 5681,
                      "end": 5710,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5681,
                      "end": 5710,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 5681,
                      "end": 5710,
                      "name": "AND"
                    },
                    {
                      "begin": 5681,
                      "end": 5710,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 5681,
                      "end": 5710,
                      "name": "tag",
                      "value": "256"
                    },
                    {
                      "begin": 5681,
                      "end": 5710,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 5665,
                      "end": 5673,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 5665,
                      "end": 5678,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5674,
                      "end": 5677,
                      "name": "DUP9"
                    },
                    {
                      "begin": 5665,
                      "end": 5678,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5665,
                      "end": 5678,
                      "name": "AND"
                    },
                    {
                      "begin": 5665,
                      "end": 5678,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5665,
                      "end": 5678,
                      "name": "AND"
                    },
                    {
                      "begin": 5665,
                      "end": 5678,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5665,
                      "end": 5678,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5665,
                      "end": 5678,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5665,
                      "end": 5678,
                      "name": "ADD"
                    },
                    {
                      "begin": 5665,
                      "end": 5678,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5665,
                      "end": 5678,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5665,
                      "end": 5678,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5665,
                      "end": 5678,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5665,
                      "end": 5678,
                      "name": "ADD"
                    },
                    {
                      "begin": 5665,
                      "end": 5678,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5665,
                      "end": 5678,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 5665,
                      "end": 5710,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5665,
                      "end": 5710,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5665,
                      "end": 5710,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 5665,
                      "end": 5710,
                      "name": "POP"
                    },
                    {
                      "begin": 5730,
                      "end": 5731,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5724,
                      "end": 5727,
                      "name": "DUP4"
                    },
                    {
                      "begin": 5724,
                      "end": 5731,
                      "name": "GT"
                    },
                    {
                      "begin": 5720,
                      "end": 5841,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 5720,
                      "end": 5841,
                      "name": "PUSH [tag]",
                      "value": "258"
                    },
                    {
                      "begin": 5720,
                      "end": 5841,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 5765,
                      "end": 5789,
                      "name": "PUSH [tag]",
                      "value": "259"
                    },
                    {
                      "begin": 5785,
                      "end": 5788,
                      "name": "DUP4"
                    },
                    {
                      "begin": 5765,
                      "end": 5773,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 5765,
                      "end": 5780,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5774,
                      "end": 5779,
                      "name": "DUP1"
                    },
                    {
                      "begin": 5774,
                      "end": 5779,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5774,
                      "end": 5779,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5774,
                      "end": 5779,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 5774,
                      "end": 5779,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5774,
                      "end": 5779,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 5774,
                      "end": 5779,
                      "name": "EXP"
                    },
                    {
                      "begin": 5774,
                      "end": 5779,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5774,
                      "end": 5779,
                      "name": "DIV"
                    },
                    {
                      "begin": 5774,
                      "end": 5779,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5774,
                      "end": 5779,
                      "name": "AND"
                    },
                    {
                      "begin": 5765,
                      "end": 5780,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5765,
                      "end": 5780,
                      "name": "AND"
                    },
                    {
                      "begin": 5765,
                      "end": 5780,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5765,
                      "end": 5780,
                      "name": "AND"
                    },
                    {
                      "begin": 5765,
                      "end": 5780,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5765,
                      "end": 5780,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5765,
                      "end": 5780,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5765,
                      "end": 5780,
                      "name": "ADD"
                    },
                    {
                      "begin": 5765,
                      "end": 5780,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5765,
                      "end": 5780,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5765,
                      "end": 5780,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5765,
                      "end": 5780,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5765,
                      "end": 5780,
                      "name": "ADD"
                    },
                    {
                      "begin": 5765,
                      "end": 5780,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5765,
                      "end": 5780,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 5765,
                      "end": 5780,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 5765,
                      "end": 5784,
                      "name": "PUSH [tag]",
                      "value": "257"
                    },
                    {
                      "begin": 5765,
                      "end": 5784,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5765,
                      "end": 5789,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 5765,
                      "end": 5789,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5765,
                      "end": 5789,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 5765,
                      "end": 5789,
                      "name": "AND"
                    },
                    {
                      "begin": 5765,
                      "end": 5789,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 5765,
                      "end": 5789,
                      "name": "tag",
                      "value": "259"
                    },
                    {
                      "begin": 5765,
                      "end": 5789,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 5747,
                      "end": 5755,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 5747,
                      "end": 5762,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5756,
                      "end": 5761,
                      "name": "DUP1"
                    },
                    {
                      "begin": 5756,
                      "end": 5761,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5756,
                      "end": 5761,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5756,
                      "end": 5761,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 5756,
                      "end": 5761,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5756,
                      "end": 5761,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 5756,
                      "end": 5761,
                      "name": "EXP"
                    },
                    {
                      "begin": 5756,
                      "end": 5761,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5756,
                      "end": 5761,
                      "name": "DIV"
                    },
                    {
                      "begin": 5756,
                      "end": 5761,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5756,
                      "end": 5761,
                      "name": "AND"
                    },
                    {
                      "begin": 5747,
                      "end": 5762,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5747,
                      "end": 5762,
                      "name": "AND"
                    },
                    {
                      "begin": 5747,
                      "end": 5762,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5747,
                      "end": 5762,
                      "name": "AND"
                    },
                    {
                      "begin": 5747,
                      "end": 5762,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5747,
                      "end": 5762,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5747,
                      "end": 5762,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5747,
                      "end": 5762,
                      "name": "ADD"
                    },
                    {
                      "begin": 5747,
                      "end": 5762,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5747,
                      "end": 5762,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5747,
                      "end": 5762,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5747,
                      "end": 5762,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5747,
                      "end": 5762,
                      "name": "ADD"
                    },
                    {
                      "begin": 5747,
                      "end": 5762,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5747,
                      "end": 5762,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 5747,
                      "end": 5789,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5747,
                      "end": 5789,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5747,
                      "end": 5789,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 5747,
                      "end": 5789,
                      "name": "POP"
                    },
                    {
                      "begin": 5819,
                      "end": 5824,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5819,
                      "end": 5824,
                      "name": "DUP1"
                    },
                    {
                      "begin": 5819,
                      "end": 5824,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5819,
                      "end": 5824,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 5819,
                      "end": 5824,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5819,
                      "end": 5824,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 5819,
                      "end": 5824,
                      "name": "EXP"
                    },
                    {
                      "begin": 5819,
                      "end": 5824,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5819,
                      "end": 5824,
                      "name": "DIV"
                    },
                    {
                      "begin": 5819,
                      "end": 5824,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5819,
                      "end": 5824,
                      "name": "AND"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "AND"
                    },
                    {
                      "begin": 5812,
                      "end": 5817,
                      "name": "DUP8"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "AND"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "PUSH",
                      "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                    },
                    {
                      "begin": 5826,
                      "end": 5829,
                      "name": "DUP6"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "DUP1"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "DUP3"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "ADD"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "POP"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "POP"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "DUP1"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "SUB"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5803,
                      "end": 5830,
                      "name": "LOG3"
                    },
                    {
                      "begin": 5720,
                      "end": 5841,
                      "name": "tag",
                      "value": "258"
                    },
                    {
                      "begin": 5720,
                      "end": 5841,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 5866,
                      "end": 5869,
                      "name": "DUP6"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "AND"
                    },
                    {
                      "begin": 5859,
                      "end": 5864,
                      "name": "DUP8"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "AND"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "PUSH",
                      "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                    },
                    {
                      "begin": 5871,
                      "end": 5881,
                      "name": "DUP5"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "DUP1"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "DUP3"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "ADD"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "POP"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "POP"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "DUP1"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "SUB"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5850,
                      "end": 5882,
                      "name": "LOG3"
                    },
                    {
                      "begin": 5009,
                      "end": 5889,
                      "name": "POP"
                    },
                    {
                      "begin": 5009,
                      "end": 5889,
                      "name": "POP"
                    },
                    {
                      "begin": 5009,
                      "end": 5889,
                      "name": "POP"
                    },
                    {
                      "begin": 5009,
                      "end": 5889,
                      "name": "POP"
                    },
                    {
                      "begin": 5009,
                      "end": 5889,
                      "name": "POP"
                    },
                    {
                      "begin": 5009,
                      "end": 5889,
                      "name": "POP"
                    },
                    {
                      "begin": 5009,
                      "end": 5889,
                      "name": "POP"
                    },
                    {
                      "begin": 5009,
                      "end": 5889,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4181,
                      "end": 4295,
                      "name": "tag",
                      "value": "183"
                    },
                    {
                      "begin": 4181,
                      "end": 4295,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4241,
                      "end": 4253,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4272,
                      "end": 4280,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 4272,
                      "end": 4288,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4281,
                      "end": 4287,
                      "name": "DUP4"
                    },
                    {
                      "begin": 4272,
                      "end": 4288,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4272,
                      "end": 4288,
                      "name": "AND"
                    },
                    {
                      "begin": 4272,
                      "end": 4288,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4272,
                      "end": 4288,
                      "name": "AND"
                    },
                    {
                      "begin": 4272,
                      "end": 4288,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4272,
                      "end": 4288,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4272,
                      "end": 4288,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4272,
                      "end": 4288,
                      "name": "ADD"
                    },
                    {
                      "begin": 4272,
                      "end": 4288,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4272,
                      "end": 4288,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4272,
                      "end": 4288,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4272,
                      "end": 4288,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4272,
                      "end": 4288,
                      "name": "ADD"
                    },
                    {
                      "begin": 4272,
                      "end": 4288,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4272,
                      "end": 4288,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 4272,
                      "end": 4288,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4265,
                      "end": 4288,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4265,
                      "end": 4288,
                      "name": "POP"
                    },
                    {
                      "begin": 4181,
                      "end": 4295,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4181,
                      "end": 4295,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4181,
                      "end": 4295,
                      "name": "POP"
                    },
                    {
                      "begin": 4181,
                      "end": 4295,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 3410,
                      "end": 3970,
                      "name": "tag",
                      "value": "202"
                    },
                    {
                      "begin": 3410,
                      "end": 3970,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3495,
                      "end": 3503,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3628,
                      "end": 3643,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3477,
                      "end": 3483,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3223,
                      "end": 3224,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 3216,
                      "end": 3220,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3216,
                      "end": 3224,
                      "name": "ADD"
                    },
                    {
                      "begin": 3198,
                      "end": 3206,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3198,
                      "end": 3206,
                      "name": "CALLDATASIZE"
                    },
                    {
                      "begin": 3198,
                      "end": 3213,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3198,
                      "end": 3213,
                      "name": "POP"
                    },
                    {
                      "begin": 3198,
                      "end": 3224,
                      "name": "LT"
                    },
                    {
                      "begin": 3196,
                      "end": 3225,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "PUSH [tag]",
                      "value": "262"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "tag",
                      "value": "262"
                    },
                    {
                      "begin": 3188,
                      "end": 3226,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3506,
                      "end": 3546,
                      "name": "PUSH [tag]",
                      "value": "264"
                    },
                    {
                      "begin": 3540,
                      "end": 3545,
                      "name": "PUSH",
                      "value": "2710"
                    },
                    {
                      "begin": 3507,
                      "end": 3534,
                      "name": "PUSH [tag]",
                      "value": "265"
                    },
                    {
                      "begin": 3518,
                      "end": 3533,
                      "name": "PUSH",
                      "value": "3"
                    },
                    {
                      "begin": 3518,
                      "end": 3533,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3507,
                      "end": 3513,
                      "name": "DUP8"
                    },
                    {
                      "begin": 3507,
                      "end": 3517,
                      "name": "PUSH [tag]",
                      "value": "209"
                    },
                    {
                      "begin": 3507,
                      "end": 3517,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3507,
                      "end": 3534,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3507,
                      "end": 3534,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3507,
                      "end": 3534,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 3507,
                      "end": 3534,
                      "name": "AND"
                    },
                    {
                      "begin": 3507,
                      "end": 3534,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 3507,
                      "end": 3534,
                      "name": "tag",
                      "value": "265"
                    },
                    {
                      "begin": 3507,
                      "end": 3534,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3506,
                      "end": 3539,
                      "name": "PUSH [tag]",
                      "value": "249"
                    },
                    {
                      "begin": 3506,
                      "end": 3539,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3506,
                      "end": 3546,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3506,
                      "end": 3546,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3506,
                      "end": 3546,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 3506,
                      "end": 3546,
                      "name": "AND"
                    },
                    {
                      "begin": 3506,
                      "end": 3546,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 3506,
                      "end": 3546,
                      "name": "tag",
                      "value": "264"
                    },
                    {
                      "begin": 3506,
                      "end": 3546,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3495,
                      "end": 3546,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 3495,
                      "end": 3546,
                      "name": "POP"
                    },
                    {
                      "begin": 3566,
                      "end": 3576,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 3566,
                      "end": 3576,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3560,
                      "end": 3563,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3560,
                      "end": 3576,
                      "name": "GT"
                    },
                    {
                      "begin": 3556,
                      "end": 3619,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3556,
                      "end": 3619,
                      "name": "PUSH [tag]",
                      "value": "266"
                    },
                    {
                      "begin": 3556,
                      "end": 3619,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3598,
                      "end": 3608,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 3598,
                      "end": 3608,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3592,
                      "end": 3608,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 3592,
                      "end": 3608,
                      "name": "POP"
                    },
                    {
                      "begin": 3556,
                      "end": 3619,
                      "name": "tag",
                      "value": "266"
                    },
                    {
                      "begin": 3556,
                      "end": 3619,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3646,
                      "end": 3661,
                      "name": "PUSH [tag]",
                      "value": "267"
                    },
                    {
                      "begin": 3657,
                      "end": 3660,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3646,
                      "end": 3652,
                      "name": "DUP6"
                    },
                    {
                      "begin": 3646,
                      "end": 3656,
                      "name": "PUSH [tag]",
                      "value": "253"
                    },
                    {
                      "begin": 3646,
                      "end": 3656,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3646,
                      "end": 3661,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3646,
                      "end": 3661,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3646,
                      "end": 3661,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 3646,
                      "end": 3661,
                      "name": "AND"
                    },
                    {
                      "begin": 3646,
                      "end": 3661,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 3646,
                      "end": 3661,
                      "name": "tag",
                      "value": "267"
                    },
                    {
                      "begin": 3646,
                      "end": 3661,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3628,
                      "end": 3661,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3628,
                      "end": 3661,
                      "name": "POP"
                    },
                    {
                      "begin": 3694,
                      "end": 3726,
                      "name": "PUSH [tag]",
                      "value": "268"
                    },
                    {
                      "begin": 3719,
                      "end": 3725,
                      "name": "DUP5"
                    },
                    {
                      "begin": 3694,
                      "end": 3702,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 3694,
                      "end": 3714,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3703,
                      "end": 3713,
                      "name": "CALLER"
                    },
                    {
                      "begin": 3694,
                      "end": 3714,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3694,
                      "end": 3714,
                      "name": "AND"
                    },
                    {
                      "begin": 3694,
                      "end": 3714,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3694,
                      "end": 3714,
                      "name": "AND"
                    },
                    {
                      "begin": 3694,
                      "end": 3714,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3694,
                      "end": 3714,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3694,
                      "end": 3714,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3694,
                      "end": 3714,
                      "name": "ADD"
                    },
                    {
                      "begin": 3694,
                      "end": 3714,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3694,
                      "end": 3714,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3694,
                      "end": 3714,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3694,
                      "end": 3714,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3694,
                      "end": 3714,
                      "name": "ADD"
                    },
                    {
                      "begin": 3694,
                      "end": 3714,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3694,
                      "end": 3714,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 3694,
                      "end": 3714,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3694,
                      "end": 3718,
                      "name": "PUSH [tag]",
                      "value": "253"
                    },
                    {
                      "begin": 3694,
                      "end": 3718,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3694,
                      "end": 3726,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3694,
                      "end": 3726,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3694,
                      "end": 3726,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 3694,
                      "end": 3726,
                      "name": "AND"
                    },
                    {
                      "begin": 3694,
                      "end": 3726,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 3694,
                      "end": 3726,
                      "name": "tag",
                      "value": "268"
                    },
                    {
                      "begin": 3694,
                      "end": 3726,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3671,
                      "end": 3679,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 3671,
                      "end": 3691,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3680,
                      "end": 3690,
                      "name": "CALLER"
                    },
                    {
                      "begin": 3671,
                      "end": 3691,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3671,
                      "end": 3691,
                      "name": "AND"
                    },
                    {
                      "begin": 3671,
                      "end": 3691,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3671,
                      "end": 3691,
                      "name": "AND"
                    },
                    {
                      "begin": 3671,
                      "end": 3691,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3671,
                      "end": 3691,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3671,
                      "end": 3691,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3671,
                      "end": 3691,
                      "name": "ADD"
                    },
                    {
                      "begin": 3671,
                      "end": 3691,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3671,
                      "end": 3691,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3671,
                      "end": 3691,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3671,
                      "end": 3691,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3671,
                      "end": 3691,
                      "name": "ADD"
                    },
                    {
                      "begin": 3671,
                      "end": 3691,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3671,
                      "end": 3691,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 3671,
                      "end": 3726,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3671,
                      "end": 3726,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3671,
                      "end": 3726,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 3671,
                      "end": 3726,
                      "name": "POP"
                    },
                    {
                      "begin": 3752,
                      "end": 3781,
                      "name": "PUSH [tag]",
                      "value": "269"
                    },
                    {
                      "begin": 3770,
                      "end": 3780,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3752,
                      "end": 3760,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 3752,
                      "end": 3765,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3761,
                      "end": 3764,
                      "name": "DUP9"
                    },
                    {
                      "begin": 3752,
                      "end": 3765,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3752,
                      "end": 3765,
                      "name": "AND"
                    },
                    {
                      "begin": 3752,
                      "end": 3765,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3752,
                      "end": 3765,
                      "name": "AND"
                    },
                    {
                      "begin": 3752,
                      "end": 3765,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3752,
                      "end": 3765,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3752,
                      "end": 3765,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3752,
                      "end": 3765,
                      "name": "ADD"
                    },
                    {
                      "begin": 3752,
                      "end": 3765,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3752,
                      "end": 3765,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3752,
                      "end": 3765,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3752,
                      "end": 3765,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3752,
                      "end": 3765,
                      "name": "ADD"
                    },
                    {
                      "begin": 3752,
                      "end": 3765,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3752,
                      "end": 3765,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 3752,
                      "end": 3765,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3752,
                      "end": 3769,
                      "name": "PUSH [tag]",
                      "value": "257"
                    },
                    {
                      "begin": 3752,
                      "end": 3769,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3752,
                      "end": 3781,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3752,
                      "end": 3781,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3752,
                      "end": 3781,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 3752,
                      "end": 3781,
                      "name": "AND"
                    },
                    {
                      "begin": 3752,
                      "end": 3781,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 3752,
                      "end": 3781,
                      "name": "tag",
                      "value": "269"
                    },
                    {
                      "begin": 3752,
                      "end": 3781,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3736,
                      "end": 3744,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 3736,
                      "end": 3749,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3745,
                      "end": 3748,
                      "name": "DUP8"
                    },
                    {
                      "begin": 3736,
                      "end": 3749,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3736,
                      "end": 3749,
                      "name": "AND"
                    },
                    {
                      "begin": 3736,
                      "end": 3749,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3736,
                      "end": 3749,
                      "name": "AND"
                    },
                    {
                      "begin": 3736,
                      "end": 3749,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3736,
                      "end": 3749,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3736,
                      "end": 3749,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3736,
                      "end": 3749,
                      "name": "ADD"
                    },
                    {
                      "begin": 3736,
                      "end": 3749,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3736,
                      "end": 3749,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3736,
                      "end": 3749,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3736,
                      "end": 3749,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3736,
                      "end": 3749,
                      "name": "ADD"
                    },
                    {
                      "begin": 3736,
                      "end": 3749,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3736,
                      "end": 3749,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 3736,
                      "end": 3781,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3736,
                      "end": 3781,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3736,
                      "end": 3781,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 3736,
                      "end": 3781,
                      "name": "POP"
                    },
                    {
                      "begin": 3801,
                      "end": 3802,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3795,
                      "end": 3798,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3795,
                      "end": 3802,
                      "name": "GT"
                    },
                    {
                      "begin": 3791,
                      "end": 3917,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3791,
                      "end": 3917,
                      "name": "PUSH [tag]",
                      "value": "270"
                    },
                    {
                      "begin": 3791,
                      "end": 3917,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3836,
                      "end": 3860,
                      "name": "PUSH [tag]",
                      "value": "271"
                    },
                    {
                      "begin": 3856,
                      "end": 3859,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3836,
                      "end": 3844,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 3836,
                      "end": 3851,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3845,
                      "end": 3850,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3845,
                      "end": 3850,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3845,
                      "end": 3850,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3845,
                      "end": 3850,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3845,
                      "end": 3850,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3845,
                      "end": 3850,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3845,
                      "end": 3850,
                      "name": "EXP"
                    },
                    {
                      "begin": 3845,
                      "end": 3850,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3845,
                      "end": 3850,
                      "name": "DIV"
                    },
                    {
                      "begin": 3845,
                      "end": 3850,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3845,
                      "end": 3850,
                      "name": "AND"
                    },
                    {
                      "begin": 3836,
                      "end": 3851,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3836,
                      "end": 3851,
                      "name": "AND"
                    },
                    {
                      "begin": 3836,
                      "end": 3851,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3836,
                      "end": 3851,
                      "name": "AND"
                    },
                    {
                      "begin": 3836,
                      "end": 3851,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3836,
                      "end": 3851,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3836,
                      "end": 3851,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3836,
                      "end": 3851,
                      "name": "ADD"
                    },
                    {
                      "begin": 3836,
                      "end": 3851,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3836,
                      "end": 3851,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3836,
                      "end": 3851,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3836,
                      "end": 3851,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3836,
                      "end": 3851,
                      "name": "ADD"
                    },
                    {
                      "begin": 3836,
                      "end": 3851,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3836,
                      "end": 3851,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 3836,
                      "end": 3851,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3836,
                      "end": 3855,
                      "name": "PUSH [tag]",
                      "value": "257"
                    },
                    {
                      "begin": 3836,
                      "end": 3855,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3836,
                      "end": 3860,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3836,
                      "end": 3860,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3836,
                      "end": 3860,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 3836,
                      "end": 3860,
                      "name": "AND"
                    },
                    {
                      "begin": 3836,
                      "end": 3860,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 3836,
                      "end": 3860,
                      "name": "tag",
                      "value": "271"
                    },
                    {
                      "begin": 3836,
                      "end": 3860,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3818,
                      "end": 3826,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 3818,
                      "end": 3833,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3827,
                      "end": 3832,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3827,
                      "end": 3832,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3827,
                      "end": 3832,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3827,
                      "end": 3832,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3827,
                      "end": 3832,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3827,
                      "end": 3832,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3827,
                      "end": 3832,
                      "name": "EXP"
                    },
                    {
                      "begin": 3827,
                      "end": 3832,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3827,
                      "end": 3832,
                      "name": "DIV"
                    },
                    {
                      "begin": 3827,
                      "end": 3832,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3827,
                      "end": 3832,
                      "name": "AND"
                    },
                    {
                      "begin": 3818,
                      "end": 3833,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3818,
                      "end": 3833,
                      "name": "AND"
                    },
                    {
                      "begin": 3818,
                      "end": 3833,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3818,
                      "end": 3833,
                      "name": "AND"
                    },
                    {
                      "begin": 3818,
                      "end": 3833,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3818,
                      "end": 3833,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3818,
                      "end": 3833,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3818,
                      "end": 3833,
                      "name": "ADD"
                    },
                    {
                      "begin": 3818,
                      "end": 3833,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3818,
                      "end": 3833,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3818,
                      "end": 3833,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3818,
                      "end": 3833,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3818,
                      "end": 3833,
                      "name": "ADD"
                    },
                    {
                      "begin": 3818,
                      "end": 3833,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3818,
                      "end": 3833,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 3818,
                      "end": 3860,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3818,
                      "end": 3860,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3818,
                      "end": 3860,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 3818,
                      "end": 3860,
                      "name": "POP"
                    },
                    {
                      "begin": 3895,
                      "end": 3900,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3895,
                      "end": 3900,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3895,
                      "end": 3900,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3895,
                      "end": 3900,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3895,
                      "end": 3900,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3895,
                      "end": 3900,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3895,
                      "end": 3900,
                      "name": "EXP"
                    },
                    {
                      "begin": 3895,
                      "end": 3900,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3895,
                      "end": 3900,
                      "name": "DIV"
                    },
                    {
                      "begin": 3895,
                      "end": 3900,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3895,
                      "end": 3900,
                      "name": "AND"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "AND"
                    },
                    {
                      "begin": 3883,
                      "end": 3893,
                      "name": "CALLER"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "AND"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "PUSH",
                      "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                    },
                    {
                      "begin": 3902,
                      "end": 3905,
                      "name": "DUP6"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "ADD"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "POP"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "POP"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "SUB"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3874,
                      "end": 3906,
                      "name": "LOG3"
                    },
                    {
                      "begin": 3791,
                      "end": 3917,
                      "name": "tag",
                      "value": "270"
                    },
                    {
                      "begin": 3791,
                      "end": 3917,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3947,
                      "end": 3950,
                      "name": "DUP5"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "AND"
                    },
                    {
                      "begin": 3935,
                      "end": 3945,
                      "name": "CALLER"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "AND"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "PUSH",
                      "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                    },
                    {
                      "begin": 3952,
                      "end": 3962,
                      "name": "DUP5"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "ADD"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "POP"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "POP"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "SUB"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3926,
                      "end": 3963,
                      "name": "LOG3"
                    },
                    {
                      "begin": 3410,
                      "end": 3970,
                      "name": "POP"
                    },
                    {
                      "begin": 3410,
                      "end": 3970,
                      "name": "POP"
                    },
                    {
                      "begin": 3410,
                      "end": 3970,
                      "name": "POP"
                    },
                    {
                      "begin": 3410,
                      "end": 3970,
                      "name": "POP"
                    },
                    {
                      "begin": 3410,
                      "end": 3970,
                      "name": "POP"
                    },
                    {
                      "begin": 3410,
                      "end": 3970,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 171,
                      "end": 372,
                      "name": "tag",
                      "value": "209"
                    },
                    {
                      "begin": 171,
                      "end": 372,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 229,
                      "end": 236,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 302,
                      "end": 311,
                      "name": "DUP1"
                    },
                    {
                      "begin": 257,
                      "end": 258,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 252,
                      "end": 253,
                      "name": "DUP5"
                    },
                    {
                      "begin": 252,
                      "end": 258,
                      "name": "EQ"
                    },
                    {
                      "begin": 248,
                      "end": 293,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 248,
                      "end": 293,
                      "name": "PUSH [tag]",
                      "value": "273"
                    },
                    {
                      "begin": 248,
                      "end": 293,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 281,
                      "end": 282,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 274,
                      "end": 282,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 274,
                      "end": 282,
                      "name": "POP"
                    },
                    {
                      "begin": 274,
                      "end": 282,
                      "name": "PUSH [tag]",
                      "value": "272"
                    },
                    {
                      "begin": 274,
                      "end": 282,
                      "name": "JUMP"
                    },
                    {
                      "begin": 248,
                      "end": 293,
                      "name": "tag",
                      "value": "273"
                    },
                    {
                      "begin": 248,
                      "end": 293,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 318,
                      "end": 319,
                      "name": "DUP3"
                    },
                    {
                      "begin": 314,
                      "end": 315,
                      "name": "DUP5"
                    },
                    {
                      "begin": 314,
                      "end": 319,
                      "name": "MUL"
                    },
                    {
                      "begin": 302,
                      "end": 319,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 302,
                      "end": 319,
                      "name": "POP"
                    },
                    {
                      "begin": 345,
                      "end": 346,
                      "name": "DUP3"
                    },
                    {
                      "begin": 340,
                      "end": 341,
                      "name": "DUP5"
                    },
                    {
                      "begin": 336,
                      "end": 337,
                      "name": "DUP3"
                    },
                    {
                      "begin": 336,
                      "end": 341,
                      "name": "DUP2"
                    },
                    {
                      "begin": 336,
                      "end": 341,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 336,
                      "end": 341,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 336,
                      "end": 341,
                      "name": "PUSH [tag]",
                      "value": "274"
                    },
                    {
                      "begin": 336,
                      "end": 341,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 336,
                      "end": 341,
                      "name": "INVALID"
                    },
                    {
                      "begin": 336,
                      "end": 341,
                      "name": "tag",
                      "value": "274"
                    },
                    {
                      "begin": 336,
                      "end": 341,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 336,
                      "end": 341,
                      "name": "DIV"
                    },
                    {
                      "begin": 336,
                      "end": 346,
                      "name": "EQ"
                    },
                    {
                      "begin": 329,
                      "end": 347,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 329,
                      "end": 347,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 329,
                      "end": 347,
                      "name": "PUSH [tag]",
                      "value": "275"
                    },
                    {
                      "begin": 329,
                      "end": 347,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 329,
                      "end": 347,
                      "name": "INVALID"
                    },
                    {
                      "begin": 329,
                      "end": 347,
                      "name": "tag",
                      "value": "275"
                    },
                    {
                      "begin": 329,
                      "end": 347,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 364,
                      "end": 365,
                      "name": "DUP1"
                    },
                    {
                      "begin": 357,
                      "end": 365,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 357,
                      "end": 365,
                      "name": "POP"
                    },
                    {
                      "begin": 171,
                      "end": 372,
                      "name": "tag",
                      "value": "272"
                    },
                    {
                      "begin": 171,
                      "end": 372,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 171,
                      "end": 372,
                      "name": "POP"
                    },
                    {
                      "begin": 171,
                      "end": 372,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 171,
                      "end": 372,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 171,
                      "end": 372,
                      "name": "POP"
                    },
                    {
                      "begin": 171,
                      "end": 372,
                      "name": "POP"
                    },
                    {
                      "begin": 171,
                      "end": 372,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 7017,
                      "end": 7160,
                      "name": "tag",
                      "value": "226"
                    },
                    {
                      "begin": 7017,
                      "end": 7160,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7095,
                      "end": 7109,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7128,
                      "end": 7135,
                      "name": "PUSH",
                      "value": "5"
                    },
                    {
                      "begin": 7128,
                      "end": 7143,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7136,
                      "end": 7142,
                      "name": "DUP5"
                    },
                    {
                      "begin": 7128,
                      "end": 7143,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 7128,
                      "end": 7143,
                      "name": "AND"
                    },
                    {
                      "begin": 7128,
                      "end": 7143,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 7128,
                      "end": 7143,
                      "name": "AND"
                    },
                    {
                      "begin": 7128,
                      "end": 7143,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7128,
                      "end": 7143,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 7128,
                      "end": 7143,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 7128,
                      "end": 7143,
                      "name": "ADD"
                    },
                    {
                      "begin": 7128,
                      "end": 7143,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7128,
                      "end": 7143,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7128,
                      "end": 7143,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 7128,
                      "end": 7143,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 7128,
                      "end": 7143,
                      "name": "ADD"
                    },
                    {
                      "begin": 7128,
                      "end": 7143,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7128,
                      "end": 7143,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 7128,
                      "end": 7153,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7144,
                      "end": 7152,
                      "name": "DUP4"
                    },
                    {
                      "begin": 7128,
                      "end": 7153,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 7128,
                      "end": 7153,
                      "name": "AND"
                    },
                    {
                      "begin": 7128,
                      "end": 7153,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 7128,
                      "end": 7153,
                      "name": "AND"
                    },
                    {
                      "begin": 7128,
                      "end": 7153,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7128,
                      "end": 7153,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 7128,
                      "end": 7153,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 7128,
                      "end": 7153,
                      "name": "ADD"
                    },
                    {
                      "begin": 7128,
                      "end": 7153,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7128,
                      "end": 7153,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7128,
                      "end": 7153,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 7128,
                      "end": 7153,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 7128,
                      "end": 7153,
                      "name": "ADD"
                    },
                    {
                      "begin": 7128,
                      "end": 7153,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7128,
                      "end": 7153,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 7128,
                      "end": 7153,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7121,
                      "end": 7153,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7121,
                      "end": 7153,
                      "name": "POP"
                    },
                    {
                      "begin": 7017,
                      "end": 7160,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 7017,
                      "end": 7160,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 7017,
                      "end": 7160,
                      "name": "POP"
                    },
                    {
                      "begin": 7017,
                      "end": 7160,
                      "name": "POP"
                    },
                    {
                      "begin": 7017,
                      "end": 7160,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 378,
                      "end": 661,
                      "name": "tag",
                      "value": "249"
                    },
                    {
                      "begin": 378,
                      "end": 661,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 436,
                      "end": 443,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 533,
                      "end": 542,
                      "name": "DUP1"
                    },
                    {
                      "begin": 549,
                      "end": 550,
                      "name": "DUP3"
                    },
                    {
                      "begin": 545,
                      "end": 546,
                      "name": "DUP5"
                    },
                    {
                      "begin": 545,
                      "end": 550,
                      "name": "DUP2"
                    },
                    {
                      "begin": 545,
                      "end": 550,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 545,
                      "end": 550,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 545,
                      "end": 550,
                      "name": "PUSH [tag]",
                      "value": "278"
                    },
                    {
                      "begin": 545,
                      "end": 550,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 545,
                      "end": 550,
                      "name": "INVALID"
                    },
                    {
                      "begin": 545,
                      "end": 550,
                      "name": "tag",
                      "value": "278"
                    },
                    {
                      "begin": 545,
                      "end": 550,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 545,
                      "end": 550,
                      "name": "DIV"
                    },
                    {
                      "begin": 533,
                      "end": 550,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 533,
                      "end": 550,
                      "name": "POP"
                    },
                    {
                      "begin": 653,
                      "end": 654,
                      "name": "DUP1"
                    },
                    {
                      "begin": 646,
                      "end": 654,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 646,
                      "end": 654,
                      "name": "POP"
                    },
                    {
                      "begin": 378,
                      "end": 661,
                      "name": "POP"
                    },
                    {
                      "begin": 378,
                      "end": 661,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 378,
                      "end": 661,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 378,
                      "end": 661,
                      "name": "POP"
                    },
                    {
                      "begin": 378,
                      "end": 661,
                      "name": "POP"
                    },
                    {
                      "begin": 378,
                      "end": 661,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 667,
                      "end": 787,
                      "name": "tag",
                      "value": "253"
                    },
                    {
                      "begin": 667,
                      "end": 787,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 725,
                      "end": 732,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 756,
                      "end": 757,
                      "name": "DUP3"
                    },
                    {
                      "begin": 751,
                      "end": 752,
                      "name": "DUP3"
                    },
                    {
                      "begin": 751,
                      "end": 757,
                      "name": "GT"
                    },
                    {
                      "begin": 751,
                      "end": 757,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 744,
                      "end": 758,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 744,
                      "end": 758,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 744,
                      "end": 758,
                      "name": "PUSH [tag]",
                      "value": "280"
                    },
                    {
                      "begin": 744,
                      "end": 758,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 744,
                      "end": 758,
                      "name": "INVALID"
                    },
                    {
                      "begin": 744,
                      "end": 758,
                      "name": "tag",
                      "value": "280"
                    },
                    {
                      "begin": 744,
                      "end": 758,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 779,
                      "end": 780,
                      "name": "DUP2"
                    },
                    {
                      "begin": 775,
                      "end": 776,
                      "name": "DUP4"
                    },
                    {
                      "begin": 775,
                      "end": 780,
                      "name": "SUB"
                    },
                    {
                      "begin": 768,
                      "end": 780,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 768,
                      "end": 780,
                      "name": "POP"
                    },
                    {
                      "begin": 667,
                      "end": 787,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 667,
                      "end": 787,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 667,
                      "end": 787,
                      "name": "POP"
                    },
                    {
                      "begin": 667,
                      "end": 787,
                      "name": "POP"
                    },
                    {
                      "begin": 667,
                      "end": 787,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 793,
                      "end": 936,
                      "name": "tag",
                      "value": "257"
                    },
                    {
                      "begin": 793,
                      "end": 936,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 851,
                      "end": 858,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 870,
                      "end": 879,
                      "name": "DUP1"
                    },
                    {
                      "begin": 886,
                      "end": 887,
                      "name": "DUP3"
                    },
                    {
                      "begin": 882,
                      "end": 883,
                      "name": "DUP5"
                    },
                    {
                      "begin": 882,
                      "end": 887,
                      "name": "ADD"
                    },
                    {
                      "begin": 870,
                      "end": 887,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 870,
                      "end": 887,
                      "name": "POP"
                    },
                    {
                      "begin": 909,
                      "end": 910,
                      "name": "DUP4"
                    },
                    {
                      "begin": 904,
                      "end": 905,
                      "name": "DUP2"
                    },
                    {
                      "begin": 904,
                      "end": 910,
                      "name": "LT"
                    },
                    {
                      "begin": 904,
                      "end": 910,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 897,
                      "end": 911,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 897,
                      "end": 911,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 897,
                      "end": 911,
                      "name": "PUSH [tag]",
                      "value": "282"
                    },
                    {
                      "begin": 897,
                      "end": 911,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 897,
                      "end": 911,
                      "name": "INVALID"
                    },
                    {
                      "begin": 897,
                      "end": 911,
                      "name": "tag",
                      "value": "282"
                    },
                    {
                      "begin": 897,
                      "end": 911,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 928,
                      "end": 929,
                      "name": "DUP1"
                    },
                    {
                      "begin": 921,
                      "end": 929,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 921,
                      "end": 929,
                      "name": "POP"
                    },
                    {
                      "begin": 793,
                      "end": 936,
                      "name": "POP"
                    },
                    {
                      "begin": 793,
                      "end": 936,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 793,
                      "end": 936,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 793,
                      "end": 936,
                      "name": "POP"
                    },
                    {
                      "begin": 793,
                      "end": 936,
                      "name": "POP"
                    },
                    {
                      "begin": 793,
                      "end": 936,
                      "name": "JUMP",
                      "value": "[out]"
                    }
                  ]
                }
              }
            },
            "methodIdentifiers": {
              "MAX_UINT()": "e5b5019a",
              "_totalSupply()": "3eaaf86b",
              "addBlackList(address)": "0ecb93c0",
              "allowance(address,address)": "dd62ed3e",
              "allowed(address,address)": "5c658165",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "balances(address)": "27e235e3",
              "basisPointsRate()": "dd644f72",
              "decimals()": "313ce567",
              "deprecate(address)": "0753c30c",
              "deprecated()": "0e136b19",
              "destroyBlackFunds(address)": "f3bdc228",
              "getBlackListStatus(address)": "59bf1abe",
              "getOwner()": "893d20e8",
              "isBlackListed(address)": "e47d6060",
              "issue(uint256)": "cc872b66",
              "maximumFee()": "35390714",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "redeem(uint256)": "db006a75",
              "removeBlackList(address)": "e4997dc5",
              "setParams(uint256,uint256)": "c0324c77",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b",
              "unpause()": "3f4ba83a",
              "upgradedAddress()": "26976e3f"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}}},\"userdoc\":{\"methods\":{\"getBlackListStatus(address)\":{\"notice\":\"//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/test/TetherToken.sol\":\"TetherToken\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":0},\"remappings\":[]},\"sources\":{\"contracts/test/TetherToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.4.17;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that throw on error\\n */\\nlibrary SafeMath {\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n        uint256 c = a * b;\\n        assert(c / a == b);\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        assert(b <= a);\\n        return a - b;\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        assert(c >= a);\\n        return c;\\n    }\\n}\\n\\n/**\\n * @title Ownable\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\n */\\ncontract Ownable {\\n    address public owner;\\n\\n    /**\\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n      * account.\\n      */\\n    function Ownable() public {\\n        owner = msg.sender;\\n    }\\n\\n    /**\\n      * @dev Throws if called by any account other than the owner.\\n      */\\n    modifier onlyOwner() {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n    * @param newOwner The address to transfer ownership to.\\n    */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        if (newOwner != address(0)) {\\n            owner = newOwner;\\n        }\\n    }\\n\\n}\\n\\n/**\\n * @title ERC20Basic\\n * @dev Simpler version of ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20Basic {\\n    uint public _totalSupply;\\n    function totalSupply() public constant returns (uint);\\n    function balanceOf(address who) public constant returns (uint);\\n    function transfer(address to, uint value) public;\\n    event Transfer(address indexed from, address indexed to, uint value);\\n}\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20 is ERC20Basic {\\n    function allowance(address owner, address spender) public constant returns (uint);\\n    function transferFrom(address from, address to, uint value) public;\\n    function approve(address spender, uint value) public;\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n}\\n\\n/**\\n * @title Basic token\\n * @dev Basic version of StandardToken, with no allowances.\\n */\\ncontract BasicToken is Ownable, ERC20Basic {\\n    using SafeMath for uint;\\n\\n    mapping(address => uint) public balances;\\n\\n    // additional variables for use if transaction fees ever became necessary\\n    uint public basisPointsRate = 0;\\n    uint public maximumFee = 0;\\n\\n    /**\\n    * @dev Fix for the ERC20 short address attack.\\n    */\\n    modifier onlyPayloadSize(uint size) {\\n        require(!(msg.data.length < size + 4));\\n        _;\\n    }\\n\\n    /**\\n    * @dev transfer token for a specified address\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[msg.sender] = balances[msg.sender].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(msg.sender, owner, fee);\\n        }\\n        Transfer(msg.sender, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Gets the balance of the specified address.\\n    * @param _owner The address to query the the balance of.\\n    * @return An uint representing the amount owned by the passed address.\\n    */\\n    function balanceOf(address _owner) public constant returns (uint balance) {\\n        return balances[_owner];\\n    }\\n\\n}\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * @dev https://github.com/ethereum/EIPs/issues/20\\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n */\\ncontract StandardToken is BasicToken, ERC20 {\\n\\n    mapping (address => mapping (address => uint)) public allowed;\\n\\n    uint public constant MAX_UINT = 2**256 - 1;\\n\\n    /**\\n    * @dev Transfer tokens from one address to another\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\\n        var _allowance = allowed[_from][msg.sender];\\n\\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\\n        // if (_value > _allowance) throw;\\n\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        if (_allowance < MAX_UINT) {\\n            allowed[_from][msg.sender] = _allowance.sub(_value);\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[_from] = balances[_from].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(_from, owner, fee);\\n        }\\n        Transfer(_from, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\\n\\n        allowed[msg.sender][_spender] = _value;\\n        Approval(msg.sender, _spender, _value);\\n    }\\n\\n    /**\\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\\n    * @param _owner address The address which owns the funds.\\n    * @param _spender address The address which will spend the funds.\\n    * @return A uint specifying the amount of tokens still available for the spender.\\n    */\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n}\\n\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Ownable {\\n  event Pause();\\n  event Unpause();\\n\\n  bool public paused = false;\\n\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\n   */\\n  modifier whenNotPaused() {\\n    require(!paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is paused.\\n   */\\n  modifier whenPaused() {\\n    require(paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev called by the owner to pause, triggers stopped state\\n   */\\n  function pause() onlyOwner whenNotPaused public {\\n    paused = true;\\n    Pause();\\n  }\\n\\n  /**\\n   * @dev called by the owner to unpause, returns to normal state\\n   */\\n  function unpause() onlyOwner whenPaused public {\\n    paused = false;\\n    Unpause();\\n  }\\n}\\n\\ncontract BlackList is Ownable, BasicToken {\\n\\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\\n    function getBlackListStatus(address _maker) external constant returns (bool) {\\n        return isBlackListed[_maker];\\n    }\\n\\n    function getOwner() external constant returns (address) {\\n        return owner;\\n    }\\n\\n    mapping (address => bool) public isBlackListed;\\n    \\n    function addBlackList (address _evilUser) public onlyOwner {\\n        isBlackListed[_evilUser] = true;\\n        AddedBlackList(_evilUser);\\n    }\\n\\n    function removeBlackList (address _clearedUser) public onlyOwner {\\n        isBlackListed[_clearedUser] = false;\\n        RemovedBlackList(_clearedUser);\\n    }\\n\\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\\n        require(isBlackListed[_blackListedUser]);\\n        uint dirtyFunds = balanceOf(_blackListedUser);\\n        balances[_blackListedUser] = 0;\\n        _totalSupply -= dirtyFunds;\\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\\n    }\\n\\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\\n\\n    event AddedBlackList(address _user);\\n\\n    event RemovedBlackList(address _user);\\n\\n}\\n\\ncontract UpgradedStandardToken is StandardToken{\\n    // those methods are called by the legacy contract\\n    // and they must ensure msg.sender to be the contract address\\n    function transferByLegacy(address from, address to, uint value) public;\\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\\n    function approveByLegacy(address from, address spender, uint value) public;\\n}\\n\\ncontract TetherToken is Pausable, StandardToken, BlackList {\\n\\n    string public name;\\n    string public symbol;\\n    uint public decimals;\\n    address public upgradedAddress;\\n    bool public deprecated;\\n\\n    //  The contract can be initialized with a number of tokens\\n    //  All the tokens are deposited to the owner address\\n    //\\n    // @param _balance Initial supply of the contract\\n    // @param _name Token Name\\n    // @param _symbol Token symbol\\n    // @param _decimals Token decimals\\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\\n        _totalSupply = _initialSupply;\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n        balances[owner] = _initialSupply;\\n        deprecated = false;\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transfer(address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[msg.sender]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\\n        } else {\\n            return super.transfer(_to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[_from]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\\n        } else {\\n            return super.transferFrom(_from, _to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function balanceOf(address who) public constant returns (uint) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\\n        } else {\\n            return super.balanceOf(who);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\\n        } else {\\n            return super.approve(_spender, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\\n        } else {\\n            return super.allowance(_owner, _spender);\\n        }\\n    }\\n\\n    // deprecate current contract in favour of a new one\\n    function deprecate(address _upgradedAddress) public onlyOwner {\\n        deprecated = true;\\n        upgradedAddress = _upgradedAddress;\\n        Deprecate(_upgradedAddress);\\n    }\\n\\n    // deprecate current contract if favour of a new one\\n    function totalSupply() public constant returns (uint) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).totalSupply();\\n        } else {\\n            return _totalSupply;\\n        }\\n    }\\n\\n    // Issue a new amount of tokens\\n    // these tokens are deposited into the owner address\\n    //\\n    // @param _amount Number of tokens to be issued\\n    function issue(uint amount) public onlyOwner {\\n        require(_totalSupply + amount > _totalSupply);\\n        require(balances[owner] + amount > balances[owner]);\\n\\n        balances[owner] += amount;\\n        _totalSupply += amount;\\n        Issue(amount);\\n    }\\n\\n    // Redeem tokens.\\n    // These tokens are withdrawn from the owner address\\n    // if the balance must be enough to cover the redeem\\n    // or the call will fail.\\n    // @param _amount Number of tokens to be issued\\n    function redeem(uint amount) public onlyOwner {\\n        require(_totalSupply >= amount);\\n        require(balances[owner] >= amount);\\n\\n        _totalSupply -= amount;\\n        balances[owner] -= amount;\\n        Redeem(amount);\\n    }\\n\\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\\n        require(newBasisPoints < 20);\\n        require(newMaxFee < 50);\\n\\n        basisPointsRate = newBasisPoints;\\n        maximumFee = newMaxFee.mul(10**decimals);\\n\\n        Params(basisPointsRate, maximumFee);\\n    }\\n\\n    // Called when new token are issued\\n    event Issue(uint amount);\\n\\n    // Called when tokens are redeemed\\n    event Redeem(uint amount);\\n\\n    // Called when contract is deprecated\\n    event Deprecate(address newAddress);\\n\\n    // Called if contract ever adds fees\\n    event Params(uint feeBasisPoints, uint maxFee);\\n}\",\"keccak256\":\"0x334636311066f7e833a950d3100859886a9afb77ecf2702b0320dca164ec88cc\"}},\"version\":1}",
          "userdoc": {
            "methods": {
              "getBlackListStatus(address)": {
                "notice": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////"
              }
            }
          }
        },
        "UpgradedStandardToken": {
          "abi": [
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_spender",
                  "type": "address"
                },
                {
                  "name": "_value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_from",
                  "type": "address"
                },
                {
                  "name": "_to",
                  "type": "address"
                },
                {
                  "name": "_value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "balances",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "maximumFee",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "_totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "address"
                },
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowed",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "from",
                  "type": "address"
                },
                {
                  "name": "to",
                  "type": "address"
                },
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferByLegacy",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "sender",
                  "type": "address"
                },
                {
                  "name": "from",
                  "type": "address"
                },
                {
                  "name": "spender",
                  "type": "address"
                },
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFromByLegacy",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_to",
                  "type": "address"
                },
                {
                  "name": "_value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "from",
                  "type": "address"
                },
                {
                  "name": "spender",
                  "type": "address"
                },
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approveByLegacy",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "_owner",
                  "type": "address"
                },
                {
                  "name": "_spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "name": "remaining",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "basisPointsRate",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "MAX_UINT",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            }
          ],
          "devdoc": {
            "methods": {
              "allowance(address,address)": {
                "details": "Function to check the amount of tokens than an owner allowed to a spender.",
                "params": {
                  "_owner": "address The address which owns the funds.",
                  "_spender": "address The address which will spend the funds."
                },
                "return": "A uint specifying the amount of tokens still available for the spender."
              },
              "approve(address,uint256)": {
                "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.",
                "params": {
                  "_spender": "The address which will spend the funds.",
                  "_value": "The amount of tokens to be spent."
                }
              },
              "balanceOf(address)": {
                "details": "Gets the balance of the specified address.",
                "params": {
                  "_owner": "The address to query the the balance of."
                },
                "return": "An uint representing the amount owned by the passed address."
              },
              "transfer(address,uint256)": {
                "details": "transfer token for a specified address",
                "params": {
                  "_to": "The address to transfer to.",
                  "_value": "The amount to be transferred."
                }
              },
              "transferFrom(address,address,uint256)": {
                "details": "Transfer tokens from one address to another",
                "params": {
                  "_from": "address The address which you want to send tokens from",
                  "_to": "address The address which you want to transfer to",
                  "_value": "uint the amount of tokens to be transferred"
                }
              },
              "transferOwnership(address)": {
                "details": "Allows the current owner to transfer control of the contract to a newOwner.",
                "params": {
                  "newOwner": "The address to transfer ownership to."
                }
              }
            }
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "MAX_UINT()": "e5b5019a",
              "_totalSupply()": "3eaaf86b",
              "allowance(address,address)": "dd62ed3e",
              "allowed(address,address)": "5c658165",
              "approve(address,uint256)": "095ea7b3",
              "approveByLegacy(address,address,uint256)": "aee92d33",
              "balanceOf(address)": "70a08231",
              "balances(address)": "27e235e3",
              "basisPointsRate()": "dd644f72",
              "maximumFee()": "35390714",
              "owner()": "8da5cb5b",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferByLegacy(address,address,uint256)": "6e18980a",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferFromByLegacy(address,address,address,uint256)": "8b477adb",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "",
          "userdoc": {
            "methods": {}
          }
        }
      }
    },
    "sources": {
      "contracts/test/TetherToken.sol": {
        "ast": {
          "absolutePath": "contracts/test/TetherToken.sol",
          "exportedSymbols": {
            "BasicToken": [
              347
            ],
            "BlackList": [
              717
            ],
            "ERC20": [
              205
            ],
            "ERC20Basic": [
              169
            ],
            "Ownable": [
              139
            ],
            "Pausable": [
              603
            ],
            "SafeMath": [
              97
            ],
            "StandardToken": [
              546
            ],
            "TetherToken": [
              1142
            ],
            "UpgradedStandardToken": [
              749
            ]
          },
          "id": 1143,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.4",
                ".17"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
              "fullyImplemented": true,
              "id": 97,
              "linearizedBaseContracts": [
                97
              ],
              "name": "SafeMath",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 33,
                    "nodeType": "Block",
                    "src": "238:134:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 12,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "252:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 11,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "257:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "252:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 16,
                        "nodeType": "IfStatement",
                        "src": "248:45:0",
                        "trueBody": {
                          "id": 15,
                          "nodeType": "Block",
                          "src": "260:33:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 13,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "281:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 9,
                              "id": 14,
                              "nodeType": "Return",
                              "src": "274:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          18
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 18,
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "scope": 34,
                            "src": "302:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 17,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "302:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 22,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 21,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 19,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "314:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 20,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "318:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "314:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "302:17:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 28,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 26,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 24,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "336:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 25,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3,
                                  "src": "340:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "336:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 27,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5,
                                "src": "345:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "336:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 23,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1162,
                            "src": "329:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "329:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30,
                        "nodeType": "ExpressionStatement",
                        "src": "329:18:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 31,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "364:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 9,
                        "id": 32,
                        "nodeType": "Return",
                        "src": "357:8:0"
                      }
                    ]
                  },
                  "id": 34,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "mul",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 34,
                        "src": "184:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "184:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 5,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 34,
                        "src": "195:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "195:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "183:22:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 8,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 34,
                        "src": "229:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "229:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "228:9:0"
                  },
                  "scope": 97,
                  "src": "171:201:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 51,
                    "nodeType": "Block",
                    "src": "445:216:0",
                    "statements": [
                      {
                        "assignments": [
                          44
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 44,
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "scope": 52,
                            "src": "533:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 43,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "533:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 48,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 45,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "545:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 46,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "549:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "545:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "533:17:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 49,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "653:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 42,
                        "id": 50,
                        "nodeType": "Return",
                        "src": "646:8:0"
                      }
                    ]
                  },
                  "id": 52,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "div",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 39,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 36,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 52,
                        "src": "391:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 35,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "391:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 38,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 52,
                        "src": "402:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 37,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "402:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "390:22:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 42,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 41,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 52,
                        "src": "436:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 40,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "436:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "435:9:0"
                  },
                  "scope": 97,
                  "src": "378:283:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 71,
                    "nodeType": "Block",
                    "src": "734:53:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 64,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 62,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56,
                                "src": "751:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 63,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54,
                                "src": "756:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "751:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 61,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1162,
                            "src": "744:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "744:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66,
                        "nodeType": "ExpressionStatement",
                        "src": "744:14:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 67,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "775:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 68,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "779:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "775:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 60,
                        "id": 70,
                        "nodeType": "Return",
                        "src": "768:12:0"
                      }
                    ]
                  },
                  "id": 72,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "sub",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 57,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 54,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 72,
                        "src": "680:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 53,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "680:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 56,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 72,
                        "src": "691:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "691:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "679:22:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 59,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 72,
                        "src": "725:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 58,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "725:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "724:9:0"
                  },
                  "scope": 97,
                  "src": "667:120:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 95,
                    "nodeType": "Block",
                    "src": "860:76:0",
                    "statements": [
                      {
                        "assignments": [
                          82
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 82,
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "scope": 96,
                            "src": "870:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 81,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "870:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 86,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 83,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "882:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 84,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "886:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "882:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "870:17:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 90,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 88,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82,
                                "src": "904:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 89,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74,
                                "src": "909:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "904:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 87,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1162,
                            "src": "897:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "897:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 92,
                        "nodeType": "ExpressionStatement",
                        "src": "897:14:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 93,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "928:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 80,
                        "id": 94,
                        "nodeType": "Return",
                        "src": "921:8:0"
                      }
                    ]
                  },
                  "id": 96,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "add",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 77,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 74,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "806:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 73,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "806:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 76,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "817:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 75,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "817:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "805:22:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 80,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 79,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "851:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 78,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "851:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "850:9:0"
                  },
                  "scope": 97,
                  "src": "793:143:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                }
              ],
              "scope": 1143,
              "src": "148:790:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": "@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".",
              "fullyImplemented": true,
              "id": 139,
              "linearizedBaseContracts": [
                139
              ],
              "name": "Ownable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 99,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "1153:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 107,
                    "nodeType": "Block",
                    "src": "1333:35:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 102,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "1343:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 103,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1145,
                              "src": "1351:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1351:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1343:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 106,
                        "nodeType": "ExpressionStatement",
                        "src": "1343:18:0"
                      }
                    ]
                  },
                  "id": 108,
                  "implemented": true,
                  "isConstructor": true,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "Ownable",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1323:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 101,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1333:0:0"
                  },
                  "scope": 139,
                  "src": "1307:61:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 118,
                    "nodeType": "Block",
                    "src": "1479:56:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 111,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1145,
                                  "src": "1497:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1497:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 113,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99,
                                "src": "1511:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1497:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 110,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1163,
                            "src": "1489:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1489:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 116,
                        "nodeType": "ExpressionStatement",
                        "src": "1489:28:0"
                      },
                      {
                        "id": 117,
                        "nodeType": "PlaceholderStatement",
                        "src": "1527:1:0"
                      }
                    ]
                  },
                  "id": 119,
                  "name": "onlyOwner",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 109,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1476:2:0"
                  },
                  "src": "1458:77:0",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 137,
                    "nodeType": "Block",
                    "src": "1765:85:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 126,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "1779:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1799:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1791:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1791:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1779:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 136,
                        "nodeType": "IfStatement",
                        "src": "1775:69:0",
                        "trueBody": {
                          "id": 135,
                          "nodeType": "Block",
                          "src": "1803:41:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 133,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 131,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "1817:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 132,
                                  "name": "newOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 121,
                                  "src": "1825:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1817:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 134,
                              "nodeType": "ExpressionStatement",
                              "src": "1817:16:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 138,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 124,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 123,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "1755:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1755:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 121,
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 138,
                        "src": "1730:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1730:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1729:18:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 125,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1765:0:0"
                  },
                  "scope": 139,
                  "src": "1703:147:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                }
              ],
              "scope": 1143,
              "src": "1130:723:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": "@title ERC20Basic\n@dev Simpler version of ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
              "fullyImplemented": false,
              "id": 169,
              "linearizedBaseContracts": [
                169
              ],
              "name": "ERC20Basic",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 141,
                  "name": "_totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "2008:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2008:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "body": null,
                  "id": 146,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 142,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2058:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 144,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2086:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 143,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2086:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2085:6:0"
                  },
                  "scope": 169,
                  "src": "2038:54:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": null,
                  "id": 153,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 149,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 148,
                        "name": "who",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "2116:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 147,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2116:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2115:13:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 152,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 151,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "2154:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 150,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2154:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2153:6:0"
                  },
                  "scope": 169,
                  "src": "2097:63:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": null,
                  "id": 160,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 155,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 160,
                        "src": "2183:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2183:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 157,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 160,
                        "src": "2195:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2195:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2182:24:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2213:0:0"
                  },
                  "scope": 169,
                  "src": "2165:49:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 168,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "indexed": true,
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "2234:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2234:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 164,
                        "indexed": true,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "2256:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 163,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2256:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 166,
                        "indexed": false,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "2276:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2276:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2233:54:0"
                  },
                  "src": "2219:69:0"
                }
              ],
              "scope": 1143,
              "src": "1982:308:0"
            },
            {
              "baseContracts": [
                {
                  "arguments": [],
                  "baseName": {
                    "contractScope": null,
                    "id": 170,
                    "name": "ERC20Basic",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 169,
                    "src": "2399:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$169",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "id": 171,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2399:10:0"
                }
              ],
              "contractDependencies": [
                169
              ],
              "contractKind": "contract",
              "documentation": "@title ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
              "fullyImplemented": false,
              "id": 205,
              "linearizedBaseContracts": [
                205,
                169
              ],
              "name": "ERC20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "id": 180,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 173,
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2435:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2435:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 175,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2450:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 174,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2450:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2434:32:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 179,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 178,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2492:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 177,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2492:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2491:6:0"
                  },
                  "scope": 205,
                  "src": "2416:82:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": null,
                  "id": 189,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 182,
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "2525:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 181,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2525:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 184,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "2539:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 183,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2539:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 186,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "2551:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 185,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2551:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2524:38:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 188,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2569:0:0"
                  },
                  "scope": 205,
                  "src": "2503:67:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": null,
                  "id": 196,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 191,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "2592:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 190,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2592:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 193,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "2609:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2609:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2591:29:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2627:0:0"
                  },
                  "scope": 205,
                  "src": "2575:53:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 204,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 203,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 198,
                        "indexed": true,
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 204,
                        "src": "2648:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2648:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 200,
                        "indexed": true,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 204,
                        "src": "2671:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2671:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 202,
                        "indexed": false,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 204,
                        "src": "2696:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 201,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2696:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2647:60:0"
                  },
                  "src": "2633:75:0"
                }
              ],
              "scope": 1143,
              "src": "2381:329:0"
            },
            {
              "baseContracts": [
                {
                  "arguments": [],
                  "baseName": {
                    "contractScope": null,
                    "id": 206,
                    "name": "Ownable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 139,
                    "src": "2825:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ownable_$139",
                      "typeString": "contract Ownable"
                    }
                  },
                  "id": 207,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2825:7:0"
                },
                {
                  "arguments": [],
                  "baseName": {
                    "contractScope": null,
                    "id": 208,
                    "name": "ERC20Basic",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 169,
                    "src": "2834:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$169",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "id": 209,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2834:10:0"
                }
              ],
              "contractDependencies": [
                139,
                169
              ],
              "contractKind": "contract",
              "documentation": "@title Basic token\n@dev Basic version of StandardToken, with no allowances.",
              "fullyImplemented": false,
              "id": 347,
              "linearizedBaseContracts": [
                347,
                169,
                139
              ],
              "name": "BasicToken",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 212,
                  "libraryName": {
                    "contractScope": null,
                    "id": 210,
                    "name": "SafeMath",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 97,
                    "src": "2857:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SafeMath_$97",
                      "typeString": "library SafeMath"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "2851:24:0",
                  "typeName": {
                    "id": 211,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2870:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "constant": false,
                  "id": 216,
                  "name": "balances",
                  "nodeType": "VariableDeclaration",
                  "scope": 347,
                  "src": "2881:40:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 215,
                    "keyType": {
                      "id": 213,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2889:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2881:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 214,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2900:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 219,
                  "name": "basisPointsRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 347,
                  "src": "3006:31:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3006:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3036:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 222,
                  "name": "maximumFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 347,
                  "src": "3043:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3043:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3068:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 239,
                    "nodeType": "Block",
                    "src": "3178:66:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "3196:29:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 233,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 227,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1145,
                                          "src": "3198:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 228,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "data",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "3198:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_calldata_ptr",
                                          "typeString": "bytes calldata"
                                        }
                                      },
                                      "id": 229,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "3198:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 232,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 230,
                                        "name": "size",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 224,
                                        "src": "3216:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "34",
                                        "id": 231,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3223:1:0",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_4_by_1",
                                          "typeString": "int_const 4"
                                        },
                                        "value": "4"
                                      },
                                      "src": "3216:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3198:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 234,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3197:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 226,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1163,
                            "src": "3188:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3188:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 237,
                        "nodeType": "ExpressionStatement",
                        "src": "3188:38:0"
                      },
                      {
                        "id": 238,
                        "nodeType": "PlaceholderStatement",
                        "src": "3236:1:0"
                      }
                    ]
                  },
                  "id": 240,
                  "name": "onlyPayloadSize",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 224,
                        "name": "size",
                        "nodeType": "VariableDeclaration",
                        "scope": 240,
                        "src": "3167:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3167:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3166:11:0"
                  },
                  "src": "3142:102:0",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 333,
                    "nodeType": "Block",
                    "src": "3485:485:0",
                    "statements": [
                      {
                        "assignments": [
                          253
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 253,
                            "name": "fee",
                            "nodeType": "VariableDeclaration",
                            "scope": 334,
                            "src": "3495:8:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 252,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3495:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 262,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3130303030",
                              "id": 260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3540:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 256,
                                      "name": "basisPointsRate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 219,
                                      "src": "3518:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 254,
                                      "name": "_value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 244,
                                      "src": "3507:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 255,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34,
                                    "src": "3507:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 257,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3507:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 258,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3506:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52,
                            "src": "3506:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3506:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3495:51:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 263,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 253,
                            "src": "3560:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 264,
                            "name": "maximumFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "3566:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3560:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 271,
                        "nodeType": "IfStatement",
                        "src": "3556:63:0",
                        "trueBody": {
                          "id": 270,
                          "nodeType": "Block",
                          "src": "3578:41:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 268,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 266,
                                  "name": "fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 253,
                                  "src": "3592:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 267,
                                  "name": "maximumFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 222,
                                  "src": "3598:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3592:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 269,
                              "nodeType": "ExpressionStatement",
                              "src": "3592:16:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          273
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 273,
                            "name": "sendAmount",
                            "nodeType": "VariableDeclaration",
                            "scope": 334,
                            "src": "3628:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 272,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3628:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 278,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 276,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 253,
                              "src": "3657:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 274,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 244,
                              "src": "3646:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72,
                            "src": "3646:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3646:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3628:33:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 279,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "3671:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 282,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 280,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1145,
                                "src": "3680:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3680:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3671:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 288,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 244,
                                "src": "3719:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 283,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 216,
                                  "src": "3694:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 286,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 284,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1145,
                                    "src": "3703:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 285,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3703:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3694:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 72,
                              "src": "3694:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3694:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3671:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 291,
                        "nodeType": "ExpressionStatement",
                        "src": "3671:55:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 292,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "3736:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 294,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 293,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 242,
                              "src": "3745:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3736:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 299,
                                "name": "sendAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 273,
                                "src": "3770:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 295,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 216,
                                  "src": "3752:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 297,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 296,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 242,
                                  "src": "3761:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3752:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 96,
                              "src": "3752:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3752:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3736:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 302,
                        "nodeType": "ExpressionStatement",
                        "src": "3736:45:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 303,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 253,
                            "src": "3795:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3801:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3795:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 325,
                        "nodeType": "IfStatement",
                        "src": "3791:126:0",
                        "trueBody": {
                          "id": 324,
                          "nodeType": "Block",
                          "src": "3804:113:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 306,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 216,
                                    "src": "3818:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 308,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 307,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 99,
                                    "src": "3827:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3818:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 313,
                                      "name": "fee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 253,
                                      "src": "3856:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 309,
                                        "name": "balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 216,
                                        "src": "3836:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 311,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 310,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 99,
                                        "src": "3845:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3836:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 312,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 96,
                                    "src": "3836:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 314,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3836:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3818:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 316,
                              "nodeType": "ExpressionStatement",
                              "src": "3818:42:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 318,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1145,
                                      "src": "3883:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 319,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "3883:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 320,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 99,
                                    "src": "3895:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 321,
                                    "name": "fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 253,
                                    "src": "3902:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 317,
                                  "name": "Transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 168,
                                  "src": "3874:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3874:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 323,
                              "nodeType": "ExpressionStatement",
                              "src": "3874:32:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 327,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1145,
                                "src": "3935:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3935:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 329,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 242,
                              "src": "3947:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 330,
                              "name": "sendAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 273,
                              "src": "3952:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 326,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "3926:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3926:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 332,
                        "nodeType": "ExpressionStatement",
                        "src": "3926:37:0"
                      }
                    ]
                  },
                  "id": 334,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_rational_64_by_1",
                            "typeString": "int_const 64"
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3477:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3332",
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3481:2:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "3477:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_64_by_1",
                            "typeString": "int_const 64"
                          }
                        }
                      ],
                      "id": 250,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 246,
                        "name": "onlyPayloadSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "3461:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_uint256_$",
                          "typeString": "modifier (uint256)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3461:23:0"
                    }
                  ],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 245,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 242,
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "3428:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3428:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 244,
                        "name": "_value",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "3441:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 243,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3441:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3427:26:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 251,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3485:0:0"
                  },
                  "scope": 347,
                  "src": "3410:560:0",
                  "stateMutability": "nonpayable",
                  "superFunction": 160,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 345,
                    "nodeType": "Block",
                    "src": "4255:40:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 341,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "4272:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 343,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 342,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 336,
                            "src": "4281:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4272:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 340,
                        "id": 344,
                        "nodeType": "Return",
                        "src": "4265:23:0"
                      }
                    ]
                  },
                  "id": 346,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 337,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 336,
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 346,
                        "src": "4200:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 335,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4200:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4199:16:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 340,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 339,
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "scope": 346,
                        "src": "4241:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4241:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4240:14:0"
                  },
                  "scope": 347,
                  "src": "4181:114:0",
                  "stateMutability": "view",
                  "superFunction": 153,
                  "visibility": "public"
                }
              ],
              "scope": 1143,
              "src": "2802:1496:0"
            },
            {
              "baseContracts": [
                {
                  "arguments": [],
                  "baseName": {
                    "contractScope": null,
                    "id": 348,
                    "name": "BasicToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 347,
                    "src": "4592:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BasicToken_$347",
                      "typeString": "contract BasicToken"
                    }
                  },
                  "id": 349,
                  "nodeType": "InheritanceSpecifier",
                  "src": "4592:10:0"
                },
                {
                  "arguments": [],
                  "baseName": {
                    "contractScope": null,
                    "id": 350,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 205,
                    "src": "4604:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$205",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 351,
                  "nodeType": "InheritanceSpecifier",
                  "src": "4604:5:0"
                }
              ],
              "contractDependencies": [
                139,
                169,
                205,
                347
              ],
              "contractKind": "contract",
              "documentation": "@title Standard ERC20 token\n * @dev Implementation of the basic standard token.\n@dev https://github.com/ethereum/EIPs/issues/20\n@dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol",
              "fullyImplemented": false,
              "id": 546,
              "linearizedBaseContracts": [
                546,
                205,
                347,
                169,
                139
              ],
              "name": "StandardToken",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 357,
                  "name": "allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "4617:61:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 356,
                    "keyType": {
                      "id": 352,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4626:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "4617:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueType": {
                      "id": 355,
                      "keyType": {
                        "id": 353,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4646:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "4637:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueType": {
                        "id": 354,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4657:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 364,
                  "name": "MAX_UINT",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "4685:42:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4685:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                      "typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                        "typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
                      },
                      "id": 361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4717:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "323536",
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4720:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_256_by_1",
                          "typeString": "int_const 256"
                        },
                        "value": "256"
                      },
                      "src": "4717:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                        "typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4726:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4717:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                      "typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 480,
                    "nodeType": "Block",
                    "src": "5103:786:0",
                    "statements": [
                      {
                        "assignments": [
                          378
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 378,
                            "name": "_allowance",
                            "nodeType": "VariableDeclaration",
                            "scope": 481,
                            "src": "5113:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": null,
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 385,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 379,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
                              "src": "5130:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 381,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 380,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "5138:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5130:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 384,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 382,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1145,
                              "src": "5145:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5145:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5130:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5113:43:0"
                      },
                      {
                        "assignments": [
                          387
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 387,
                            "name": "fee",
                            "nodeType": "VariableDeclaration",
                            "scope": 481,
                            "src": "5322:8:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 386,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5322:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 396,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3130303030",
                              "id": 394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5367:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 390,
                                      "name": "basisPointsRate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 219,
                                      "src": "5345:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 388,
                                      "name": "_value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 370,
                                      "src": "5334:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 389,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34,
                                    "src": "5334:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 391,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5334:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 392,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5333:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52,
                            "src": "5333:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5333:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5322:51:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 397,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 387,
                            "src": "5387:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 398,
                            "name": "maximumFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "5393:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5387:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 405,
                        "nodeType": "IfStatement",
                        "src": "5383:63:0",
                        "trueBody": {
                          "id": 404,
                          "nodeType": "Block",
                          "src": "5405:41:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 400,
                                  "name": "fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 387,
                                  "src": "5419:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 401,
                                  "name": "maximumFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 222,
                                  "src": "5425:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5419:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 403,
                              "nodeType": "ExpressionStatement",
                              "src": "5419:16:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 406,
                            "name": "_allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "5459:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 407,
                            "name": "MAX_UINT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 364,
                            "src": "5472:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5459:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 422,
                        "nodeType": "IfStatement",
                        "src": "5455:103:0",
                        "trueBody": {
                          "id": 421,
                          "nodeType": "Block",
                          "src": "5482:76:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 409,
                                      "name": "allowed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 357,
                                      "src": "5496:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(address => uint256))"
                                      }
                                    },
                                    "id": 413,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 410,
                                      "name": "_from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 366,
                                      "src": "5504:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5496:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 414,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 411,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1145,
                                      "src": "5511:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 412,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "5511:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5496:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 417,
                                      "name": "_value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 370,
                                      "src": "5540:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 415,
                                      "name": "_allowance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 378,
                                      "src": "5525:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 416,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 72,
                                    "src": "5525:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 418,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5525:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5496:51:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 420,
                              "nodeType": "ExpressionStatement",
                              "src": "5496:51:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          424
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 424,
                            "name": "sendAmount",
                            "nodeType": "VariableDeclaration",
                            "scope": 481,
                            "src": "5567:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 423,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5567:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 429,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 427,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 387,
                              "src": "5596:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 425,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 370,
                              "src": "5585:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72,
                            "src": "5585:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5585:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5567:33:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 430,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "5610:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 432,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 431,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "5619:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5610:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 437,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 370,
                                "src": "5648:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 433,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 216,
                                  "src": "5628:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 435,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 434,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 366,
                                  "src": "5637:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5628:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 72,
                              "src": "5628:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5628:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5610:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 440,
                        "nodeType": "ExpressionStatement",
                        "src": "5610:45:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 441,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "5665:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 443,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 442,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 368,
                              "src": "5674:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5665:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 448,
                                "name": "sendAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 424,
                                "src": "5699:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 444,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 216,
                                  "src": "5681:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 446,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 445,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 368,
                                  "src": "5690:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5681:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 96,
                              "src": "5681:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5681:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5665:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 451,
                        "nodeType": "ExpressionStatement",
                        "src": "5665:45:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 452,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 387,
                            "src": "5724:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5730:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5724:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 473,
                        "nodeType": "IfStatement",
                        "src": "5720:121:0",
                        "trueBody": {
                          "id": 472,
                          "nodeType": "Block",
                          "src": "5733:108:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 464,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 455,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 216,
                                    "src": "5747:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 457,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 456,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 99,
                                    "src": "5756:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5747:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 462,
                                      "name": "fee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 387,
                                      "src": "5785:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 458,
                                        "name": "balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 216,
                                        "src": "5765:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 460,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 459,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 99,
                                        "src": "5774:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5765:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 461,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 96,
                                    "src": "5765:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 463,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5765:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5747:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 465,
                              "nodeType": "ExpressionStatement",
                              "src": "5747:42:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 467,
                                    "name": "_from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 366,
                                    "src": "5812:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 468,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 99,
                                    "src": "5819:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 469,
                                    "name": "fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 387,
                                    "src": "5826:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 466,
                                  "name": "Transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 168,
                                  "src": "5803:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5803:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 471,
                              "nodeType": "ExpressionStatement",
                              "src": "5803:27:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 475,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "5859:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 476,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 368,
                              "src": "5866:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 477,
                              "name": "sendAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 424,
                              "src": "5871:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 474,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "5850:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5850:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 479,
                        "nodeType": "ExpressionStatement",
                        "src": "5850:32:0"
                      }
                    ]
                  },
                  "id": 481,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_rational_96_by_1",
                            "typeString": "int_const 96"
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "33",
                            "id": 373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5095:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3332",
                            "id": 374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5099:2:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "5095:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_96_by_1",
                            "typeString": "int_const 96"
                          }
                        }
                      ],
                      "id": 376,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 372,
                        "name": "onlyPayloadSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "5079:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_uint256_$",
                          "typeString": "modifier (uint256)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5079:23:0"
                    }
                  ],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 371,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 366,
                        "name": "_from",
                        "nodeType": "VariableDeclaration",
                        "scope": 481,
                        "src": "5031:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 365,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5031:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 368,
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 481,
                        "src": "5046:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 367,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5046:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 370,
                        "name": "_value",
                        "nodeType": "VariableDeclaration",
                        "scope": 481,
                        "src": "5059:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 369,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5059:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5030:41:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 377,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5103:0:0"
                  },
                  "scope": 546,
                  "src": "5009:880:0",
                  "stateMutability": "nonpayable",
                  "superFunction": 189,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 528,
                    "nodeType": "Block",
                    "src": "6208:484:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "6531:56:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 507,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "components": [
                                        {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 496,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "id": 494,
                                            "name": "_value",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 485,
                                            "src": "6534:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "!=",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "30",
                                            "id": 495,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "6544:1:0",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          },
                                          "src": "6534:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        }
                                      ],
                                      "id": 497,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "6533:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "components": [
                                        {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 505,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 498,
                                                "name": "allowed",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 357,
                                                "src": "6551:7:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                                  "typeString": "mapping(address => mapping(address => uint256))"
                                                }
                                              },
                                              "id": 501,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 499,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1145,
                                                  "src": "6559:3:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 500,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "6559:10:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "6551:19:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                "typeString": "mapping(address => uint256)"
                                              }
                                            },
                                            "id": 503,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "id": 502,
                                              "name": "_spender",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 483,
                                              "src": "6571:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6551:29:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "!=",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "30",
                                            "id": 504,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "6584:1:0",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          },
                                          "src": "6551:34:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        }
                                      ],
                                      "id": 506,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "6550:36:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "6533:53:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 508,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6532:55:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 493,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1163,
                            "src": "6523:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6523:65:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 511,
                        "nodeType": "ExpressionStatement",
                        "src": "6523:65:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 512,
                                "name": "allowed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 357,
                                "src": "6599:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 516,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 513,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1145,
                                  "src": "6607:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 514,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "6607:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6599:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 517,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 515,
                              "name": "_spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 483,
                              "src": "6619:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6599:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 518,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 485,
                            "src": "6631:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6599:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 520,
                        "nodeType": "ExpressionStatement",
                        "src": "6599:38:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 522,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1145,
                                "src": "6656:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6656:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 524,
                              "name": "_spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 483,
                              "src": "6668:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 525,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 485,
                              "src": "6678:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 521,
                            "name": "Approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "6647:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6647:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 527,
                        "nodeType": "ExpressionStatement",
                        "src": "6647:38:0"
                      }
                    ]
                  },
                  "id": 529,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_rational_64_by_1",
                            "typeString": "int_const 64"
                          },
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6200:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3332",
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6204:2:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "6200:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_64_by_1",
                            "typeString": "int_const 64"
                          }
                        }
                      ],
                      "id": 491,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 487,
                        "name": "onlyPayloadSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "6184:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_uint256_$",
                          "typeString": "modifier (uint256)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6184:23:0"
                    }
                  ],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 486,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 483,
                        "name": "_spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "6146:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 482,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6146:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 485,
                        "name": "_value",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "6164:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6164:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6145:31:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 492,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6208:0:0"
                  },
                  "scope": 546,
                  "src": "6129:563:0",
                  "stateMutability": "nonpayable",
                  "superFunction": 196,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 544,
                    "nodeType": "Block",
                    "src": "7111:49:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 538,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
                              "src": "7128:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 540,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 539,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 531,
                              "src": "7136:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7128:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 542,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 541,
                            "name": "_spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 533,
                            "src": "7144:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7128:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 537,
                        "id": 543,
                        "nodeType": "Return",
                        "src": "7121:32:0"
                      }
                    ]
                  },
                  "id": 545,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 534,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 531,
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 545,
                        "src": "7036:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 530,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7036:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 533,
                        "name": "_spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 545,
                        "src": "7052:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 532,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7052:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7035:34:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 536,
                        "name": "remaining",
                        "nodeType": "VariableDeclaration",
                        "scope": 545,
                        "src": "7095:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7095:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7094:16:0"
                  },
                  "scope": 546,
                  "src": "7017:143:0",
                  "stateMutability": "view",
                  "superFunction": 180,
                  "visibility": "public"
                }
              ],
              "scope": 1143,
              "src": "4566:2597:0"
            },
            {
              "baseContracts": [
                {
                  "arguments": [],
                  "baseName": {
                    "contractScope": null,
                    "id": 547,
                    "name": "Ownable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 139,
                    "src": "7300:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ownable_$139",
                      "typeString": "contract Ownable"
                    }
                  },
                  "id": 548,
                  "nodeType": "InheritanceSpecifier",
                  "src": "7300:7:0"
                }
              ],
              "contractDependencies": [
                139
              ],
              "contractKind": "contract",
              "documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
              "fullyImplemented": true,
              "id": 603,
              "linearizedBaseContracts": [
                603,
                139
              ],
              "name": "Pausable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 550,
                  "name": "Pause",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 549,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7323:2:0"
                  },
                  "src": "7312:14:0"
                },
                {
                  "anonymous": false,
                  "id": 552,
                  "name": "Unpause",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 551,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7342:2:0"
                  },
                  "src": "7329:16:0"
                },
                {
                  "constant": false,
                  "id": 555,
                  "name": "paused",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "7349:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 553,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7349:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7370:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 563,
                    "nodeType": "Block",
                    "src": "7503:34:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "7517:7:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 558,
                                "name": "paused",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 555,
                                "src": "7518:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 557,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1163,
                            "src": "7509:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7509:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 561,
                        "nodeType": "ExpressionStatement",
                        "src": "7509:16:0"
                      },
                      {
                        "id": 562,
                        "nodeType": "PlaceholderStatement",
                        "src": "7531:1:0"
                      }
                    ]
                  },
                  "id": 564,
                  "name": "whenNotPaused",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 556,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7500:2:0"
                  },
                  "src": "7478:59:0",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 571,
                    "nodeType": "Block",
                    "src": "7656:33:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 567,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 555,
                              "src": "7670:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 566,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1163,
                            "src": "7662:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7662:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 569,
                        "nodeType": "ExpressionStatement",
                        "src": "7662:15:0"
                      },
                      {
                        "id": 570,
                        "nodeType": "PlaceholderStatement",
                        "src": "7683:1:0"
                      }
                    ]
                  },
                  "id": 572,
                  "name": "whenPaused",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 565,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7653:2:0"
                  },
                  "src": "7634:55:0",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 586,
                    "nodeType": "Block",
                    "src": "7816:37:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 579,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 555,
                            "src": "7822:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7831:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "7822:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 582,
                        "nodeType": "ExpressionStatement",
                        "src": "7822:13:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 583,
                            "name": "Pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 550,
                            "src": "7841:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7841:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 585,
                        "nodeType": "ExpressionStatement",
                        "src": "7841:7:0"
                      }
                    ]
                  },
                  "id": 587,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 575,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 574,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "7785:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7785:9:0"
                    },
                    {
                      "arguments": [],
                      "id": 577,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 576,
                        "name": "whenNotPaused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "7795:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7795:13:0"
                    }
                  ],
                  "name": "pause",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 573,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7782:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 578,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7816:0:0"
                  },
                  "scope": 603,
                  "src": "7768:85:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 601,
                    "nodeType": "Block",
                    "src": "7982:40:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 594,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 555,
                            "src": "7988:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7997:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "7988:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 597,
                        "nodeType": "ExpressionStatement",
                        "src": "7988:14:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 598,
                            "name": "Unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 552,
                            "src": "8008:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8008:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 600,
                        "nodeType": "ExpressionStatement",
                        "src": "8008:9:0"
                      }
                    ]
                  },
                  "id": 602,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 590,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 589,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "7954:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7954:9:0"
                    },
                    {
                      "arguments": [],
                      "id": 592,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 591,
                        "name": "whenPaused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 572,
                        "src": "7964:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7964:10:0"
                    }
                  ],
                  "name": "unpause",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 588,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7951:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 593,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7982:0:0"
                  },
                  "scope": 603,
                  "src": "7935:87:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                }
              ],
              "scope": 1143,
              "src": "7279:745:0"
            },
            {
              "baseContracts": [
                {
                  "arguments": [],
                  "baseName": {
                    "contractScope": null,
                    "id": 604,
                    "name": "Ownable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 139,
                    "src": "8048:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ownable_$139",
                      "typeString": "contract Ownable"
                    }
                  },
                  "id": 605,
                  "nodeType": "InheritanceSpecifier",
                  "src": "8048:7:0"
                },
                {
                  "arguments": [],
                  "baseName": {
                    "contractScope": null,
                    "id": 606,
                    "name": "BasicToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 347,
                    "src": "8057:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BasicToken_$347",
                      "typeString": "contract BasicToken"
                    }
                  },
                  "id": 607,
                  "nodeType": "InheritanceSpecifier",
                  "src": "8057:10:0"
                }
              ],
              "contractDependencies": [
                139,
                169,
                347
              ],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": false,
              "id": 717,
              "linearizedBaseContracts": [
                717,
                347,
                169,
                139
              ],
              "name": "BlackList",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 618,
                    "nodeType": "Block",
                    "src": "8271:45:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 614,
                            "name": "isBlackListed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 631,
                            "src": "8288:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 616,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 615,
                            "name": "_maker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "8302:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8288:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 613,
                        "id": 617,
                        "nodeType": "Return",
                        "src": "8281:28:0"
                      }
                    ]
                  },
                  "id": 619,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "getBlackListStatus",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 610,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 609,
                        "name": "_maker",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "8222:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8222:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8221:16:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 613,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 612,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "8265:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 611,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8265:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8264:6:0"
                  },
                  "scope": 717,
                  "src": "8194:122:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 626,
                    "nodeType": "Block",
                    "src": "8378:29:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 624,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "8395:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 623,
                        "id": 625,
                        "nodeType": "Return",
                        "src": "8388:12:0"
                      }
                    ]
                  },
                  "id": 627,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "getOwner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 620,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8339:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 623,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 622,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 627,
                        "src": "8369:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 621,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8369:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8368:9:0"
                  },
                  "scope": 717,
                  "src": "8322:85:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "constant": false,
                  "id": 631,
                  "name": "isBlackListed",
                  "nodeType": "VariableDeclaration",
                  "scope": 717,
                  "src": "8413:46:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 630,
                    "keyType": {
                      "id": 628,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8422:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "8413:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 629,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "8433:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 648,
                    "nodeType": "Block",
                    "src": "8529:83:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 638,
                              "name": "isBlackListed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 631,
                              "src": "8539:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 640,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 639,
                              "name": "_evilUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 633,
                              "src": "8553:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8539:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8566:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "8539:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 643,
                        "nodeType": "ExpressionStatement",
                        "src": "8539:31:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 645,
                              "name": "_evilUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 633,
                              "src": "8595:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 644,
                            "name": "AddedBlackList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 712,
                            "src": "8580:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8580:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 647,
                        "nodeType": "ExpressionStatement",
                        "src": "8580:25:0"
                      }
                    ]
                  },
                  "id": 649,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 636,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 635,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "8519:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8519:9:0"
                    }
                  ],
                  "name": "addBlackList",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 634,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 633,
                        "name": "_evilUser",
                        "nodeType": "VariableDeclaration",
                        "scope": 649,
                        "src": "8493:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 632,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8493:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8492:19:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 637,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8529:0:0"
                  },
                  "scope": 717,
                  "src": "8470:142:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 666,
                    "nodeType": "Block",
                    "src": "8683:92:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 656,
                              "name": "isBlackListed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 631,
                              "src": "8693:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 658,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 657,
                              "name": "_clearedUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 651,
                              "src": "8707:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8693:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8723:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "8693:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 661,
                        "nodeType": "ExpressionStatement",
                        "src": "8693:35:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 663,
                              "name": "_clearedUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 651,
                              "src": "8755:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 662,
                            "name": "RemovedBlackList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 716,
                            "src": "8738:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8738:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 665,
                        "nodeType": "ExpressionStatement",
                        "src": "8738:30:0"
                      }
                    ]
                  },
                  "id": 667,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 654,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 653,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "8673:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8673:9:0"
                    }
                  ],
                  "name": "removeBlackList",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 652,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 651,
                        "name": "_clearedUser",
                        "nodeType": "VariableDeclaration",
                        "scope": 667,
                        "src": "8644:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 650,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8644:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8643:22:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 655,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8683:0:0"
                  },
                  "scope": 717,
                  "src": "8618:157:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 701,
                    "nodeType": "Block",
                    "src": "8852:247:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 675,
                                "name": "isBlackListed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 631,
                                "src": "8870:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 677,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 676,
                                "name": "_blackListedUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 669,
                                "src": "8884:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8870:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 674,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1163,
                            "src": "8862:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8862:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 679,
                        "nodeType": "ExpressionStatement",
                        "src": "8862:40:0"
                      },
                      {
                        "assignments": [
                          681
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 681,
                            "name": "dirtyFunds",
                            "nodeType": "VariableDeclaration",
                            "scope": 702,
                            "src": "8912:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 680,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8912:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 685,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 683,
                              "name": "_blackListedUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 669,
                              "src": "8940:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 682,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              346
                            ],
                            "referencedDeclaration": 346,
                            "src": "8930:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8930:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8912:45:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 686,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "8967:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 688,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 687,
                              "name": "_blackListedUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 669,
                              "src": "8976:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8967:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8996:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8967:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 691,
                        "nodeType": "ExpressionStatement",
                        "src": "8967:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 692,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "9007:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 693,
                            "name": "dirtyFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 681,
                            "src": "9023:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9007:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 695,
                        "nodeType": "ExpressionStatement",
                        "src": "9007:26:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 697,
                              "name": "_blackListedUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 669,
                              "src": "9063:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 698,
                              "name": "dirtyFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 681,
                              "src": "9081:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 696,
                            "name": "DestroyedBlackFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 708,
                            "src": "9043:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9043:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 700,
                        "nodeType": "ExpressionStatement",
                        "src": "9043:49:0"
                      }
                    ]
                  },
                  "id": 702,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 672,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 671,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "8842:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8842:9:0"
                    }
                  ],
                  "name": "destroyBlackFunds",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 670,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 669,
                        "name": "_blackListedUser",
                        "nodeType": "VariableDeclaration",
                        "scope": 702,
                        "src": "8809:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 668,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8809:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8808:26:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 673,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8852:0:0"
                  },
                  "scope": 717,
                  "src": "8781:318:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 708,
                  "name": "DestroyedBlackFunds",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 707,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 704,
                        "indexed": false,
                        "name": "_blackListedUser",
                        "nodeType": "VariableDeclaration",
                        "scope": 708,
                        "src": "9131:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 703,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9131:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 706,
                        "indexed": false,
                        "name": "_balance",
                        "nodeType": "VariableDeclaration",
                        "scope": 708,
                        "src": "9157:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 705,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9157:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9130:41:0"
                  },
                  "src": "9105:67:0"
                },
                {
                  "anonymous": false,
                  "id": 712,
                  "name": "AddedBlackList",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 711,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 710,
                        "indexed": false,
                        "name": "_user",
                        "nodeType": "VariableDeclaration",
                        "scope": 712,
                        "src": "9199:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 709,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9199:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9198:15:0"
                  },
                  "src": "9178:36:0"
                },
                {
                  "anonymous": false,
                  "id": 716,
                  "name": "RemovedBlackList",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 715,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 714,
                        "indexed": false,
                        "name": "_user",
                        "nodeType": "VariableDeclaration",
                        "scope": 716,
                        "src": "9243:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 713,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9243:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9242:15:0"
                  },
                  "src": "9220:38:0"
                }
              ],
              "scope": 1143,
              "src": "8026:1235:0"
            },
            {
              "baseContracts": [
                {
                  "arguments": [],
                  "baseName": {
                    "contractScope": null,
                    "id": 718,
                    "name": "StandardToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 546,
                    "src": "9297:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StandardToken_$546",
                      "typeString": "contract StandardToken"
                    }
                  },
                  "id": 719,
                  "nodeType": "InheritanceSpecifier",
                  "src": "9297:13:0"
                }
              ],
              "contractDependencies": [
                139,
                169,
                205,
                347,
                546
              ],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": false,
              "id": 749,
              "linearizedBaseContracts": [
                749,
                546,
                205,
                347,
                169,
                139
              ],
              "name": "UpgradedStandardToken",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "id": 728,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "transferByLegacy",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 726,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 721,
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "9463:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 720,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9463:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 723,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "9477:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 722,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9477:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 725,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "9489:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 724,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9489:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9462:38:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 727,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9507:0:0"
                  },
                  "scope": 749,
                  "src": "9437:71:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": null,
                  "id": 739,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "transferFromByLegacy",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 737,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 730,
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 739,
                        "src": "9543:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 729,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9543:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 732,
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 739,
                        "src": "9559:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 731,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9559:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 734,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 739,
                        "src": "9573:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 733,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9573:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 736,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 739,
                        "src": "9590:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 735,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9590:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9542:59:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 738,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9608:0:0"
                  },
                  "scope": 749,
                  "src": "9513:96:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": null,
                  "id": 748,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "approveByLegacy",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 746,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 741,
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 748,
                        "src": "9639:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 740,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9639:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 743,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 748,
                        "src": "9653:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 742,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9653:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 745,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 748,
                        "src": "9670:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 744,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9670:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9638:43:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 747,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9688:0:0"
                  },
                  "scope": 749,
                  "src": "9614:75:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                }
              ],
              "scope": 1143,
              "src": "9263:428:0"
            },
            {
              "baseContracts": [
                {
                  "arguments": [],
                  "baseName": {
                    "contractScope": null,
                    "id": 750,
                    "name": "Pausable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 603,
                    "src": "9717:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pausable_$603",
                      "typeString": "contract Pausable"
                    }
                  },
                  "id": 751,
                  "nodeType": "InheritanceSpecifier",
                  "src": "9717:8:0"
                },
                {
                  "arguments": [],
                  "baseName": {
                    "contractScope": null,
                    "id": 752,
                    "name": "StandardToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 546,
                    "src": "9727:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StandardToken_$546",
                      "typeString": "contract StandardToken"
                    }
                  },
                  "id": 753,
                  "nodeType": "InheritanceSpecifier",
                  "src": "9727:13:0"
                },
                {
                  "arguments": [],
                  "baseName": {
                    "contractScope": null,
                    "id": 754,
                    "name": "BlackList",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 717,
                    "src": "9742:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BlackList_$717",
                      "typeString": "contract BlackList"
                    }
                  },
                  "id": 755,
                  "nodeType": "InheritanceSpecifier",
                  "src": "9742:9:0"
                }
              ],
              "contractDependencies": [
                139,
                169,
                205,
                347,
                546,
                603,
                717
              ],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 1142,
              "linearizedBaseContracts": [
                1142,
                717,
                546,
                205,
                347,
                169,
                603,
                139
              ],
              "name": "TetherToken",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 757,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "9759:18:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string storage ref"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9759:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 759,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "9783:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string storage ref"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9783:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 761,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "9809:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 760,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9809:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 763,
                  "name": "upgradedAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "9835:30:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9835:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 765,
                  "name": "deprecated",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "9871:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9871:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 802,
                    "nodeType": "Block",
                    "src": "10283:194:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 776,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "10293:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 777,
                            "name": "_initialSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "10308:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10293:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 779,
                        "nodeType": "ExpressionStatement",
                        "src": "10293:29:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 780,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 757,
                            "src": "10332:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 781,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 769,
                            "src": "10339:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "10332:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 783,
                        "nodeType": "ExpressionStatement",
                        "src": "10332:12:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 784,
                            "name": "symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 759,
                            "src": "10354:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 785,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 771,
                            "src": "10363:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "10354:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 787,
                        "nodeType": "ExpressionStatement",
                        "src": "10354:16:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 788,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "10380:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 789,
                            "name": "_decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 773,
                            "src": "10391:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10380:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 791,
                        "nodeType": "ExpressionStatement",
                        "src": "10380:20:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 792,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "10410:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 794,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 793,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "10419:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10410:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 795,
                            "name": "_initialSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "10428:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10410:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 797,
                        "nodeType": "ExpressionStatement",
                        "src": "10410:32:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 798,
                            "name": "deprecated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "10452:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10465:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "10452:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 801,
                        "nodeType": "ExpressionStatement",
                        "src": "10452:18:0"
                      }
                    ]
                  },
                  "id": 803,
                  "implemented": true,
                  "isConstructor": true,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "TetherToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 774,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 767,
                        "name": "_initialSupply",
                        "nodeType": "VariableDeclaration",
                        "scope": 803,
                        "src": "10209:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 766,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10209:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 769,
                        "name": "_name",
                        "nodeType": "VariableDeclaration",
                        "scope": 803,
                        "src": "10230:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        "typeName": {
                          "id": 768,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "10230:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string storage pointer"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 771,
                        "name": "_symbol",
                        "nodeType": "VariableDeclaration",
                        "scope": 803,
                        "src": "10244:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        "typeName": {
                          "id": 770,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "10244:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string storage pointer"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 773,
                        "name": "_decimals",
                        "nodeType": "VariableDeclaration",
                        "scope": 803,
                        "src": "10260:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 772,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10260:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10208:67:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 775,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10283:0:0"
                  },
                  "scope": 1142,
                  "src": "10188:289:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 840,
                    "nodeType": "Block",
                    "src": "10624:254:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "10642:26:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 813,
                                  "name": "isBlackListed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 631,
                                  "src": "10643:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 816,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 814,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1145,
                                    "src": "10657:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 815,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "10657:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10643:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 812,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1163,
                            "src": "10634:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10634:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 819,
                        "nodeType": "ExpressionStatement",
                        "src": "10634:35:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 820,
                          "name": "deprecated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "10683:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 838,
                          "nodeType": "Block",
                          "src": "10813:59:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 834,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 805,
                                    "src": "10849:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 835,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 807,
                                    "src": "10854:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 832,
                                    "name": "super",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1184,
                                    "src": "10834:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_super$_TetherToken_$1142",
                                      "typeString": "contract super TetherToken"
                                    }
                                  },
                                  "id": 833,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 334,
                                  "src": "10834:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 836,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10834:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "functionReturnParameters": 811,
                              "id": 837,
                              "nodeType": "Return",
                              "src": "10827:34:0"
                            }
                          ]
                        },
                        "id": 839,
                        "nodeType": "IfStatement",
                        "src": "10679:193:0",
                        "trueBody": {
                          "id": 831,
                          "nodeType": "Block",
                          "src": "10695:112:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 825,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1145,
                                      "src": "10772:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 826,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "10772:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 827,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 805,
                                    "src": "10784:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 828,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 807,
                                    "src": "10789:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 822,
                                        "name": "upgradedAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 763,
                                        "src": "10738:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 821,
                                      "name": "UpgradedStandardToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 749,
                                      "src": "10716:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
                                        "typeString": "type(contract UpgradedStandardToken)"
                                      }
                                    },
                                    "id": 823,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10716:38:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
                                      "typeString": "contract UpgradedStandardToken"
                                    }
                                  },
                                  "id": 824,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transferByLegacy",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 728,
                                  "src": "10716:55:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256) external"
                                  }
                                },
                                "id": 829,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10716:80:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "functionReturnParameters": 811,
                              "id": 830,
                              "nodeType": "Return",
                              "src": "10709:87:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 841,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 810,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 809,
                        "name": "whenNotPaused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "10610:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10610:13:0"
                    }
                  ],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 808,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 805,
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 841,
                        "src": "10577:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 804,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10577:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 807,
                        "name": "_value",
                        "nodeType": "VariableDeclaration",
                        "scope": 841,
                        "src": "10590:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10590:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10576:26:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 811,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10624:0:0"
                  },
                  "scope": 1142,
                  "src": "10559:319:0",
                  "stateMutability": "nonpayable",
                  "superFunction": 334,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 881,
                    "nodeType": "Block",
                    "src": "11044:271:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "11062:21:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 853,
                                  "name": "isBlackListed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 631,
                                  "src": "11063:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 855,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 854,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 843,
                                  "src": "11077:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11063:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 852,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1163,
                            "src": "11054:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11054:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 858,
                        "nodeType": "ExpressionStatement",
                        "src": "11054:30:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 859,
                          "name": "deprecated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "11098:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 879,
                          "nodeType": "Block",
                          "src": "11239:70:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 874,
                                    "name": "_from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 843,
                                    "src": "11279:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 875,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 845,
                                    "src": "11286:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 876,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 847,
                                    "src": "11291:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 872,
                                    "name": "super",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1184,
                                    "src": "11260:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_super$_TetherToken_$1142",
                                      "typeString": "contract super TetherToken"
                                    }
                                  },
                                  "id": 873,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 481,
                                  "src": "11260:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 877,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11260:38:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "functionReturnParameters": 851,
                              "id": 878,
                              "nodeType": "Return",
                              "src": "11253:45:0"
                            }
                          ]
                        },
                        "id": 880,
                        "nodeType": "IfStatement",
                        "src": "11094:215:0",
                        "trueBody": {
                          "id": 871,
                          "nodeType": "Block",
                          "src": "11110:123:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 864,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1145,
                                      "src": "11191:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 865,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "11191:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 866,
                                    "name": "_from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 843,
                                    "src": "11203:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 867,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 845,
                                    "src": "11210:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 868,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 847,
                                    "src": "11215:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 861,
                                        "name": "upgradedAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 763,
                                        "src": "11153:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 860,
                                      "name": "UpgradedStandardToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 749,
                                      "src": "11131:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
                                        "typeString": "type(contract UpgradedStandardToken)"
                                      }
                                    },
                                    "id": 862,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11131:38:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
                                      "typeString": "contract UpgradedStandardToken"
                                    }
                                  },
                                  "id": 863,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transferFromByLegacy",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 739,
                                  "src": "11131:59:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,address,uint256) external"
                                  }
                                },
                                "id": 869,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11131:91:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "functionReturnParameters": 851,
                              "id": 870,
                              "nodeType": "Return",
                              "src": "11124:98:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 882,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 850,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 849,
                        "name": "whenNotPaused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "11030:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11030:13:0"
                    }
                  ],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 848,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 843,
                        "name": "_from",
                        "nodeType": "VariableDeclaration",
                        "scope": 882,
                        "src": "10982:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 842,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10982:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 845,
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 882,
                        "src": "10997:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 844,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10997:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 847,
                        "name": "_value",
                        "nodeType": "VariableDeclaration",
                        "scope": 882,
                        "src": "11010:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11010:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10981:41:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 851,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11044:0:0"
                  },
                  "scope": 1142,
                  "src": "10960:355:0",
                  "stateMutability": "nonpayable",
                  "superFunction": 481,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 905,
                    "nodeType": "Block",
                    "src": "11460:175:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 889,
                          "name": "deprecated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "11474:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 903,
                          "nodeType": "Block",
                          "src": "11577:52:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 900,
                                    "name": "who",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 884,
                                    "src": "11614:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 898,
                                    "name": "super",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1184,
                                    "src": "11598:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_super$_TetherToken_$1142",
                                      "typeString": "contract super TetherToken"
                                    }
                                  },
                                  "id": 899,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 346,
                                  "src": "11598:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 901,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11598:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 888,
                              "id": 902,
                              "nodeType": "Return",
                              "src": "11591:27:0"
                            }
                          ]
                        },
                        "id": 904,
                        "nodeType": "IfStatement",
                        "src": "11470:159:0",
                        "trueBody": {
                          "id": 897,
                          "nodeType": "Block",
                          "src": "11486:85:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 894,
                                    "name": "who",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 884,
                                    "src": "11556:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 891,
                                        "name": "upgradedAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 763,
                                        "src": "11529:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 890,
                                      "name": "UpgradedStandardToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 749,
                                      "src": "11507:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
                                        "typeString": "type(contract UpgradedStandardToken)"
                                      }
                                    },
                                    "id": 892,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11507:38:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
                                      "typeString": "contract UpgradedStandardToken"
                                    }
                                  },
                                  "id": 893,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 346,
                                  "src": "11507:48:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 895,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11507:53:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 888,
                              "id": 896,
                              "nodeType": "Return",
                              "src": "11500:60:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 906,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 885,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 884,
                        "name": "who",
                        "nodeType": "VariableDeclaration",
                        "scope": 906,
                        "src": "11416:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 883,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11416:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11415:13:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 888,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 887,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 906,
                        "src": "11454:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 886,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11454:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11453:6:0"
                  },
                  "scope": 1142,
                  "src": "11397:238:0",
                  "stateMutability": "view",
                  "superFunction": 346,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 938,
                    "nodeType": "Block",
                    "src": "11796:217:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 918,
                          "name": "deprecated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "11810:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 936,
                          "nodeType": "Block",
                          "src": "11944:63:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 932,
                                    "name": "_spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 908,
                                    "src": "11979:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 933,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 910,
                                    "src": "11989:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 930,
                                    "name": "super",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1184,
                                    "src": "11965:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_super$_TetherToken_$1142",
                                      "typeString": "contract super TetherToken"
                                    }
                                  },
                                  "id": 931,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "approve",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 529,
                                  "src": "11965:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 934,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11965:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "functionReturnParameters": 917,
                              "id": 935,
                              "nodeType": "Return",
                              "src": "11958:38:0"
                            }
                          ]
                        },
                        "id": 937,
                        "nodeType": "IfStatement",
                        "src": "11806:201:0",
                        "trueBody": {
                          "id": 929,
                          "nodeType": "Block",
                          "src": "11822:116:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 923,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1145,
                                      "src": "11898:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 924,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "11898:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 925,
                                    "name": "_spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 908,
                                    "src": "11910:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 926,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 910,
                                    "src": "11920:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 920,
                                        "name": "upgradedAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 763,
                                        "src": "11865:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 919,
                                      "name": "UpgradedStandardToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 749,
                                      "src": "11843:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
                                        "typeString": "type(contract UpgradedStandardToken)"
                                      }
                                    },
                                    "id": 921,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11843:38:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
                                      "typeString": "contract UpgradedStandardToken"
                                    }
                                  },
                                  "id": 922,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "approveByLegacy",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 748,
                                  "src": "11843:54:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256) external"
                                  }
                                },
                                "id": 927,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11843:84:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "functionReturnParameters": 917,
                              "id": 928,
                              "nodeType": "Return",
                              "src": "11836:91:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 939,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_rational_64_by_1",
                            "typeString": "int_const 64"
                          },
                          "id": 915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11788:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3332",
                            "id": 914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11792:2:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "11788:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_64_by_1",
                            "typeString": "int_const 64"
                          }
                        }
                      ],
                      "id": 916,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 912,
                        "name": "onlyPayloadSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "11772:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_uint256_$",
                          "typeString": "modifier (uint256)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11772:23:0"
                    }
                  ],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 911,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 908,
                        "name": "_spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 939,
                        "src": "11734:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 907,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11734:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 910,
                        "name": "_value",
                        "nodeType": "VariableDeclaration",
                        "scope": 939,
                        "src": "11752:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 909,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11752:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11733:31:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 917,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11796:0:0"
                  },
                  "scope": 1142,
                  "src": "11717:296:0",
                  "stateMutability": "nonpayable",
                  "superFunction": 529,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 966,
                    "nodeType": "Block",
                    "src": "12189:193:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 948,
                          "name": "deprecated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "12203:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 964,
                          "nodeType": "Block",
                          "src": "12311:65:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 960,
                                    "name": "_owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 941,
                                    "src": "12348:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 961,
                                    "name": "_spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 943,
                                    "src": "12356:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 958,
                                    "name": "super",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1184,
                                    "src": "12332:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_super$_TetherToken_$1142",
                                      "typeString": "contract super TetherToken"
                                    }
                                  },
                                  "id": 959,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 545,
                                  "src": "12332:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view returns (uint256)"
                                  }
                                },
                                "id": 962,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12332:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 947,
                              "id": 963,
                              "nodeType": "Return",
                              "src": "12325:40:0"
                            }
                          ]
                        },
                        "id": 965,
                        "nodeType": "IfStatement",
                        "src": "12199:177:0",
                        "trueBody": {
                          "id": 957,
                          "nodeType": "Block",
                          "src": "12215:90:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 953,
                                    "name": "_owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 941,
                                    "src": "12277:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 954,
                                    "name": "_spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 943,
                                    "src": "12285:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 950,
                                        "name": "upgradedAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 763,
                                        "src": "12250:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 949,
                                      "name": "StandardToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 546,
                                      "src": "12236:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_StandardToken_$546_$",
                                        "typeString": "type(contract StandardToken)"
                                      }
                                    },
                                    "id": 951,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12236:30:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StandardToken_$546",
                                      "typeString": "contract StandardToken"
                                    }
                                  },
                                  "id": 952,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 545,
                                  "src": "12236:40:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 955,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12236:58:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 947,
                              "id": 956,
                              "nodeType": "Return",
                              "src": "12229:65:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 967,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 944,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 941,
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 967,
                        "src": "12114:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 940,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12114:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 943,
                        "name": "_spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 967,
                        "src": "12130:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 942,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12130:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12113:34:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 947,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 946,
                        "name": "remaining",
                        "nodeType": "VariableDeclaration",
                        "scope": 967,
                        "src": "12173:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 945,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12173:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12172:16:0"
                  },
                  "scope": 1142,
                  "src": "12095:287:0",
                  "stateMutability": "view",
                  "superFunction": 545,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 986,
                    "nodeType": "Block",
                    "src": "12507:115:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 974,
                            "name": "deprecated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "12517:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12530:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "12517:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 977,
                        "nodeType": "ExpressionStatement",
                        "src": "12517:17:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 978,
                            "name": "upgradedAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 763,
                            "src": "12544:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 979,
                            "name": "_upgradedAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 969,
                            "src": "12562:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12544:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 981,
                        "nodeType": "ExpressionStatement",
                        "src": "12544:34:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 983,
                              "name": "_upgradedAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 969,
                              "src": "12598:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 982,
                            "name": "Deprecate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1135,
                            "src": "12588:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12588:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 985,
                        "nodeType": "ExpressionStatement",
                        "src": "12588:27:0"
                      }
                    ]
                  },
                  "id": 987,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 972,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 971,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "12497:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12497:9:0"
                    }
                  ],
                  "name": "deprecate",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 970,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 969,
                        "name": "_upgradedAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 987,
                        "src": "12464:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 968,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12464:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12463:26:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 973,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12507:0:0"
                  },
                  "scope": 1142,
                  "src": "12445:177:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1004,
                    "nodeType": "Block",
                    "src": "12739:158:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 992,
                          "name": "deprecated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "12753:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1002,
                          "nodeType": "Block",
                          "src": "12847:44:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1000,
                                "name": "_totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "12868:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 991,
                              "id": 1001,
                              "nodeType": "Return",
                              "src": "12861:19:0"
                            }
                          ]
                        },
                        "id": 1003,
                        "nodeType": "IfStatement",
                        "src": "12749:142:0",
                        "trueBody": {
                          "id": 999,
                          "nodeType": "Block",
                          "src": "12765:76:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 994,
                                        "name": "upgradedAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 763,
                                        "src": "12800:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 993,
                                      "name": "StandardToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 546,
                                      "src": "12786:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_StandardToken_$546_$",
                                        "typeString": "type(contract StandardToken)"
                                      }
                                    },
                                    "id": 995,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12786:30:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StandardToken_$546",
                                      "typeString": "contract StandardToken"
                                    }
                                  },
                                  "id": 996,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "totalSupply",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 146,
                                  "src": "12786:42:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 997,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12786:44:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 991,
                              "id": 998,
                              "nodeType": "Return",
                              "src": "12779:51:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1005,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 988,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12705:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 991,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 990,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1005,
                        "src": "12733:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 989,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12733:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12732:6:0"
                  },
                  "scope": 1142,
                  "src": "12685:212:0",
                  "stateMutability": "view",
                  "superFunction": 146,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1046,
                    "nodeType": "Block",
                    "src": "13100:214:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1015,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1013,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 141,
                                  "src": "13118:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 1014,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1007,
                                  "src": "13133:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13118:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1016,
                                "name": "_totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "13142:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13118:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1012,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1163,
                            "src": "13110:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13110:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1019,
                        "nodeType": "ExpressionStatement",
                        "src": "13110:45:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1025,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1021,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 216,
                                    "src": "13173:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1023,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1022,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 99,
                                    "src": "13182:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13173:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 1024,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1007,
                                  "src": "13191:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13173:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1026,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 216,
                                  "src": "13200:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1028,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1027,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "13209:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13200:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13173:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1020,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1163,
                            "src": "13165:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13165:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1031,
                        "nodeType": "ExpressionStatement",
                        "src": "13165:51:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1032,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "13227:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1034,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1033,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "13236:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13227:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1035,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1007,
                            "src": "13246:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13227:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1037,
                        "nodeType": "ExpressionStatement",
                        "src": "13227:25:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1038,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "13262:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1039,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1007,
                            "src": "13278:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13262:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1041,
                        "nodeType": "ExpressionStatement",
                        "src": "13262:22:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1043,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1007,
                              "src": "13300:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1042,
                            "name": "Issue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1127,
                            "src": "13294:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13294:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1045,
                        "nodeType": "ExpressionStatement",
                        "src": "13294:13:0"
                      }
                    ]
                  },
                  "id": 1047,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 1010,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 1009,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "13090:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13090:9:0"
                    }
                  ],
                  "name": "issue",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1008,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1007,
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1047,
                        "src": "13070:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1006,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13070:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13069:13:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 1011,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13100:0:0"
                  },
                  "scope": 1142,
                  "src": "13055:259:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1082,
                    "nodeType": "Block",
                    "src": "13584:184:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1055,
                                "name": "_totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "13602:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1056,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1049,
                                "src": "13618:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13602:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1054,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1163,
                            "src": "13594:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13594:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1059,
                        "nodeType": "ExpressionStatement",
                        "src": "13594:31:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1061,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 216,
                                  "src": "13643:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1063,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1062,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "13652:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13643:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1064,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1049,
                                "src": "13662:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13643:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1060,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1163,
                            "src": "13635:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13635:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1067,
                        "nodeType": "ExpressionStatement",
                        "src": "13635:34:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1068,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "13680:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1069,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1049,
                            "src": "13696:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13680:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1071,
                        "nodeType": "ExpressionStatement",
                        "src": "13680:22:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1072,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "13712:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1074,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1073,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "13721:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13712:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1075,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1049,
                            "src": "13731:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13712:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1077,
                        "nodeType": "ExpressionStatement",
                        "src": "13712:25:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1079,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1049,
                              "src": "13754:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1078,
                            "name": "Redeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1131,
                            "src": "13747:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13747:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1081,
                        "nodeType": "ExpressionStatement",
                        "src": "13747:14:0"
                      }
                    ]
                  },
                  "id": 1083,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 1052,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 1051,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "13574:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13574:9:0"
                    }
                  ],
                  "name": "redeem",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1050,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1049,
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1083,
                        "src": "13554:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13554:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13553:13:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 1053,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13584:0:0"
                  },
                  "scope": 1142,
                  "src": "13538:230:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1122,
                    "nodeType": "Block",
                    "src": "13847:305:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1093,
                                "name": "newBasisPoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1085,
                                "src": "13953:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3230",
                                "id": 1094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13970:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_20_by_1",
                                  "typeString": "int_const 20"
                                },
                                "value": "20"
                              },
                              "src": "13953:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1092,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1163,
                            "src": "13945:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13945:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1097,
                        "nodeType": "ExpressionStatement",
                        "src": "13945:28:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1099,
                                "name": "newMaxFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1087,
                                "src": "13991:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3530",
                                "id": 1100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14003:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50_by_1",
                                  "typeString": "int_const 50"
                                },
                                "value": "50"
                              },
                              "src": "13991:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1098,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1163,
                            "src": "13983:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13983:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1103,
                        "nodeType": "ExpressionStatement",
                        "src": "13983:23:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1104,
                            "name": "basisPointsRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 219,
                            "src": "14017:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1105,
                            "name": "newBasisPoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1085,
                            "src": "14035:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14017:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1107,
                        "nodeType": "ExpressionStatement",
                        "src": "14017:32:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1108,
                            "name": "maximumFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "14059:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "3130",
                                  "id": 1111,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14086:2:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 1112,
                                  "name": "decimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 761,
                                  "src": "14090:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14086:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1109,
                                "name": "newMaxFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1087,
                                "src": "14072:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34,
                              "src": "14072:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14072:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14059:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1116,
                        "nodeType": "ExpressionStatement",
                        "src": "14059:40:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1118,
                              "name": "basisPointsRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "14117:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1119,
                              "name": "maximumFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "14134:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1117,
                            "name": "Params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1141,
                            "src": "14110:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 1120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14110:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1121,
                        "nodeType": "ExpressionStatement",
                        "src": "14110:35:0"
                      }
                    ]
                  },
                  "id": 1123,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 1090,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 1089,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "13837:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13837:9:0"
                    }
                  ],
                  "name": "setParams",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1088,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1085,
                        "name": "newBasisPoints",
                        "nodeType": "VariableDeclaration",
                        "scope": 1123,
                        "src": "13793:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1084,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13793:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1087,
                        "name": "newMaxFee",
                        "nodeType": "VariableDeclaration",
                        "scope": 1123,
                        "src": "13814:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1086,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13814:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13792:37:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 1091,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13847:0:0"
                  },
                  "scope": 1142,
                  "src": "13774:378:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 1127,
                  "name": "Issue",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1126,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1125,
                        "indexed": false,
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1127,
                        "src": "14210:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1124,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14210:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14209:13:0"
                  },
                  "src": "14198:25:0"
                },
                {
                  "anonymous": false,
                  "id": 1131,
                  "name": "Redeem",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1129,
                        "indexed": false,
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1131,
                        "src": "14281:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1128,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14281:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14280:13:0"
                  },
                  "src": "14268:26:0"
                },
                {
                  "anonymous": false,
                  "id": 1135,
                  "name": "Deprecate",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1133,
                        "indexed": false,
                        "name": "newAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1135,
                        "src": "14358:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1132,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14358:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14357:20:0"
                  },
                  "src": "14342:36:0"
                },
                {
                  "anonymous": false,
                  "id": 1141,
                  "name": "Params",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1140,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1137,
                        "indexed": false,
                        "name": "feeBasisPoints",
                        "nodeType": "VariableDeclaration",
                        "scope": 1141,
                        "src": "14438:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1136,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14438:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1139,
                        "indexed": false,
                        "name": "maxFee",
                        "nodeType": "VariableDeclaration",
                        "scope": 1141,
                        "src": "14459:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1138,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14459:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14437:34:0"
                  },
                  "src": "14425:47:0"
                }
              ],
              "scope": 1143,
              "src": "9693:4781:0"
            }
          ],
          "src": "33:14441:0"
        },
        "id": 0,
        "legacyAST": {
          "attributes": {
            "absolutePath": "contracts/test/TetherToken.sol",
            "exportedSymbols": {
              "BasicToken": [
                347
              ],
              "BlackList": [
                717
              ],
              "ERC20": [
                205
              ],
              "ERC20Basic": [
                169
              ],
              "Ownable": [
                139
              ],
              "Pausable": [
                603
              ],
              "SafeMath": [
                97
              ],
              "StandardToken": [
                546
              ],
              "TetherToken": [
                1142
              ],
              "UpgradedStandardToken": [
                749
              ]
            }
          },
          "children": [
            {
              "attributes": {
                "literals": [
                  "solidity",
                  "0.4",
                  ".17"
                ]
              },
              "id": 1,
              "name": "PragmaDirective",
              "src": "33:23:0"
            },
            {
              "attributes": {
                "baseContracts": [
                  null
                ],
                "contractDependencies": [
                  null
                ],
                "contractKind": "library",
                "documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                  97
                ],
                "name": "SafeMath",
                "scope": 1143
              },
              "children": [
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "mul",
                    "payable": false,
                    "scope": 97,
                    "stateMutability": "pure",
                    "superFunction": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "a",
                            "scope": 34,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint256",
                                "type": "uint256"
                              },
                              "id": 2,
                              "name": "ElementaryTypeName",
                              "src": "184:7:0"
                            }
                          ],
                          "id": 3,
                          "name": "VariableDeclaration",
                          "src": "184:9:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "b",
                            "scope": 34,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint256",
                                "type": "uint256"
                              },
                              "id": 4,
                              "name": "ElementaryTypeName",
                              "src": "195:7:0"
                            }
                          ],
                          "id": 5,
                          "name": "VariableDeclaration",
                          "src": "195:9:0"
                        }
                      ],
                      "id": 6,
                      "name": "ParameterList",
                      "src": "183:22:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 34,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint256",
                                "type": "uint256"
                              },
                              "id": 7,
                              "name": "ElementaryTypeName",
                              "src": "229:7:0"
                            }
                          ],
                          "id": 8,
                          "name": "VariableDeclaration",
                          "src": "229:7:0"
                        }
                      ],
                      "id": 9,
                      "name": "ParameterList",
                      "src": "228:9:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "==",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 3,
                                    "type": "uint256",
                                    "value": "a"
                                  },
                                  "id": 10,
                                  "name": "Identifier",
                                  "src": "252:1:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "30",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "number",
                                    "type": "int_const 0",
                                    "value": "0"
                                  },
                                  "id": 11,
                                  "name": "Literal",
                                  "src": "257:1:0"
                                }
                              ],
                              "id": 12,
                              "name": "BinaryOperation",
                              "src": "252:6:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "functionReturnParameters": 9
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "hexvalue": "30",
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "subdenomination": null,
                                        "token": "number",
                                        "type": "int_const 0",
                                        "value": "0"
                                      },
                                      "id": 13,
                                      "name": "Literal",
                                      "src": "281:1:0"
                                    }
                                  ],
                                  "id": 14,
                                  "name": "Return",
                                  "src": "274:8:0"
                                }
                              ],
                              "id": 15,
                              "name": "Block",
                              "src": "260:33:0"
                            }
                          ],
                          "id": 16,
                          "name": "IfStatement",
                          "src": "248:45:0"
                        },
                        {
                          "attributes": {
                            "assignments": [
                              18
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "c",
                                "scope": 34,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "uint256",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "uint256",
                                    "type": "uint256"
                                  },
                                  "id": 17,
                                  "name": "ElementaryTypeName",
                                  "src": "302:7:0"
                                }
                              ],
                              "id": 18,
                              "name": "VariableDeclaration",
                              "src": "302:9:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "*",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 3,
                                    "type": "uint256",
                                    "value": "a"
                                  },
                                  "id": 19,
                                  "name": "Identifier",
                                  "src": "314:1:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 5,
                                    "type": "uint256",
                                    "value": "b"
                                  },
                                  "id": 20,
                                  "name": "Identifier",
                                  "src": "318:1:0"
                                }
                              ],
                              "id": 21,
                              "name": "BinaryOperation",
                              "src": "314:5:0"
                            }
                          ],
                          "id": 22,
                          "name": "VariableDeclarationStatement",
                          "src": "302:17:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1162,
                                    "type": "function (bool) pure",
                                    "value": "assert"
                                  },
                                  "id": 23,
                                  "name": "Identifier",
                                  "src": "329:6:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "==",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "/",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 18,
                                            "type": "uint256",
                                            "value": "c"
                                          },
                                          "id": 24,
                                          "name": "Identifier",
                                          "src": "336:1:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 3,
                                            "type": "uint256",
                                            "value": "a"
                                          },
                                          "id": 25,
                                          "name": "Identifier",
                                          "src": "340:1:0"
                                        }
                                      ],
                                      "id": 26,
                                      "name": "BinaryOperation",
                                      "src": "336:5:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 5,
                                        "type": "uint256",
                                        "value": "b"
                                      },
                                      "id": 27,
                                      "name": "Identifier",
                                      "src": "345:1:0"
                                    }
                                  ],
                                  "id": 28,
                                  "name": "BinaryOperation",
                                  "src": "336:10:0"
                                }
                              ],
                              "id": 29,
                              "name": "FunctionCall",
                              "src": "329:18:0"
                            }
                          ],
                          "id": 30,
                          "name": "ExpressionStatement",
                          "src": "329:18:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 9
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 18,
                                "type": "uint256",
                                "value": "c"
                              },
                              "id": 31,
                              "name": "Identifier",
                              "src": "364:1:0"
                            }
                          ],
                          "id": 32,
                          "name": "Return",
                          "src": "357:8:0"
                        }
                      ],
                      "id": 33,
                      "name": "Block",
                      "src": "238:134:0"
                    }
                  ],
                  "id": 34,
                  "name": "FunctionDefinition",
                  "src": "171:201:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "div",
                    "payable": false,
                    "scope": 97,
                    "stateMutability": "pure",
                    "superFunction": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "a",
                            "scope": 52,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint256",
                                "type": "uint256"
                              },
                              "id": 35,
                              "name": "ElementaryTypeName",
                              "src": "391:7:0"
                            }
                          ],
                          "id": 36,
                          "name": "VariableDeclaration",
                          "src": "391:9:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "b",
                            "scope": 52,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint256",
                                "type": "uint256"
                              },
                              "id": 37,
                              "name": "ElementaryTypeName",
                              "src": "402:7:0"
                            }
                          ],
                          "id": 38,
                          "name": "VariableDeclaration",
                          "src": "402:9:0"
                        }
                      ],
                      "id": 39,
                      "name": "ParameterList",
                      "src": "390:22:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 52,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint256",
                                "type": "uint256"
                              },
                              "id": 40,
                              "name": "ElementaryTypeName",
                              "src": "436:7:0"
                            }
                          ],
                          "id": 41,
                          "name": "VariableDeclaration",
                          "src": "436:7:0"
                        }
                      ],
                      "id": 42,
                      "name": "ParameterList",
                      "src": "435:9:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "assignments": [
                              44
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "c",
                                "scope": 52,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "uint256",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "uint256",
                                    "type": "uint256"
                                  },
                                  "id": 43,
                                  "name": "ElementaryTypeName",
                                  "src": "533:7:0"
                                }
                              ],
                              "id": 44,
                              "name": "VariableDeclaration",
                              "src": "533:9:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "/",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 36,
                                    "type": "uint256",
                                    "value": "a"
                                  },
                                  "id": 45,
                                  "name": "Identifier",
                                  "src": "545:1:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 38,
                                    "type": "uint256",
                                    "value": "b"
                                  },
                                  "id": 46,
                                  "name": "Identifier",
                                  "src": "549:1:0"
                                }
                              ],
                              "id": 47,
                              "name": "BinaryOperation",
                              "src": "545:5:0"
                            }
                          ],
                          "id": 48,
                          "name": "VariableDeclarationStatement",
                          "src": "533:17:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 42
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 44,
                                "type": "uint256",
                                "value": "c"
                              },
                              "id": 49,
                              "name": "Identifier",
                              "src": "653:1:0"
                            }
                          ],
                          "id": 50,
                          "name": "Return",
                          "src": "646:8:0"
                        }
                      ],
                      "id": 51,
                      "name": "Block",
                      "src": "445:216:0"
                    }
                  ],
                  "id": 52,
                  "name": "FunctionDefinition",
                  "src": "378:283:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "sub",
                    "payable": false,
                    "scope": 97,
                    "stateMutability": "pure",
                    "superFunction": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "a",
                            "scope": 72,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint256",
                                "type": "uint256"
                              },
                              "id": 53,
                              "name": "ElementaryTypeName",
                              "src": "680:7:0"
                            }
                          ],
                          "id": 54,
                          "name": "VariableDeclaration",
                          "src": "680:9:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "b",
                            "scope": 72,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint256",
                                "type": "uint256"
                              },
                              "id": 55,
                              "name": "ElementaryTypeName",
                              "src": "691:7:0"
                            }
                          ],
                          "id": 56,
                          "name": "VariableDeclaration",
                          "src": "691:9:0"
                        }
                      ],
                      "id": 57,
                      "name": "ParameterList",
                      "src": "679:22:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 72,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint256",
                                "type": "uint256"
                              },
                              "id": 58,
                              "name": "ElementaryTypeName",
                              "src": "725:7:0"
                            }
                          ],
                          "id": 59,
                          "name": "VariableDeclaration",
                          "src": "725:7:0"
                        }
                      ],
                      "id": 60,
                      "name": "ParameterList",
                      "src": "724:9:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1162,
                                    "type": "function (bool) pure",
                                    "value": "assert"
                                  },
                                  "id": 61,
                                  "name": "Identifier",
                                  "src": "744:6:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "<=",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 56,
                                        "type": "uint256",
                                        "value": "b"
                                      },
                                      "id": 62,
                                      "name": "Identifier",
                                      "src": "751:1:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 54,
                                        "type": "uint256",
                                        "value": "a"
                                      },
                                      "id": 63,
                                      "name": "Identifier",
                                      "src": "756:1:0"
                                    }
                                  ],
                                  "id": 64,
                                  "name": "BinaryOperation",
                                  "src": "751:6:0"
                                }
                              ],
                              "id": 65,
                              "name": "FunctionCall",
                              "src": "744:14:0"
                            }
                          ],
                          "id": 66,
                          "name": "ExpressionStatement",
                          "src": "744:14:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 60
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "-",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 54,
                                    "type": "uint256",
                                    "value": "a"
                                  },
                                  "id": 67,
                                  "name": "Identifier",
                                  "src": "775:1:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 56,
                                    "type": "uint256",
                                    "value": "b"
                                  },
                                  "id": 68,
                                  "name": "Identifier",
                                  "src": "779:1:0"
                                }
                              ],
                              "id": 69,
                              "name": "BinaryOperation",
                              "src": "775:5:0"
                            }
                          ],
                          "id": 70,
                          "name": "Return",
                          "src": "768:12:0"
                        }
                      ],
                      "id": 71,
                      "name": "Block",
                      "src": "734:53:0"
                    }
                  ],
                  "id": 72,
                  "name": "FunctionDefinition",
                  "src": "667:120:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "add",
                    "payable": false,
                    "scope": 97,
                    "stateMutability": "pure",
                    "superFunction": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "a",
                            "scope": 96,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint256",
                                "type": "uint256"
                              },
                              "id": 73,
                              "name": "ElementaryTypeName",
                              "src": "806:7:0"
                            }
                          ],
                          "id": 74,
                          "name": "VariableDeclaration",
                          "src": "806:9:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "b",
                            "scope": 96,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint256",
                                "type": "uint256"
                              },
                              "id": 75,
                              "name": "ElementaryTypeName",
                              "src": "817:7:0"
                            }
                          ],
                          "id": 76,
                          "name": "VariableDeclaration",
                          "src": "817:9:0"
                        }
                      ],
                      "id": 77,
                      "name": "ParameterList",
                      "src": "805:22:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 96,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint256",
                                "type": "uint256"
                              },
                              "id": 78,
                              "name": "ElementaryTypeName",
                              "src": "851:7:0"
                            }
                          ],
                          "id": 79,
                          "name": "VariableDeclaration",
                          "src": "851:7:0"
                        }
                      ],
                      "id": 80,
                      "name": "ParameterList",
                      "src": "850:9:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "assignments": [
                              82
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "c",
                                "scope": 96,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "uint256",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "uint256",
                                    "type": "uint256"
                                  },
                                  "id": 81,
                                  "name": "ElementaryTypeName",
                                  "src": "870:7:0"
                                }
                              ],
                              "id": 82,
                              "name": "VariableDeclaration",
                              "src": "870:9:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "+",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 74,
                                    "type": "uint256",
                                    "value": "a"
                                  },
                                  "id": 83,
                                  "name": "Identifier",
                                  "src": "882:1:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 76,
                                    "type": "uint256",
                                    "value": "b"
                                  },
                                  "id": 84,
                                  "name": "Identifier",
                                  "src": "886:1:0"
                                }
                              ],
                              "id": 85,
                              "name": "BinaryOperation",
                              "src": "882:5:0"
                            }
                          ],
                          "id": 86,
                          "name": "VariableDeclarationStatement",
                          "src": "870:17:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1162,
                                    "type": "function (bool) pure",
                                    "value": "assert"
                                  },
                                  "id": 87,
                                  "name": "Identifier",
                                  "src": "897:6:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": ">=",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 82,
                                        "type": "uint256",
                                        "value": "c"
                                      },
                                      "id": 88,
                                      "name": "Identifier",
                                      "src": "904:1:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 74,
                                        "type": "uint256",
                                        "value": "a"
                                      },
                                      "id": 89,
                                      "name": "Identifier",
                                      "src": "909:1:0"
                                    }
                                  ],
                                  "id": 90,
                                  "name": "BinaryOperation",
                                  "src": "904:6:0"
                                }
                              ],
                              "id": 91,
                              "name": "FunctionCall",
                              "src": "897:14:0"
                            }
                          ],
                          "id": 92,
                          "name": "ExpressionStatement",
                          "src": "897:14:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 80
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 82,
                                "type": "uint256",
                                "value": "c"
                              },
                              "id": 93,
                              "name": "Identifier",
                              "src": "928:1:0"
                            }
                          ],
                          "id": 94,
                          "name": "Return",
                          "src": "921:8:0"
                        }
                      ],
                      "id": 95,
                      "name": "Block",
                      "src": "860:76:0"
                    }
                  ],
                  "id": 96,
                  "name": "FunctionDefinition",
                  "src": "793:143:0"
                }
              ],
              "id": 97,
              "name": "ContractDefinition",
              "src": "148:790:0"
            },
            {
              "attributes": {
                "baseContracts": [
                  null
                ],
                "contractDependencies": [
                  null
                ],
                "contractKind": "contract",
                "documentation": "@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".",
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                  139
                ],
                "name": "Ownable",
                "scope": 1143
              },
              "children": [
                {
                  "attributes": {
                    "constant": false,
                    "name": "owner",
                    "scope": 139,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "address",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "address",
                        "type": "address"
                      },
                      "id": 98,
                      "name": "ElementaryTypeName",
                      "src": "1153:7:0"
                    }
                  ],
                  "id": 99,
                  "name": "VariableDeclaration",
                  "src": "1153:20:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": true,
                    "modifiers": [
                      null
                    ],
                    "name": "Ownable",
                    "payable": false,
                    "scope": 139,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 100,
                      "name": "ParameterList",
                      "src": "1323:2:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 101,
                      "name": "ParameterList",
                      "src": "1333:0:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "address"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 99,
                                    "type": "address",
                                    "value": "owner"
                                  },
                                  "id": 102,
                                  "name": "Identifier",
                                  "src": "1343:5:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1145,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 103,
                                      "name": "Identifier",
                                      "src": "1351:3:0"
                                    }
                                  ],
                                  "id": 104,
                                  "name": "MemberAccess",
                                  "src": "1351:10:0"
                                }
                              ],
                              "id": 105,
                              "name": "Assignment",
                              "src": "1343:18:0"
                            }
                          ],
                          "id": 106,
                          "name": "ExpressionStatement",
                          "src": "1343:18:0"
                        }
                      ],
                      "id": 107,
                      "name": "Block",
                      "src": "1333:35:0"
                    }
                  ],
                  "id": 108,
                  "name": "FunctionDefinition",
                  "src": "1307:61:0"
                },
                {
                  "attributes": {
                    "name": "onlyOwner",
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 109,
                      "name": "ParameterList",
                      "src": "1476:2:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1163,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 110,
                                  "name": "Identifier",
                                  "src": "1489:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "==",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sender",
                                        "referencedDeclaration": null,
                                        "type": "address"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1145,
                                            "type": "msg",
                                            "value": "msg"
                                          },
                                          "id": 111,
                                          "name": "Identifier",
                                          "src": "1497:3:0"
                                        }
                                      ],
                                      "id": 112,
                                      "name": "MemberAccess",
                                      "src": "1497:10:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 99,
                                        "type": "address",
                                        "value": "owner"
                                      },
                                      "id": 113,
                                      "name": "Identifier",
                                      "src": "1511:5:0"
                                    }
                                  ],
                                  "id": 114,
                                  "name": "BinaryOperation",
                                  "src": "1497:19:0"
                                }
                              ],
                              "id": 115,
                              "name": "FunctionCall",
                              "src": "1489:28:0"
                            }
                          ],
                          "id": 116,
                          "name": "ExpressionStatement",
                          "src": "1489:28:0"
                        },
                        {
                          "id": 117,
                          "name": "PlaceholderStatement",
                          "src": "1527:1:0"
                        }
                      ],
                      "id": 118,
                      "name": "Block",
                      "src": "1479:56:0"
                    }
                  ],
                  "id": 119,
                  "name": "ModifierDefinition",
                  "src": "1458:77:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "name": "transferOwnership",
                    "payable": false,
                    "scope": 139,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "newOwner",
                            "scope": 138,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 120,
                              "name": "ElementaryTypeName",
                              "src": "1730:7:0"
                            }
                          ],
                          "id": 121,
                          "name": "VariableDeclaration",
                          "src": "1730:16:0"
                        }
                      ],
                      "id": 122,
                      "name": "ParameterList",
                      "src": "1729:18:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 125,
                      "name": "ParameterList",
                      "src": "1765:0:0"
                    },
                    {
                      "attributes": {
                        "arguments": [
                          null
                        ]
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 119,
                            "type": "modifier ()",
                            "value": "onlyOwner"
                          },
                          "id": 123,
                          "name": "Identifier",
                          "src": "1755:9:0"
                        }
                      ],
                      "id": 124,
                      "name": "ModifierInvocation",
                      "src": "1755:9:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "!=",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 121,
                                    "type": "address",
                                    "value": "newOwner"
                                  },
                                  "id": 126,
                                  "name": "Identifier",
                                  "src": "1779:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "address",
                                    "type_conversion": true
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "type": "type(address)",
                                        "value": "address"
                                      },
                                      "id": 127,
                                      "name": "ElementaryTypeNameExpression",
                                      "src": "1791:7:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "hexvalue": "30",
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "subdenomination": null,
                                        "token": "number",
                                        "type": "int_const 0",
                                        "value": "0"
                                      },
                                      "id": 128,
                                      "name": "Literal",
                                      "src": "1799:1:0"
                                    }
                                  ],
                                  "id": 129,
                                  "name": "FunctionCall",
                                  "src": "1791:10:0"
                                }
                              ],
                              "id": 130,
                              "name": "BinaryOperation",
                              "src": "1779:22:0"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "=",
                                        "type": "address"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 99,
                                            "type": "address",
                                            "value": "owner"
                                          },
                                          "id": 131,
                                          "name": "Identifier",
                                          "src": "1817:5:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 121,
                                            "type": "address",
                                            "value": "newOwner"
                                          },
                                          "id": 132,
                                          "name": "Identifier",
                                          "src": "1825:8:0"
                                        }
                                      ],
                                      "id": 133,
                                      "name": "Assignment",
                                      "src": "1817:16:0"
                                    }
                                  ],
                                  "id": 134,
                                  "name": "ExpressionStatement",
                                  "src": "1817:16:0"
                                }
                              ],
                              "id": 135,
                              "name": "Block",
                              "src": "1803:41:0"
                            }
                          ],
                          "id": 136,
                          "name": "IfStatement",
                          "src": "1775:69:0"
                        }
                      ],
                      "id": 137,
                      "name": "Block",
                      "src": "1765:85:0"
                    }
                  ],
                  "id": 138,
                  "name": "FunctionDefinition",
                  "src": "1703:147:0"
                }
              ],
              "id": 139,
              "name": "ContractDefinition",
              "src": "1130:723:0"
            },
            {
              "attributes": {
                "baseContracts": [
                  null
                ],
                "contractDependencies": [
                  null
                ],
                "contractKind": "contract",
                "documentation": "@title ERC20Basic\n@dev Simpler version of ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
                "fullyImplemented": false,
                "linearizedBaseContracts": [
                  169
                ],
                "name": "ERC20Basic",
                "scope": 1143
              },
              "children": [
                {
                  "attributes": {
                    "constant": false,
                    "name": "_totalSupply",
                    "scope": 169,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 140,
                      "name": "ElementaryTypeName",
                      "src": "2008:4:0"
                    }
                  ],
                  "id": 141,
                  "name": "VariableDeclaration",
                  "src": "2008:24:0"
                },
                {
                  "attributes": {
                    "body": null,
                    "constant": true,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "totalSupply",
                    "payable": false,
                    "scope": 169,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 142,
                      "name": "ParameterList",
                      "src": "2058:2:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 146,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 143,
                              "name": "ElementaryTypeName",
                              "src": "2086:4:0"
                            }
                          ],
                          "id": 144,
                          "name": "VariableDeclaration",
                          "src": "2086:4:0"
                        }
                      ],
                      "id": 145,
                      "name": "ParameterList",
                      "src": "2085:6:0"
                    }
                  ],
                  "id": 146,
                  "name": "FunctionDefinition",
                  "src": "2038:54:0"
                },
                {
                  "attributes": {
                    "body": null,
                    "constant": true,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "balanceOf",
                    "payable": false,
                    "scope": 169,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "who",
                            "scope": 153,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 147,
                              "name": "ElementaryTypeName",
                              "src": "2116:7:0"
                            }
                          ],
                          "id": 148,
                          "name": "VariableDeclaration",
                          "src": "2116:11:0"
                        }
                      ],
                      "id": 149,
                      "name": "ParameterList",
                      "src": "2115:13:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 153,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 150,
                              "name": "ElementaryTypeName",
                              "src": "2154:4:0"
                            }
                          ],
                          "id": 151,
                          "name": "VariableDeclaration",
                          "src": "2154:4:0"
                        }
                      ],
                      "id": 152,
                      "name": "ParameterList",
                      "src": "2153:6:0"
                    }
                  ],
                  "id": 153,
                  "name": "FunctionDefinition",
                  "src": "2097:63:0"
                },
                {
                  "attributes": {
                    "body": null,
                    "constant": false,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "transfer",
                    "payable": false,
                    "scope": 169,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "to",
                            "scope": 160,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 154,
                              "name": "ElementaryTypeName",
                              "src": "2183:7:0"
                            }
                          ],
                          "id": 155,
                          "name": "VariableDeclaration",
                          "src": "2183:10:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "value",
                            "scope": 160,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 156,
                              "name": "ElementaryTypeName",
                              "src": "2195:4:0"
                            }
                          ],
                          "id": 157,
                          "name": "VariableDeclaration",
                          "src": "2195:10:0"
                        }
                      ],
                      "id": 158,
                      "name": "ParameterList",
                      "src": "2182:24:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 159,
                      "name": "ParameterList",
                      "src": "2213:0:0"
                    }
                  ],
                  "id": 160,
                  "name": "FunctionDefinition",
                  "src": "2165:49:0"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "Transfer"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "from",
                            "scope": 168,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 161,
                              "name": "ElementaryTypeName",
                              "src": "2234:7:0"
                            }
                          ],
                          "id": 162,
                          "name": "VariableDeclaration",
                          "src": "2234:20:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "to",
                            "scope": 168,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 163,
                              "name": "ElementaryTypeName",
                              "src": "2256:7:0"
                            }
                          ],
                          "id": 164,
                          "name": "VariableDeclaration",
                          "src": "2256:18:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "value",
                            "scope": 168,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 165,
                              "name": "ElementaryTypeName",
                              "src": "2276:4:0"
                            }
                          ],
                          "id": 166,
                          "name": "VariableDeclaration",
                          "src": "2276:10:0"
                        }
                      ],
                      "id": 167,
                      "name": "ParameterList",
                      "src": "2233:54:0"
                    }
                  ],
                  "id": 168,
                  "name": "EventDefinition",
                  "src": "2219:69:0"
                }
              ],
              "id": 169,
              "name": "ContractDefinition",
              "src": "1982:308:0"
            },
            {
              "attributes": {
                "contractDependencies": [
                  169
                ],
                "contractKind": "contract",
                "documentation": "@title ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
                "fullyImplemented": false,
                "linearizedBaseContracts": [
                  205,
                  169
                ],
                "name": "ERC20",
                "scope": 1143
              },
              "children": [
                {
                  "attributes": {
                    "arguments": [
                      null
                    ]
                  },
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "ERC20Basic",
                        "referencedDeclaration": 169,
                        "type": "contract ERC20Basic"
                      },
                      "id": 170,
                      "name": "UserDefinedTypeName",
                      "src": "2399:10:0"
                    }
                  ],
                  "id": 171,
                  "name": "InheritanceSpecifier",
                  "src": "2399:10:0"
                },
                {
                  "attributes": {
                    "body": null,
                    "constant": true,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "allowance",
                    "payable": false,
                    "scope": 205,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "owner",
                            "scope": 180,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 172,
                              "name": "ElementaryTypeName",
                              "src": "2435:7:0"
                            }
                          ],
                          "id": 173,
                          "name": "VariableDeclaration",
                          "src": "2435:13:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "spender",
                            "scope": 180,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 174,
                              "name": "ElementaryTypeName",
                              "src": "2450:7:0"
                            }
                          ],
                          "id": 175,
                          "name": "VariableDeclaration",
                          "src": "2450:15:0"
                        }
                      ],
                      "id": 176,
                      "name": "ParameterList",
                      "src": "2434:32:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 180,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 177,
                              "name": "ElementaryTypeName",
                              "src": "2492:4:0"
                            }
                          ],
                          "id": 178,
                          "name": "VariableDeclaration",
                          "src": "2492:4:0"
                        }
                      ],
                      "id": 179,
                      "name": "ParameterList",
                      "src": "2491:6:0"
                    }
                  ],
                  "id": 180,
                  "name": "FunctionDefinition",
                  "src": "2416:82:0"
                },
                {
                  "attributes": {
                    "body": null,
                    "constant": false,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "transferFrom",
                    "payable": false,
                    "scope": 205,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "from",
                            "scope": 189,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 181,
                              "name": "ElementaryTypeName",
                              "src": "2525:7:0"
                            }
                          ],
                          "id": 182,
                          "name": "VariableDeclaration",
                          "src": "2525:12:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "to",
                            "scope": 189,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 183,
                              "name": "ElementaryTypeName",
                              "src": "2539:7:0"
                            }
                          ],
                          "id": 184,
                          "name": "VariableDeclaration",
                          "src": "2539:10:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "value",
                            "scope": 189,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 185,
                              "name": "ElementaryTypeName",
                              "src": "2551:4:0"
                            }
                          ],
                          "id": 186,
                          "name": "VariableDeclaration",
                          "src": "2551:10:0"
                        }
                      ],
                      "id": 187,
                      "name": "ParameterList",
                      "src": "2524:38:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 188,
                      "name": "ParameterList",
                      "src": "2569:0:0"
                    }
                  ],
                  "id": 189,
                  "name": "FunctionDefinition",
                  "src": "2503:67:0"
                },
                {
                  "attributes": {
                    "body": null,
                    "constant": false,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "approve",
                    "payable": false,
                    "scope": 205,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "spender",
                            "scope": 196,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 190,
                              "name": "ElementaryTypeName",
                              "src": "2592:7:0"
                            }
                          ],
                          "id": 191,
                          "name": "VariableDeclaration",
                          "src": "2592:15:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "value",
                            "scope": 196,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 192,
                              "name": "ElementaryTypeName",
                              "src": "2609:4:0"
                            }
                          ],
                          "id": 193,
                          "name": "VariableDeclaration",
                          "src": "2609:10:0"
                        }
                      ],
                      "id": 194,
                      "name": "ParameterList",
                      "src": "2591:29:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 195,
                      "name": "ParameterList",
                      "src": "2627:0:0"
                    }
                  ],
                  "id": 196,
                  "name": "FunctionDefinition",
                  "src": "2575:53:0"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "Approval"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "owner",
                            "scope": 204,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 197,
                              "name": "ElementaryTypeName",
                              "src": "2648:7:0"
                            }
                          ],
                          "id": 198,
                          "name": "VariableDeclaration",
                          "src": "2648:21:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "spender",
                            "scope": 204,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 199,
                              "name": "ElementaryTypeName",
                              "src": "2671:7:0"
                            }
                          ],
                          "id": 200,
                          "name": "VariableDeclaration",
                          "src": "2671:23:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "value",
                            "scope": 204,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 201,
                              "name": "ElementaryTypeName",
                              "src": "2696:4:0"
                            }
                          ],
                          "id": 202,
                          "name": "VariableDeclaration",
                          "src": "2696:10:0"
                        }
                      ],
                      "id": 203,
                      "name": "ParameterList",
                      "src": "2647:60:0"
                    }
                  ],
                  "id": 204,
                  "name": "EventDefinition",
                  "src": "2633:75:0"
                }
              ],
              "id": 205,
              "name": "ContractDefinition",
              "src": "2381:329:0"
            },
            {
              "attributes": {
                "contractDependencies": [
                  139,
                  169
                ],
                "contractKind": "contract",
                "documentation": "@title Basic token\n@dev Basic version of StandardToken, with no allowances.",
                "fullyImplemented": false,
                "linearizedBaseContracts": [
                  347,
                  169,
                  139
                ],
                "name": "BasicToken",
                "scope": 1143
              },
              "children": [
                {
                  "attributes": {
                    "arguments": [
                      null
                    ]
                  },
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "Ownable",
                        "referencedDeclaration": 139,
                        "type": "contract Ownable"
                      },
                      "id": 206,
                      "name": "UserDefinedTypeName",
                      "src": "2825:7:0"
                    }
                  ],
                  "id": 207,
                  "name": "InheritanceSpecifier",
                  "src": "2825:7:0"
                },
                {
                  "attributes": {
                    "arguments": [
                      null
                    ]
                  },
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "ERC20Basic",
                        "referencedDeclaration": 169,
                        "type": "contract ERC20Basic"
                      },
                      "id": 208,
                      "name": "UserDefinedTypeName",
                      "src": "2834:10:0"
                    }
                  ],
                  "id": 209,
                  "name": "InheritanceSpecifier",
                  "src": "2834:10:0"
                },
                {
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "SafeMath",
                        "referencedDeclaration": 97,
                        "type": "library SafeMath"
                      },
                      "id": 210,
                      "name": "UserDefinedTypeName",
                      "src": "2857:8:0"
                    },
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 211,
                      "name": "ElementaryTypeName",
                      "src": "2870:4:0"
                    }
                  ],
                  "id": 212,
                  "name": "UsingForDirective",
                  "src": "2851:24:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "balances",
                    "scope": 347,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "mapping(address => uint256)",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "type": "mapping(address => uint256)"
                      },
                      "children": [
                        {
                          "attributes": {
                            "name": "address",
                            "type": "address"
                          },
                          "id": 213,
                          "name": "ElementaryTypeName",
                          "src": "2889:7:0"
                        },
                        {
                          "attributes": {
                            "name": "uint",
                            "type": "uint256"
                          },
                          "id": 214,
                          "name": "ElementaryTypeName",
                          "src": "2900:4:0"
                        }
                      ],
                      "id": 215,
                      "name": "Mapping",
                      "src": "2881:24:0"
                    }
                  ],
                  "id": 216,
                  "name": "VariableDeclaration",
                  "src": "2881:40:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "basisPointsRate",
                    "scope": 347,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 217,
                      "name": "ElementaryTypeName",
                      "src": "3006:4:0"
                    },
                    {
                      "attributes": {
                        "argumentTypes": null,
                        "hexvalue": "30",
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "subdenomination": null,
                        "token": "number",
                        "type": "int_const 0",
                        "value": "0"
                      },
                      "id": 218,
                      "name": "Literal",
                      "src": "3036:1:0"
                    }
                  ],
                  "id": 219,
                  "name": "VariableDeclaration",
                  "src": "3006:31:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "maximumFee",
                    "scope": 347,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 220,
                      "name": "ElementaryTypeName",
                      "src": "3043:4:0"
                    },
                    {
                      "attributes": {
                        "argumentTypes": null,
                        "hexvalue": "30",
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "subdenomination": null,
                        "token": "number",
                        "type": "int_const 0",
                        "value": "0"
                      },
                      "id": 221,
                      "name": "Literal",
                      "src": "3068:1:0"
                    }
                  ],
                  "id": 222,
                  "name": "VariableDeclaration",
                  "src": "3043:26:0"
                },
                {
                  "attributes": {
                    "name": "onlyPayloadSize",
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "size",
                            "scope": 240,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 223,
                              "name": "ElementaryTypeName",
                              "src": "3167:4:0"
                            }
                          ],
                          "id": 224,
                          "name": "VariableDeclaration",
                          "src": "3167:9:0"
                        }
                      ],
                      "id": 225,
                      "name": "ParameterList",
                      "src": "3166:11:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1163,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 226,
                                  "name": "Identifier",
                                  "src": "3188:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "!",
                                    "prefix": true,
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "bool"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "operator": "<",
                                            "type": "bool"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "length",
                                                "referencedDeclaration": null,
                                                "type": "uint256"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "member_name": "data",
                                                    "referencedDeclaration": null,
                                                    "type": "bytes calldata"
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "overloadedDeclarations": [
                                                          null
                                                        ],
                                                        "referencedDeclaration": 1145,
                                                        "type": "msg",
                                                        "value": "msg"
                                                      },
                                                      "id": 227,
                                                      "name": "Identifier",
                                                      "src": "3198:3:0"
                                                    }
                                                  ],
                                                  "id": 228,
                                                  "name": "MemberAccess",
                                                  "src": "3198:8:0"
                                                }
                                              ],
                                              "id": 229,
                                              "name": "MemberAccess",
                                              "src": "3198:15:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "operator": "+",
                                                "type": "uint256"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 224,
                                                    "type": "uint256",
                                                    "value": "size"
                                                  },
                                                  "id": 230,
                                                  "name": "Identifier",
                                                  "src": "3216:4:0"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "hexvalue": "34",
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "subdenomination": null,
                                                    "token": "number",
                                                    "type": "int_const 4",
                                                    "value": "4"
                                                  },
                                                  "id": 231,
                                                  "name": "Literal",
                                                  "src": "3223:1:0"
                                                }
                                              ],
                                              "id": 232,
                                              "name": "BinaryOperation",
                                              "src": "3216:8:0"
                                            }
                                          ],
                                          "id": 233,
                                          "name": "BinaryOperation",
                                          "src": "3198:26:0"
                                        }
                                      ],
                                      "id": 234,
                                      "name": "TupleExpression",
                                      "src": "3197:28:0"
                                    }
                                  ],
                                  "id": 235,
                                  "name": "UnaryOperation",
                                  "src": "3196:29:0"
                                }
                              ],
                              "id": 236,
                              "name": "FunctionCall",
                              "src": "3188:38:0"
                            }
                          ],
                          "id": 237,
                          "name": "ExpressionStatement",
                          "src": "3188:38:0"
                        },
                        {
                          "id": 238,
                          "name": "PlaceholderStatement",
                          "src": "3236:1:0"
                        }
                      ],
                      "id": 239,
                      "name": "Block",
                      "src": "3178:66:0"
                    }
                  ],
                  "id": 240,
                  "name": "ModifierDefinition",
                  "src": "3142:102:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "name": "transfer",
                    "payable": false,
                    "scope": 347,
                    "stateMutability": "nonpayable",
                    "superFunction": 160,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_to",
                            "scope": 334,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 241,
                              "name": "ElementaryTypeName",
                              "src": "3428:7:0"
                            }
                          ],
                          "id": 242,
                          "name": "VariableDeclaration",
                          "src": "3428:11:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_value",
                            "scope": 334,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 243,
                              "name": "ElementaryTypeName",
                              "src": "3441:4:0"
                            }
                          ],
                          "id": 244,
                          "name": "VariableDeclaration",
                          "src": "3441:11:0"
                        }
                      ],
                      "id": 245,
                      "name": "ParameterList",
                      "src": "3427:26:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 251,
                      "name": "ParameterList",
                      "src": "3485:0:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 240,
                            "type": "modifier (uint256)",
                            "value": "onlyPayloadSize"
                          },
                          "id": 246,
                          "name": "Identifier",
                          "src": "3461:15:0"
                        },
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_64_by_1",
                              "typeString": "int_const 64"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "operator": "*",
                            "type": "int_const 64"
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "32",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "number",
                                "type": "int_const 2",
                                "value": "2"
                              },
                              "id": 247,
                              "name": "Literal",
                              "src": "3477:1:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "3332",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "number",
                                "type": "int_const 32",
                                "value": "32"
                              },
                              "id": 248,
                              "name": "Literal",
                              "src": "3481:2:0"
                            }
                          ],
                          "id": 249,
                          "name": "BinaryOperation",
                          "src": "3477:6:0"
                        }
                      ],
                      "id": 250,
                      "name": "ModifierInvocation",
                      "src": "3461:23:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "assignments": [
                              253
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "fee",
                                "scope": 334,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "uint256",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "uint",
                                    "type": "uint256"
                                  },
                                  "id": 252,
                                  "name": "ElementaryTypeName",
                                  "src": "3495:4:0"
                                }
                              ],
                              "id": 253,
                              "name": "VariableDeclaration",
                              "src": "3495:8:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "uint256",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_10000_by_1",
                                        "typeString": "int_const 10000"
                                      }
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "div",
                                    "referencedDeclaration": 52,
                                    "type": "function (uint256,uint256) pure returns (uint256)"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "isStructConstructorCall": false,
                                            "lValueRequested": false,
                                            "names": [
                                              null
                                            ],
                                            "type": "uint256",
                                            "type_conversion": false
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "mul",
                                                "referencedDeclaration": 34,
                                                "type": "function (uint256,uint256) pure returns (uint256)"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 244,
                                                    "type": "uint256",
                                                    "value": "_value"
                                                  },
                                                  "id": 254,
                                                  "name": "Identifier",
                                                  "src": "3507:6:0"
                                                }
                                              ],
                                              "id": 255,
                                              "name": "MemberAccess",
                                              "src": "3507:10:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 219,
                                                "type": "uint256",
                                                "value": "basisPointsRate"
                                              },
                                              "id": 256,
                                              "name": "Identifier",
                                              "src": "3518:15:0"
                                            }
                                          ],
                                          "id": 257,
                                          "name": "FunctionCall",
                                          "src": "3507:27:0"
                                        }
                                      ],
                                      "id": 258,
                                      "name": "TupleExpression",
                                      "src": "3506:29:0"
                                    }
                                  ],
                                  "id": 259,
                                  "name": "MemberAccess",
                                  "src": "3506:33:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "3130303030",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "number",
                                    "type": "int_const 10000",
                                    "value": "10000"
                                  },
                                  "id": 260,
                                  "name": "Literal",
                                  "src": "3540:5:0"
                                }
                              ],
                              "id": 261,
                              "name": "FunctionCall",
                              "src": "3506:40:0"
                            }
                          ],
                          "id": 262,
                          "name": "VariableDeclarationStatement",
                          "src": "3495:51:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": ">",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 253,
                                    "type": "uint256",
                                    "value": "fee"
                                  },
                                  "id": 263,
                                  "name": "Identifier",
                                  "src": "3560:3:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 222,
                                    "type": "uint256",
                                    "value": "maximumFee"
                                  },
                                  "id": 264,
                                  "name": "Identifier",
                                  "src": "3566:10:0"
                                }
                              ],
                              "id": 265,
                              "name": "BinaryOperation",
                              "src": "3560:16:0"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "=",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 253,
                                            "type": "uint256",
                                            "value": "fee"
                                          },
                                          "id": 266,
                                          "name": "Identifier",
                                          "src": "3592:3:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 222,
                                            "type": "uint256",
                                            "value": "maximumFee"
                                          },
                                          "id": 267,
                                          "name": "Identifier",
                                          "src": "3598:10:0"
                                        }
                                      ],
                                      "id": 268,
                                      "name": "Assignment",
                                      "src": "3592:16:0"
                                    }
                                  ],
                                  "id": 269,
                                  "name": "ExpressionStatement",
                                  "src": "3592:16:0"
                                }
                              ],
                              "id": 270,
                              "name": "Block",
                              "src": "3578:41:0"
                            }
                          ],
                          "id": 271,
                          "name": "IfStatement",
                          "src": "3556:63:0"
                        },
                        {
                          "attributes": {
                            "assignments": [
                              273
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "sendAmount",
                                "scope": 334,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "uint256",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "uint",
                                    "type": "uint256"
                                  },
                                  "id": 272,
                                  "name": "ElementaryTypeName",
                                  "src": "3628:4:0"
                                }
                              ],
                              "id": 273,
                              "name": "VariableDeclaration",
                              "src": "3628:15:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "uint256",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sub",
                                    "referencedDeclaration": 72,
                                    "type": "function (uint256,uint256) pure returns (uint256)"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 244,
                                        "type": "uint256",
                                        "value": "_value"
                                      },
                                      "id": 274,
                                      "name": "Identifier",
                                      "src": "3646:6:0"
                                    }
                                  ],
                                  "id": 275,
                                  "name": "MemberAccess",
                                  "src": "3646:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 253,
                                    "type": "uint256",
                                    "value": "fee"
                                  },
                                  "id": 276,
                                  "name": "Identifier",
                                  "src": "3657:3:0"
                                }
                              ],
                              "id": 277,
                              "name": "FunctionCall",
                              "src": "3646:15:0"
                            }
                          ],
                          "id": 278,
                          "name": "VariableDeclarationStatement",
                          "src": "3628:33:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 216,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 279,
                                      "name": "Identifier",
                                      "src": "3671:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sender",
                                        "referencedDeclaration": null,
                                        "type": "address"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1145,
                                            "type": "msg",
                                            "value": "msg"
                                          },
                                          "id": 280,
                                          "name": "Identifier",
                                          "src": "3680:3:0"
                                        }
                                      ],
                                      "id": 281,
                                      "name": "MemberAccess",
                                      "src": "3680:10:0"
                                    }
                                  ],
                                  "id": 282,
                                  "name": "IndexAccess",
                                  "src": "3671:20:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sub",
                                        "referencedDeclaration": 72,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 216,
                                                "type": "mapping(address => uint256)",
                                                "value": "balances"
                                              },
                                              "id": 283,
                                              "name": "Identifier",
                                              "src": "3694:8:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "sender",
                                                "referencedDeclaration": null,
                                                "type": "address"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 1145,
                                                    "type": "msg",
                                                    "value": "msg"
                                                  },
                                                  "id": 284,
                                                  "name": "Identifier",
                                                  "src": "3703:3:0"
                                                }
                                              ],
                                              "id": 285,
                                              "name": "MemberAccess",
                                              "src": "3703:10:0"
                                            }
                                          ],
                                          "id": 286,
                                          "name": "IndexAccess",
                                          "src": "3694:20:0"
                                        }
                                      ],
                                      "id": 287,
                                      "name": "MemberAccess",
                                      "src": "3694:24:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 244,
                                        "type": "uint256",
                                        "value": "_value"
                                      },
                                      "id": 288,
                                      "name": "Identifier",
                                      "src": "3719:6:0"
                                    }
                                  ],
                                  "id": 289,
                                  "name": "FunctionCall",
                                  "src": "3694:32:0"
                                }
                              ],
                              "id": 290,
                              "name": "Assignment",
                              "src": "3671:55:0"
                            }
                          ],
                          "id": 291,
                          "name": "ExpressionStatement",
                          "src": "3671:55:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 216,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 292,
                                      "name": "Identifier",
                                      "src": "3736:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 242,
                                        "type": "address",
                                        "value": "_to"
                                      },
                                      "id": 293,
                                      "name": "Identifier",
                                      "src": "3745:3:0"
                                    }
                                  ],
                                  "id": 294,
                                  "name": "IndexAccess",
                                  "src": "3736:13:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "add",
                                        "referencedDeclaration": 96,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 216,
                                                "type": "mapping(address => uint256)",
                                                "value": "balances"
                                              },
                                              "id": 295,
                                              "name": "Identifier",
                                              "src": "3752:8:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 242,
                                                "type": "address",
                                                "value": "_to"
                                              },
                                              "id": 296,
                                              "name": "Identifier",
                                              "src": "3761:3:0"
                                            }
                                          ],
                                          "id": 297,
                                          "name": "IndexAccess",
                                          "src": "3752:13:0"
                                        }
                                      ],
                                      "id": 298,
                                      "name": "MemberAccess",
                                      "src": "3752:17:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 273,
                                        "type": "uint256",
                                        "value": "sendAmount"
                                      },
                                      "id": 299,
                                      "name": "Identifier",
                                      "src": "3770:10:0"
                                    }
                                  ],
                                  "id": 300,
                                  "name": "FunctionCall",
                                  "src": "3752:29:0"
                                }
                              ],
                              "id": 301,
                              "name": "Assignment",
                              "src": "3736:45:0"
                            }
                          ],
                          "id": 302,
                          "name": "ExpressionStatement",
                          "src": "3736:45:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": ">",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 253,
                                    "type": "uint256",
                                    "value": "fee"
                                  },
                                  "id": 303,
                                  "name": "Identifier",
                                  "src": "3795:3:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "30",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "number",
                                    "type": "int_const 0",
                                    "value": "0"
                                  },
                                  "id": 304,
                                  "name": "Literal",
                                  "src": "3801:1:0"
                                }
                              ],
                              "id": 305,
                              "name": "BinaryOperation",
                              "src": "3795:7:0"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "=",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 216,
                                                "type": "mapping(address => uint256)",
                                                "value": "balances"
                                              },
                                              "id": 306,
                                              "name": "Identifier",
                                              "src": "3818:8:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 99,
                                                "type": "address",
                                                "value": "owner"
                                              },
                                              "id": 307,
                                              "name": "Identifier",
                                              "src": "3827:5:0"
                                            }
                                          ],
                                          "id": 308,
                                          "name": "IndexAccess",
                                          "src": "3818:15:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "isStructConstructorCall": false,
                                            "lValueRequested": false,
                                            "names": [
                                              null
                                            ],
                                            "type": "uint256",
                                            "type_conversion": false
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "add",
                                                "referencedDeclaration": 96,
                                                "type": "function (uint256,uint256) pure returns (uint256)"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "type": "uint256"
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "overloadedDeclarations": [
                                                          null
                                                        ],
                                                        "referencedDeclaration": 216,
                                                        "type": "mapping(address => uint256)",
                                                        "value": "balances"
                                                      },
                                                      "id": 309,
                                                      "name": "Identifier",
                                                      "src": "3836:8:0"
                                                    },
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "overloadedDeclarations": [
                                                          null
                                                        ],
                                                        "referencedDeclaration": 99,
                                                        "type": "address",
                                                        "value": "owner"
                                                      },
                                                      "id": 310,
                                                      "name": "Identifier",
                                                      "src": "3845:5:0"
                                                    }
                                                  ],
                                                  "id": 311,
                                                  "name": "IndexAccess",
                                                  "src": "3836:15:0"
                                                }
                                              ],
                                              "id": 312,
                                              "name": "MemberAccess",
                                              "src": "3836:19:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 253,
                                                "type": "uint256",
                                                "value": "fee"
                                              },
                                              "id": 313,
                                              "name": "Identifier",
                                              "src": "3856:3:0"
                                            }
                                          ],
                                          "id": 314,
                                          "name": "FunctionCall",
                                          "src": "3836:24:0"
                                        }
                                      ],
                                      "id": 315,
                                      "name": "Assignment",
                                      "src": "3818:42:0"
                                    }
                                  ],
                                  "id": 316,
                                  "name": "ExpressionStatement",
                                  "src": "3818:42:0"
                                },
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "tuple()",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 168,
                                            "type": "function (address,address,uint256)",
                                            "value": "Transfer"
                                          },
                                          "id": 317,
                                          "name": "Identifier",
                                          "src": "3874:8:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "sender",
                                            "referencedDeclaration": null,
                                            "type": "address"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1145,
                                                "type": "msg",
                                                "value": "msg"
                                              },
                                              "id": 318,
                                              "name": "Identifier",
                                              "src": "3883:3:0"
                                            }
                                          ],
                                          "id": 319,
                                          "name": "MemberAccess",
                                          "src": "3883:10:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 99,
                                            "type": "address",
                                            "value": "owner"
                                          },
                                          "id": 320,
                                          "name": "Identifier",
                                          "src": "3895:5:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 253,
                                            "type": "uint256",
                                            "value": "fee"
                                          },
                                          "id": 321,
                                          "name": "Identifier",
                                          "src": "3902:3:0"
                                        }
                                      ],
                                      "id": 322,
                                      "name": "FunctionCall",
                                      "src": "3874:32:0"
                                    }
                                  ],
                                  "id": 323,
                                  "name": "ExpressionStatement",
                                  "src": "3874:32:0"
                                }
                              ],
                              "id": 324,
                              "name": "Block",
                              "src": "3804:113:0"
                            }
                          ],
                          "id": 325,
                          "name": "IfStatement",
                          "src": "3791:126:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 168,
                                    "type": "function (address,address,uint256)",
                                    "value": "Transfer"
                                  },
                                  "id": 326,
                                  "name": "Identifier",
                                  "src": "3926:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1145,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 327,
                                      "name": "Identifier",
                                      "src": "3935:3:0"
                                    }
                                  ],
                                  "id": 328,
                                  "name": "MemberAccess",
                                  "src": "3935:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 242,
                                    "type": "address",
                                    "value": "_to"
                                  },
                                  "id": 329,
                                  "name": "Identifier",
                                  "src": "3947:3:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 273,
                                    "type": "uint256",
                                    "value": "sendAmount"
                                  },
                                  "id": 330,
                                  "name": "Identifier",
                                  "src": "3952:10:0"
                                }
                              ],
                              "id": 331,
                              "name": "FunctionCall",
                              "src": "3926:37:0"
                            }
                          ],
                          "id": 332,
                          "name": "ExpressionStatement",
                          "src": "3926:37:0"
                        }
                      ],
                      "id": 333,
                      "name": "Block",
                      "src": "3485:485:0"
                    }
                  ],
                  "id": 334,
                  "name": "FunctionDefinition",
                  "src": "3410:560:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "balanceOf",
                    "payable": false,
                    "scope": 347,
                    "stateMutability": "view",
                    "superFunction": 153,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_owner",
                            "scope": 346,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 335,
                              "name": "ElementaryTypeName",
                              "src": "4200:7:0"
                            }
                          ],
                          "id": 336,
                          "name": "VariableDeclaration",
                          "src": "4200:14:0"
                        }
                      ],
                      "id": 337,
                      "name": "ParameterList",
                      "src": "4199:16:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "balance",
                            "scope": 346,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 338,
                              "name": "ElementaryTypeName",
                              "src": "4241:4:0"
                            }
                          ],
                          "id": 339,
                          "name": "VariableDeclaration",
                          "src": "4241:12:0"
                        }
                      ],
                      "id": 340,
                      "name": "ParameterList",
                      "src": "4240:14:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 340
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 216,
                                    "type": "mapping(address => uint256)",
                                    "value": "balances"
                                  },
                                  "id": 341,
                                  "name": "Identifier",
                                  "src": "4272:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 336,
                                    "type": "address",
                                    "value": "_owner"
                                  },
                                  "id": 342,
                                  "name": "Identifier",
                                  "src": "4281:6:0"
                                }
                              ],
                              "id": 343,
                              "name": "IndexAccess",
                              "src": "4272:16:0"
                            }
                          ],
                          "id": 344,
                          "name": "Return",
                          "src": "4265:23:0"
                        }
                      ],
                      "id": 345,
                      "name": "Block",
                      "src": "4255:40:0"
                    }
                  ],
                  "id": 346,
                  "name": "FunctionDefinition",
                  "src": "4181:114:0"
                }
              ],
              "id": 347,
              "name": "ContractDefinition",
              "src": "2802:1496:0"
            },
            {
              "attributes": {
                "contractDependencies": [
                  139,
                  169,
                  205,
                  347
                ],
                "contractKind": "contract",
                "documentation": "@title Standard ERC20 token\n * @dev Implementation of the basic standard token.\n@dev https://github.com/ethereum/EIPs/issues/20\n@dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol",
                "fullyImplemented": false,
                "linearizedBaseContracts": [
                  546,
                  205,
                  347,
                  169,
                  139
                ],
                "name": "StandardToken",
                "scope": 1143
              },
              "children": [
                {
                  "attributes": {
                    "arguments": [
                      null
                    ]
                  },
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "BasicToken",
                        "referencedDeclaration": 347,
                        "type": "contract BasicToken"
                      },
                      "id": 348,
                      "name": "UserDefinedTypeName",
                      "src": "4592:10:0"
                    }
                  ],
                  "id": 349,
                  "name": "InheritanceSpecifier",
                  "src": "4592:10:0"
                },
                {
                  "attributes": {
                    "arguments": [
                      null
                    ]
                  },
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "ERC20",
                        "referencedDeclaration": 205,
                        "type": "contract ERC20"
                      },
                      "id": 350,
                      "name": "UserDefinedTypeName",
                      "src": "4604:5:0"
                    }
                  ],
                  "id": 351,
                  "name": "InheritanceSpecifier",
                  "src": "4604:5:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "allowed",
                    "scope": 546,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "mapping(address => mapping(address => uint256))",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "type": "mapping(address => mapping(address => uint256))"
                      },
                      "children": [
                        {
                          "attributes": {
                            "name": "address",
                            "type": "address"
                          },
                          "id": 352,
                          "name": "ElementaryTypeName",
                          "src": "4626:7:0"
                        },
                        {
                          "attributes": {
                            "type": "mapping(address => uint256)"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 353,
                              "name": "ElementaryTypeName",
                              "src": "4646:7:0"
                            },
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 354,
                              "name": "ElementaryTypeName",
                              "src": "4657:4:0"
                            }
                          ],
                          "id": 355,
                          "name": "Mapping",
                          "src": "4637:25:0"
                        }
                      ],
                      "id": 356,
                      "name": "Mapping",
                      "src": "4617:46:0"
                    }
                  ],
                  "id": 357,
                  "name": "VariableDeclaration",
                  "src": "4617:61:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "name": "MAX_UINT",
                    "scope": 546,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 358,
                      "name": "ElementaryTypeName",
                      "src": "4685:4:0"
                    },
                    {
                      "attributes": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                          "typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "operator": "-",
                        "type": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                              "typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "operator": "**",
                            "type": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "32",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "number",
                                "type": "int_const 2",
                                "value": "2"
                              },
                              "id": 359,
                              "name": "Literal",
                              "src": "4717:1:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "323536",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "number",
                                "type": "int_const 256",
                                "value": "256"
                              },
                              "id": 360,
                              "name": "Literal",
                              "src": "4720:3:0"
                            }
                          ],
                          "id": 361,
                          "name": "BinaryOperation",
                          "src": "4717:6:0"
                        },
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "hexvalue": "31",
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "subdenomination": null,
                            "token": "number",
                            "type": "int_const 1",
                            "value": "1"
                          },
                          "id": 362,
                          "name": "Literal",
                          "src": "4726:1:0"
                        }
                      ],
                      "id": 363,
                      "name": "BinaryOperation",
                      "src": "4717:10:0"
                    }
                  ],
                  "id": 364,
                  "name": "VariableDeclaration",
                  "src": "4685:42:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "name": "transferFrom",
                    "payable": false,
                    "scope": 546,
                    "stateMutability": "nonpayable",
                    "superFunction": 189,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_from",
                            "scope": 481,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 365,
                              "name": "ElementaryTypeName",
                              "src": "5031:7:0"
                            }
                          ],
                          "id": 366,
                          "name": "VariableDeclaration",
                          "src": "5031:13:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_to",
                            "scope": 481,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 367,
                              "name": "ElementaryTypeName",
                              "src": "5046:7:0"
                            }
                          ],
                          "id": 368,
                          "name": "VariableDeclaration",
                          "src": "5046:11:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_value",
                            "scope": 481,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 369,
                              "name": "ElementaryTypeName",
                              "src": "5059:4:0"
                            }
                          ],
                          "id": 370,
                          "name": "VariableDeclaration",
                          "src": "5059:11:0"
                        }
                      ],
                      "id": 371,
                      "name": "ParameterList",
                      "src": "5030:41:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 377,
                      "name": "ParameterList",
                      "src": "5103:0:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 240,
                            "type": "modifier (uint256)",
                            "value": "onlyPayloadSize"
                          },
                          "id": 372,
                          "name": "Identifier",
                          "src": "5079:15:0"
                        },
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_96_by_1",
                              "typeString": "int_const 96"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "operator": "*",
                            "type": "int_const 96"
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "33",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "number",
                                "type": "int_const 3",
                                "value": "3"
                              },
                              "id": 373,
                              "name": "Literal",
                              "src": "5095:1:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "3332",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "number",
                                "type": "int_const 32",
                                "value": "32"
                              },
                              "id": 374,
                              "name": "Literal",
                              "src": "5099:2:0"
                            }
                          ],
                          "id": 375,
                          "name": "BinaryOperation",
                          "src": "5095:6:0"
                        }
                      ],
                      "id": 376,
                      "name": "ModifierInvocation",
                      "src": "5079:23:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "assignments": [
                              378
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "_allowance",
                                "scope": 481,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "uint256",
                                "typeName": null,
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [],
                              "id": 378,
                              "name": "VariableDeclaration",
                              "src": "5113:14:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "type": "mapping(address => uint256)"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 357,
                                        "type": "mapping(address => mapping(address => uint256))",
                                        "value": "allowed"
                                      },
                                      "id": 379,
                                      "name": "Identifier",
                                      "src": "5130:7:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 366,
                                        "type": "address",
                                        "value": "_from"
                                      },
                                      "id": 380,
                                      "name": "Identifier",
                                      "src": "5138:5:0"
                                    }
                                  ],
                                  "id": 381,
                                  "name": "IndexAccess",
                                  "src": "5130:14:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1145,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 382,
                                      "name": "Identifier",
                                      "src": "5145:3:0"
                                    }
                                  ],
                                  "id": 383,
                                  "name": "MemberAccess",
                                  "src": "5145:10:0"
                                }
                              ],
                              "id": 384,
                              "name": "IndexAccess",
                              "src": "5130:26:0"
                            }
                          ],
                          "id": 385,
                          "name": "VariableDeclarationStatement",
                          "src": "5113:43:0"
                        },
                        {
                          "attributes": {
                            "assignments": [
                              387
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "fee",
                                "scope": 481,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "uint256",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "uint",
                                    "type": "uint256"
                                  },
                                  "id": 386,
                                  "name": "ElementaryTypeName",
                                  "src": "5322:4:0"
                                }
                              ],
                              "id": 387,
                              "name": "VariableDeclaration",
                              "src": "5322:8:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "uint256",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_10000_by_1",
                                        "typeString": "int_const 10000"
                                      }
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "div",
                                    "referencedDeclaration": 52,
                                    "type": "function (uint256,uint256) pure returns (uint256)"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "isStructConstructorCall": false,
                                            "lValueRequested": false,
                                            "names": [
                                              null
                                            ],
                                            "type": "uint256",
                                            "type_conversion": false
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "mul",
                                                "referencedDeclaration": 34,
                                                "type": "function (uint256,uint256) pure returns (uint256)"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 370,
                                                    "type": "uint256",
                                                    "value": "_value"
                                                  },
                                                  "id": 388,
                                                  "name": "Identifier",
                                                  "src": "5334:6:0"
                                                }
                                              ],
                                              "id": 389,
                                              "name": "MemberAccess",
                                              "src": "5334:10:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 219,
                                                "type": "uint256",
                                                "value": "basisPointsRate"
                                              },
                                              "id": 390,
                                              "name": "Identifier",
                                              "src": "5345:15:0"
                                            }
                                          ],
                                          "id": 391,
                                          "name": "FunctionCall",
                                          "src": "5334:27:0"
                                        }
                                      ],
                                      "id": 392,
                                      "name": "TupleExpression",
                                      "src": "5333:29:0"
                                    }
                                  ],
                                  "id": 393,
                                  "name": "MemberAccess",
                                  "src": "5333:33:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "3130303030",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "number",
                                    "type": "int_const 10000",
                                    "value": "10000"
                                  },
                                  "id": 394,
                                  "name": "Literal",
                                  "src": "5367:5:0"
                                }
                              ],
                              "id": 395,
                              "name": "FunctionCall",
                              "src": "5333:40:0"
                            }
                          ],
                          "id": 396,
                          "name": "VariableDeclarationStatement",
                          "src": "5322:51:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": ">",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 387,
                                    "type": "uint256",
                                    "value": "fee"
                                  },
                                  "id": 397,
                                  "name": "Identifier",
                                  "src": "5387:3:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 222,
                                    "type": "uint256",
                                    "value": "maximumFee"
                                  },
                                  "id": 398,
                                  "name": "Identifier",
                                  "src": "5393:10:0"
                                }
                              ],
                              "id": 399,
                              "name": "BinaryOperation",
                              "src": "5387:16:0"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "=",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 387,
                                            "type": "uint256",
                                            "value": "fee"
                                          },
                                          "id": 400,
                                          "name": "Identifier",
                                          "src": "5419:3:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 222,
                                            "type": "uint256",
                                            "value": "maximumFee"
                                          },
                                          "id": 401,
                                          "name": "Identifier",
                                          "src": "5425:10:0"
                                        }
                                      ],
                                      "id": 402,
                                      "name": "Assignment",
                                      "src": "5419:16:0"
                                    }
                                  ],
                                  "id": 403,
                                  "name": "ExpressionStatement",
                                  "src": "5419:16:0"
                                }
                              ],
                              "id": 404,
                              "name": "Block",
                              "src": "5405:41:0"
                            }
                          ],
                          "id": 405,
                          "name": "IfStatement",
                          "src": "5383:63:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "<",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 378,
                                    "type": "uint256",
                                    "value": "_allowance"
                                  },
                                  "id": 406,
                                  "name": "Identifier",
                                  "src": "5459:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 364,
                                    "type": "uint256",
                                    "value": "MAX_UINT"
                                  },
                                  "id": 407,
                                  "name": "Identifier",
                                  "src": "5472:8:0"
                                }
                              ],
                              "id": 408,
                              "name": "BinaryOperation",
                              "src": "5459:21:0"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "=",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "type": "mapping(address => uint256)"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 357,
                                                    "type": "mapping(address => mapping(address => uint256))",
                                                    "value": "allowed"
                                                  },
                                                  "id": 409,
                                                  "name": "Identifier",
                                                  "src": "5496:7:0"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 366,
                                                    "type": "address",
                                                    "value": "_from"
                                                  },
                                                  "id": 410,
                                                  "name": "Identifier",
                                                  "src": "5504:5:0"
                                                }
                                              ],
                                              "id": 413,
                                              "name": "IndexAccess",
                                              "src": "5496:14:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "sender",
                                                "referencedDeclaration": null,
                                                "type": "address"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 1145,
                                                    "type": "msg",
                                                    "value": "msg"
                                                  },
                                                  "id": 411,
                                                  "name": "Identifier",
                                                  "src": "5511:3:0"
                                                }
                                              ],
                                              "id": 412,
                                              "name": "MemberAccess",
                                              "src": "5511:10:0"
                                            }
                                          ],
                                          "id": 414,
                                          "name": "IndexAccess",
                                          "src": "5496:26:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "isStructConstructorCall": false,
                                            "lValueRequested": false,
                                            "names": [
                                              null
                                            ],
                                            "type": "uint256",
                                            "type_conversion": false
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "sub",
                                                "referencedDeclaration": 72,
                                                "type": "function (uint256,uint256) pure returns (uint256)"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 378,
                                                    "type": "uint256",
                                                    "value": "_allowance"
                                                  },
                                                  "id": 415,
                                                  "name": "Identifier",
                                                  "src": "5525:10:0"
                                                }
                                              ],
                                              "id": 416,
                                              "name": "MemberAccess",
                                              "src": "5525:14:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 370,
                                                "type": "uint256",
                                                "value": "_value"
                                              },
                                              "id": 417,
                                              "name": "Identifier",
                                              "src": "5540:6:0"
                                            }
                                          ],
                                          "id": 418,
                                          "name": "FunctionCall",
                                          "src": "5525:22:0"
                                        }
                                      ],
                                      "id": 419,
                                      "name": "Assignment",
                                      "src": "5496:51:0"
                                    }
                                  ],
                                  "id": 420,
                                  "name": "ExpressionStatement",
                                  "src": "5496:51:0"
                                }
                              ],
                              "id": 421,
                              "name": "Block",
                              "src": "5482:76:0"
                            }
                          ],
                          "id": 422,
                          "name": "IfStatement",
                          "src": "5455:103:0"
                        },
                        {
                          "attributes": {
                            "assignments": [
                              424
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "sendAmount",
                                "scope": 481,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "uint256",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "uint",
                                    "type": "uint256"
                                  },
                                  "id": 423,
                                  "name": "ElementaryTypeName",
                                  "src": "5567:4:0"
                                }
                              ],
                              "id": 424,
                              "name": "VariableDeclaration",
                              "src": "5567:15:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "uint256",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sub",
                                    "referencedDeclaration": 72,
                                    "type": "function (uint256,uint256) pure returns (uint256)"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 370,
                                        "type": "uint256",
                                        "value": "_value"
                                      },
                                      "id": 425,
                                      "name": "Identifier",
                                      "src": "5585:6:0"
                                    }
                                  ],
                                  "id": 426,
                                  "name": "MemberAccess",
                                  "src": "5585:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 387,
                                    "type": "uint256",
                                    "value": "fee"
                                  },
                                  "id": 427,
                                  "name": "Identifier",
                                  "src": "5596:3:0"
                                }
                              ],
                              "id": 428,
                              "name": "FunctionCall",
                              "src": "5585:15:0"
                            }
                          ],
                          "id": 429,
                          "name": "VariableDeclarationStatement",
                          "src": "5567:33:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 216,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 430,
                                      "name": "Identifier",
                                      "src": "5610:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 366,
                                        "type": "address",
                                        "value": "_from"
                                      },
                                      "id": 431,
                                      "name": "Identifier",
                                      "src": "5619:5:0"
                                    }
                                  ],
                                  "id": 432,
                                  "name": "IndexAccess",
                                  "src": "5610:15:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sub",
                                        "referencedDeclaration": 72,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 216,
                                                "type": "mapping(address => uint256)",
                                                "value": "balances"
                                              },
                                              "id": 433,
                                              "name": "Identifier",
                                              "src": "5628:8:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 366,
                                                "type": "address",
                                                "value": "_from"
                                              },
                                              "id": 434,
                                              "name": "Identifier",
                                              "src": "5637:5:0"
                                            }
                                          ],
                                          "id": 435,
                                          "name": "IndexAccess",
                                          "src": "5628:15:0"
                                        }
                                      ],
                                      "id": 436,
                                      "name": "MemberAccess",
                                      "src": "5628:19:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 370,
                                        "type": "uint256",
                                        "value": "_value"
                                      },
                                      "id": 437,
                                      "name": "Identifier",
                                      "src": "5648:6:0"
                                    }
                                  ],
                                  "id": 438,
                                  "name": "FunctionCall",
                                  "src": "5628:27:0"
                                }
                              ],
                              "id": 439,
                              "name": "Assignment",
                              "src": "5610:45:0"
                            }
                          ],
                          "id": 440,
                          "name": "ExpressionStatement",
                          "src": "5610:45:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 216,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 441,
                                      "name": "Identifier",
                                      "src": "5665:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 368,
                                        "type": "address",
                                        "value": "_to"
                                      },
                                      "id": 442,
                                      "name": "Identifier",
                                      "src": "5674:3:0"
                                    }
                                  ],
                                  "id": 443,
                                  "name": "IndexAccess",
                                  "src": "5665:13:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "add",
                                        "referencedDeclaration": 96,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 216,
                                                "type": "mapping(address => uint256)",
                                                "value": "balances"
                                              },
                                              "id": 444,
                                              "name": "Identifier",
                                              "src": "5681:8:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 368,
                                                "type": "address",
                                                "value": "_to"
                                              },
                                              "id": 445,
                                              "name": "Identifier",
                                              "src": "5690:3:0"
                                            }
                                          ],
                                          "id": 446,
                                          "name": "IndexAccess",
                                          "src": "5681:13:0"
                                        }
                                      ],
                                      "id": 447,
                                      "name": "MemberAccess",
                                      "src": "5681:17:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 424,
                                        "type": "uint256",
                                        "value": "sendAmount"
                                      },
                                      "id": 448,
                                      "name": "Identifier",
                                      "src": "5699:10:0"
                                    }
                                  ],
                                  "id": 449,
                                  "name": "FunctionCall",
                                  "src": "5681:29:0"
                                }
                              ],
                              "id": 450,
                              "name": "Assignment",
                              "src": "5665:45:0"
                            }
                          ],
                          "id": 451,
                          "name": "ExpressionStatement",
                          "src": "5665:45:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": ">",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 387,
                                    "type": "uint256",
                                    "value": "fee"
                                  },
                                  "id": 452,
                                  "name": "Identifier",
                                  "src": "5724:3:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "30",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "number",
                                    "type": "int_const 0",
                                    "value": "0"
                                  },
                                  "id": 453,
                                  "name": "Literal",
                                  "src": "5730:1:0"
                                }
                              ],
                              "id": 454,
                              "name": "BinaryOperation",
                              "src": "5724:7:0"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "=",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 216,
                                                "type": "mapping(address => uint256)",
                                                "value": "balances"
                                              },
                                              "id": 455,
                                              "name": "Identifier",
                                              "src": "5747:8:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 99,
                                                "type": "address",
                                                "value": "owner"
                                              },
                                              "id": 456,
                                              "name": "Identifier",
                                              "src": "5756:5:0"
                                            }
                                          ],
                                          "id": 457,
                                          "name": "IndexAccess",
                                          "src": "5747:15:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "isStructConstructorCall": false,
                                            "lValueRequested": false,
                                            "names": [
                                              null
                                            ],
                                            "type": "uint256",
                                            "type_conversion": false
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "add",
                                                "referencedDeclaration": 96,
                                                "type": "function (uint256,uint256) pure returns (uint256)"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "type": "uint256"
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "overloadedDeclarations": [
                                                          null
                                                        ],
                                                        "referencedDeclaration": 216,
                                                        "type": "mapping(address => uint256)",
                                                        "value": "balances"
                                                      },
                                                      "id": 458,
                                                      "name": "Identifier",
                                                      "src": "5765:8:0"
                                                    },
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "overloadedDeclarations": [
                                                          null
                                                        ],
                                                        "referencedDeclaration": 99,
                                                        "type": "address",
                                                        "value": "owner"
                                                      },
                                                      "id": 459,
                                                      "name": "Identifier",
                                                      "src": "5774:5:0"
                                                    }
                                                  ],
                                                  "id": 460,
                                                  "name": "IndexAccess",
                                                  "src": "5765:15:0"
                                                }
                                              ],
                                              "id": 461,
                                              "name": "MemberAccess",
                                              "src": "5765:19:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 387,
                                                "type": "uint256",
                                                "value": "fee"
                                              },
                                              "id": 462,
                                              "name": "Identifier",
                                              "src": "5785:3:0"
                                            }
                                          ],
                                          "id": 463,
                                          "name": "FunctionCall",
                                          "src": "5765:24:0"
                                        }
                                      ],
                                      "id": 464,
                                      "name": "Assignment",
                                      "src": "5747:42:0"
                                    }
                                  ],
                                  "id": 465,
                                  "name": "ExpressionStatement",
                                  "src": "5747:42:0"
                                },
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "tuple()",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 168,
                                            "type": "function (address,address,uint256)",
                                            "value": "Transfer"
                                          },
                                          "id": 466,
                                          "name": "Identifier",
                                          "src": "5803:8:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 366,
                                            "type": "address",
                                            "value": "_from"
                                          },
                                          "id": 467,
                                          "name": "Identifier",
                                          "src": "5812:5:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 99,
                                            "type": "address",
                                            "value": "owner"
                                          },
                                          "id": 468,
                                          "name": "Identifier",
                                          "src": "5819:5:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 387,
                                            "type": "uint256",
                                            "value": "fee"
                                          },
                                          "id": 469,
                                          "name": "Identifier",
                                          "src": "5826:3:0"
                                        }
                                      ],
                                      "id": 470,
                                      "name": "FunctionCall",
                                      "src": "5803:27:0"
                                    }
                                  ],
                                  "id": 471,
                                  "name": "ExpressionStatement",
                                  "src": "5803:27:0"
                                }
                              ],
                              "id": 472,
                              "name": "Block",
                              "src": "5733:108:0"
                            }
                          ],
                          "id": 473,
                          "name": "IfStatement",
                          "src": "5720:121:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 168,
                                    "type": "function (address,address,uint256)",
                                    "value": "Transfer"
                                  },
                                  "id": 474,
                                  "name": "Identifier",
                                  "src": "5850:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 366,
                                    "type": "address",
                                    "value": "_from"
                                  },
                                  "id": 475,
                                  "name": "Identifier",
                                  "src": "5859:5:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 368,
                                    "type": "address",
                                    "value": "_to"
                                  },
                                  "id": 476,
                                  "name": "Identifier",
                                  "src": "5866:3:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 424,
                                    "type": "uint256",
                                    "value": "sendAmount"
                                  },
                                  "id": 477,
                                  "name": "Identifier",
                                  "src": "5871:10:0"
                                }
                              ],
                              "id": 478,
                              "name": "FunctionCall",
                              "src": "5850:32:0"
                            }
                          ],
                          "id": 479,
                          "name": "ExpressionStatement",
                          "src": "5850:32:0"
                        }
                      ],
                      "id": 480,
                      "name": "Block",
                      "src": "5103:786:0"
                    }
                  ],
                  "id": 481,
                  "name": "FunctionDefinition",
                  "src": "5009:880:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "name": "approve",
                    "payable": false,
                    "scope": 546,
                    "stateMutability": "nonpayable",
                    "superFunction": 196,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_spender",
                            "scope": 529,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 482,
                              "name": "ElementaryTypeName",
                              "src": "6146:7:0"
                            }
                          ],
                          "id": 483,
                          "name": "VariableDeclaration",
                          "src": "6146:16:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_value",
                            "scope": 529,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 484,
                              "name": "ElementaryTypeName",
                              "src": "6164:4:0"
                            }
                          ],
                          "id": 485,
                          "name": "VariableDeclaration",
                          "src": "6164:11:0"
                        }
                      ],
                      "id": 486,
                      "name": "ParameterList",
                      "src": "6145:31:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 492,
                      "name": "ParameterList",
                      "src": "6208:0:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 240,
                            "type": "modifier (uint256)",
                            "value": "onlyPayloadSize"
                          },
                          "id": 487,
                          "name": "Identifier",
                          "src": "6184:15:0"
                        },
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_64_by_1",
                              "typeString": "int_const 64"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "operator": "*",
                            "type": "int_const 64"
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "32",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "number",
                                "type": "int_const 2",
                                "value": "2"
                              },
                              "id": 488,
                              "name": "Literal",
                              "src": "6200:1:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "3332",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "number",
                                "type": "int_const 32",
                                "value": "32"
                              },
                              "id": 489,
                              "name": "Literal",
                              "src": "6204:2:0"
                            }
                          ],
                          "id": 490,
                          "name": "BinaryOperation",
                          "src": "6200:6:0"
                        }
                      ],
                      "id": 491,
                      "name": "ModifierInvocation",
                      "src": "6184:23:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1163,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 493,
                                  "name": "Identifier",
                                  "src": "6523:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "!",
                                    "prefix": true,
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "bool"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "operator": "&&",
                                            "type": "bool"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "type": "bool"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "operator": "!=",
                                                    "type": "bool"
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "overloadedDeclarations": [
                                                          null
                                                        ],
                                                        "referencedDeclaration": 485,
                                                        "type": "uint256",
                                                        "value": "_value"
                                                      },
                                                      "id": 494,
                                                      "name": "Identifier",
                                                      "src": "6534:6:0"
                                                    },
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "hexvalue": "30",
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "subdenomination": null,
                                                        "token": "number",
                                                        "type": "int_const 0",
                                                        "value": "0"
                                                      },
                                                      "id": 495,
                                                      "name": "Literal",
                                                      "src": "6544:1:0"
                                                    }
                                                  ],
                                                  "id": 496,
                                                  "name": "BinaryOperation",
                                                  "src": "6534:11:0"
                                                }
                                              ],
                                              "id": 497,
                                              "name": "TupleExpression",
                                              "src": "6533:13:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "type": "bool"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "operator": "!=",
                                                    "type": "bool"
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "type": "uint256"
                                                      },
                                                      "children": [
                                                        {
                                                          "attributes": {
                                                            "argumentTypes": null,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "type": "mapping(address => uint256)"
                                                          },
                                                          "children": [
                                                            {
                                                              "attributes": {
                                                                "argumentTypes": null,
                                                                "overloadedDeclarations": [
                                                                  null
                                                                ],
                                                                "referencedDeclaration": 357,
                                                                "type": "mapping(address => mapping(address => uint256))",
                                                                "value": "allowed"
                                                              },
                                                              "id": 498,
                                                              "name": "Identifier",
                                                              "src": "6551:7:0"
                                                            },
                                                            {
                                                              "attributes": {
                                                                "argumentTypes": null,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "member_name": "sender",
                                                                "referencedDeclaration": null,
                                                                "type": "address"
                                                              },
                                                              "children": [
                                                                {
                                                                  "attributes": {
                                                                    "argumentTypes": null,
                                                                    "overloadedDeclarations": [
                                                                      null
                                                                    ],
                                                                    "referencedDeclaration": 1145,
                                                                    "type": "msg",
                                                                    "value": "msg"
                                                                  },
                                                                  "id": 499,
                                                                  "name": "Identifier",
                                                                  "src": "6559:3:0"
                                                                }
                                                              ],
                                                              "id": 500,
                                                              "name": "MemberAccess",
                                                              "src": "6559:10:0"
                                                            }
                                                          ],
                                                          "id": 501,
                                                          "name": "IndexAccess",
                                                          "src": "6551:19:0"
                                                        },
                                                        {
                                                          "attributes": {
                                                            "argumentTypes": null,
                                                            "overloadedDeclarations": [
                                                              null
                                                            ],
                                                            "referencedDeclaration": 483,
                                                            "type": "address",
                                                            "value": "_spender"
                                                          },
                                                          "id": 502,
                                                          "name": "Identifier",
                                                          "src": "6571:8:0"
                                                        }
                                                      ],
                                                      "id": 503,
                                                      "name": "IndexAccess",
                                                      "src": "6551:29:0"
                                                    },
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "hexvalue": "30",
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "subdenomination": null,
                                                        "token": "number",
                                                        "type": "int_const 0",
                                                        "value": "0"
                                                      },
                                                      "id": 504,
                                                      "name": "Literal",
                                                      "src": "6584:1:0"
                                                    }
                                                  ],
                                                  "id": 505,
                                                  "name": "BinaryOperation",
                                                  "src": "6551:34:0"
                                                }
                                              ],
                                              "id": 506,
                                              "name": "TupleExpression",
                                              "src": "6550:36:0"
                                            }
                                          ],
                                          "id": 507,
                                          "name": "BinaryOperation",
                                          "src": "6533:53:0"
                                        }
                                      ],
                                      "id": 508,
                                      "name": "TupleExpression",
                                      "src": "6532:55:0"
                                    }
                                  ],
                                  "id": 509,
                                  "name": "UnaryOperation",
                                  "src": "6531:56:0"
                                }
                              ],
                              "id": 510,
                              "name": "FunctionCall",
                              "src": "6523:65:0"
                            }
                          ],
                          "id": 511,
                          "name": "ExpressionStatement",
                          "src": "6523:65:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "mapping(address => uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 357,
                                            "type": "mapping(address => mapping(address => uint256))",
                                            "value": "allowed"
                                          },
                                          "id": 512,
                                          "name": "Identifier",
                                          "src": "6599:7:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "sender",
                                            "referencedDeclaration": null,
                                            "type": "address"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1145,
                                                "type": "msg",
                                                "value": "msg"
                                              },
                                              "id": 513,
                                              "name": "Identifier",
                                              "src": "6607:3:0"
                                            }
                                          ],
                                          "id": 514,
                                          "name": "MemberAccess",
                                          "src": "6607:10:0"
                                        }
                                      ],
                                      "id": 516,
                                      "name": "IndexAccess",
                                      "src": "6599:19:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 483,
                                        "type": "address",
                                        "value": "_spender"
                                      },
                                      "id": 515,
                                      "name": "Identifier",
                                      "src": "6619:8:0"
                                    }
                                  ],
                                  "id": 517,
                                  "name": "IndexAccess",
                                  "src": "6599:29:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 485,
                                    "type": "uint256",
                                    "value": "_value"
                                  },
                                  "id": 518,
                                  "name": "Identifier",
                                  "src": "6631:6:0"
                                }
                              ],
                              "id": 519,
                              "name": "Assignment",
                              "src": "6599:38:0"
                            }
                          ],
                          "id": 520,
                          "name": "ExpressionStatement",
                          "src": "6599:38:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 204,
                                    "type": "function (address,address,uint256)",
                                    "value": "Approval"
                                  },
                                  "id": 521,
                                  "name": "Identifier",
                                  "src": "6647:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1145,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 522,
                                      "name": "Identifier",
                                      "src": "6656:3:0"
                                    }
                                  ],
                                  "id": 523,
                                  "name": "MemberAccess",
                                  "src": "6656:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 483,
                                    "type": "address",
                                    "value": "_spender"
                                  },
                                  "id": 524,
                                  "name": "Identifier",
                                  "src": "6668:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 485,
                                    "type": "uint256",
                                    "value": "_value"
                                  },
                                  "id": 525,
                                  "name": "Identifier",
                                  "src": "6678:6:0"
                                }
                              ],
                              "id": 526,
                              "name": "FunctionCall",
                              "src": "6647:38:0"
                            }
                          ],
                          "id": 527,
                          "name": "ExpressionStatement",
                          "src": "6647:38:0"
                        }
                      ],
                      "id": 528,
                      "name": "Block",
                      "src": "6208:484:0"
                    }
                  ],
                  "id": 529,
                  "name": "FunctionDefinition",
                  "src": "6129:563:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "allowance",
                    "payable": false,
                    "scope": 546,
                    "stateMutability": "view",
                    "superFunction": 180,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_owner",
                            "scope": 545,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 530,
                              "name": "ElementaryTypeName",
                              "src": "7036:7:0"
                            }
                          ],
                          "id": 531,
                          "name": "VariableDeclaration",
                          "src": "7036:14:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_spender",
                            "scope": 545,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 532,
                              "name": "ElementaryTypeName",
                              "src": "7052:7:0"
                            }
                          ],
                          "id": 533,
                          "name": "VariableDeclaration",
                          "src": "7052:16:0"
                        }
                      ],
                      "id": 534,
                      "name": "ParameterList",
                      "src": "7035:34:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "remaining",
                            "scope": 545,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 535,
                              "name": "ElementaryTypeName",
                              "src": "7095:4:0"
                            }
                          ],
                          "id": 536,
                          "name": "VariableDeclaration",
                          "src": "7095:14:0"
                        }
                      ],
                      "id": 537,
                      "name": "ParameterList",
                      "src": "7094:16:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 537
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "type": "mapping(address => uint256)"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 357,
                                        "type": "mapping(address => mapping(address => uint256))",
                                        "value": "allowed"
                                      },
                                      "id": 538,
                                      "name": "Identifier",
                                      "src": "7128:7:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 531,
                                        "type": "address",
                                        "value": "_owner"
                                      },
                                      "id": 539,
                                      "name": "Identifier",
                                      "src": "7136:6:0"
                                    }
                                  ],
                                  "id": 540,
                                  "name": "IndexAccess",
                                  "src": "7128:15:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 533,
                                    "type": "address",
                                    "value": "_spender"
                                  },
                                  "id": 541,
                                  "name": "Identifier",
                                  "src": "7144:8:0"
                                }
                              ],
                              "id": 542,
                              "name": "IndexAccess",
                              "src": "7128:25:0"
                            }
                          ],
                          "id": 543,
                          "name": "Return",
                          "src": "7121:32:0"
                        }
                      ],
                      "id": 544,
                      "name": "Block",
                      "src": "7111:49:0"
                    }
                  ],
                  "id": 545,
                  "name": "FunctionDefinition",
                  "src": "7017:143:0"
                }
              ],
              "id": 546,
              "name": "ContractDefinition",
              "src": "4566:2597:0"
            },
            {
              "attributes": {
                "contractDependencies": [
                  139
                ],
                "contractKind": "contract",
                "documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                  603,
                  139
                ],
                "name": "Pausable",
                "scope": 1143
              },
              "children": [
                {
                  "attributes": {
                    "arguments": [
                      null
                    ]
                  },
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "Ownable",
                        "referencedDeclaration": 139,
                        "type": "contract Ownable"
                      },
                      "id": 547,
                      "name": "UserDefinedTypeName",
                      "src": "7300:7:0"
                    }
                  ],
                  "id": 548,
                  "name": "InheritanceSpecifier",
                  "src": "7300:7:0"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "Pause"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 549,
                      "name": "ParameterList",
                      "src": "7323:2:0"
                    }
                  ],
                  "id": 550,
                  "name": "EventDefinition",
                  "src": "7312:14:0"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "Unpause"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 551,
                      "name": "ParameterList",
                      "src": "7342:2:0"
                    }
                  ],
                  "id": 552,
                  "name": "EventDefinition",
                  "src": "7329:16:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "paused",
                    "scope": 603,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "bool",
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "bool",
                        "type": "bool"
                      },
                      "id": 553,
                      "name": "ElementaryTypeName",
                      "src": "7349:4:0"
                    },
                    {
                      "attributes": {
                        "argumentTypes": null,
                        "hexvalue": "66616c7365",
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "subdenomination": null,
                        "token": "bool",
                        "type": "bool",
                        "value": "false"
                      },
                      "id": 554,
                      "name": "Literal",
                      "src": "7370:5:0"
                    }
                  ],
                  "id": 555,
                  "name": "VariableDeclaration",
                  "src": "7349:26:0"
                },
                {
                  "attributes": {
                    "name": "whenNotPaused",
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 556,
                      "name": "ParameterList",
                      "src": "7500:2:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1163,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 557,
                                  "name": "Identifier",
                                  "src": "7509:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "!",
                                    "prefix": true,
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 555,
                                        "type": "bool",
                                        "value": "paused"
                                      },
                                      "id": 558,
                                      "name": "Identifier",
                                      "src": "7518:6:0"
                                    }
                                  ],
                                  "id": 559,
                                  "name": "UnaryOperation",
                                  "src": "7517:7:0"
                                }
                              ],
                              "id": 560,
                              "name": "FunctionCall",
                              "src": "7509:16:0"
                            }
                          ],
                          "id": 561,
                          "name": "ExpressionStatement",
                          "src": "7509:16:0"
                        },
                        {
                          "id": 562,
                          "name": "PlaceholderStatement",
                          "src": "7531:1:0"
                        }
                      ],
                      "id": 563,
                      "name": "Block",
                      "src": "7503:34:0"
                    }
                  ],
                  "id": 564,
                  "name": "ModifierDefinition",
                  "src": "7478:59:0"
                },
                {
                  "attributes": {
                    "name": "whenPaused",
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 565,
                      "name": "ParameterList",
                      "src": "7653:2:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1163,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 566,
                                  "name": "Identifier",
                                  "src": "7662:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 555,
                                    "type": "bool",
                                    "value": "paused"
                                  },
                                  "id": 567,
                                  "name": "Identifier",
                                  "src": "7670:6:0"
                                }
                              ],
                              "id": 568,
                              "name": "FunctionCall",
                              "src": "7662:15:0"
                            }
                          ],
                          "id": 569,
                          "name": "ExpressionStatement",
                          "src": "7662:15:0"
                        },
                        {
                          "id": 570,
                          "name": "PlaceholderStatement",
                          "src": "7683:1:0"
                        }
                      ],
                      "id": 571,
                      "name": "Block",
                      "src": "7656:33:0"
                    }
                  ],
                  "id": 572,
                  "name": "ModifierDefinition",
                  "src": "7634:55:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "name": "pause",
                    "payable": false,
                    "scope": 603,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 573,
                      "name": "ParameterList",
                      "src": "7782:2:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 578,
                      "name": "ParameterList",
                      "src": "7816:0:0"
                    },
                    {
                      "attributes": {
                        "arguments": [
                          null
                        ]
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 119,
                            "type": "modifier ()",
                            "value": "onlyOwner"
                          },
                          "id": 574,
                          "name": "Identifier",
                          "src": "7785:9:0"
                        }
                      ],
                      "id": 575,
                      "name": "ModifierInvocation",
                      "src": "7785:9:0"
                    },
                    {
                      "attributes": {
                        "arguments": [
                          null
                        ]
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 564,
                            "type": "modifier ()",
                            "value": "whenNotPaused"
                          },
                          "id": 576,
                          "name": "Identifier",
                          "src": "7795:13:0"
                        }
                      ],
                      "id": 577,
                      "name": "ModifierInvocation",
                      "src": "7795:13:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 555,
                                    "type": "bool",
                                    "value": "paused"
                                  },
                                  "id": 579,
                                  "name": "Identifier",
                                  "src": "7822:6:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "74727565",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "bool",
                                    "type": "bool",
                                    "value": "true"
                                  },
                                  "id": 580,
                                  "name": "Literal",
                                  "src": "7831:4:0"
                                }
                              ],
                              "id": 581,
                              "name": "Assignment",
                              "src": "7822:13:0"
                            }
                          ],
                          "id": 582,
                          "name": "ExpressionStatement",
                          "src": "7822:13:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "arguments": [
                                  null
                                ],
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      null
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 550,
                                    "type": "function ()",
                                    "value": "Pause"
                                  },
                                  "id": 583,
                                  "name": "Identifier",
                                  "src": "7841:5:0"
                                }
                              ],
                              "id": 584,
                              "name": "FunctionCall",
                              "src": "7841:7:0"
                            }
                          ],
                          "id": 585,
                          "name": "ExpressionStatement",
                          "src": "7841:7:0"
                        }
                      ],
                      "id": 586,
                      "name": "Block",
                      "src": "7816:37:0"
                    }
                  ],
                  "id": 587,
                  "name": "FunctionDefinition",
                  "src": "7768:85:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "name": "unpause",
                    "payable": false,
                    "scope": 603,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 588,
                      "name": "ParameterList",
                      "src": "7951:2:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 593,
                      "name": "ParameterList",
                      "src": "7982:0:0"
                    },
                    {
                      "attributes": {
                        "arguments": [
                          null
                        ]
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 119,
                            "type": "modifier ()",
                            "value": "onlyOwner"
                          },
                          "id": 589,
                          "name": "Identifier",
                          "src": "7954:9:0"
                        }
                      ],
                      "id": 590,
                      "name": "ModifierInvocation",
                      "src": "7954:9:0"
                    },
                    {
                      "attributes": {
                        "arguments": [
                          null
                        ]
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 572,
                            "type": "modifier ()",
                            "value": "whenPaused"
                          },
                          "id": 591,
                          "name": "Identifier",
                          "src": "7964:10:0"
                        }
                      ],
                      "id": 592,
                      "name": "ModifierInvocation",
                      "src": "7964:10:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 555,
                                    "type": "bool",
                                    "value": "paused"
                                  },
                                  "id": 594,
                                  "name": "Identifier",
                                  "src": "7988:6:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "66616c7365",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "bool",
                                    "type": "bool",
                                    "value": "false"
                                  },
                                  "id": 595,
                                  "name": "Literal",
                                  "src": "7997:5:0"
                                }
                              ],
                              "id": 596,
                              "name": "Assignment",
                              "src": "7988:14:0"
                            }
                          ],
                          "id": 597,
                          "name": "ExpressionStatement",
                          "src": "7988:14:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "arguments": [
                                  null
                                ],
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      null
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 552,
                                    "type": "function ()",
                                    "value": "Unpause"
                                  },
                                  "id": 598,
                                  "name": "Identifier",
                                  "src": "8008:7:0"
                                }
                              ],
                              "id": 599,
                              "name": "FunctionCall",
                              "src": "8008:9:0"
                            }
                          ],
                          "id": 600,
                          "name": "ExpressionStatement",
                          "src": "8008:9:0"
                        }
                      ],
                      "id": 601,
                      "name": "Block",
                      "src": "7982:40:0"
                    }
                  ],
                  "id": 602,
                  "name": "FunctionDefinition",
                  "src": "7935:87:0"
                }
              ],
              "id": 603,
              "name": "ContractDefinition",
              "src": "7279:745:0"
            },
            {
              "attributes": {
                "contractDependencies": [
                  139,
                  169,
                  347
                ],
                "contractKind": "contract",
                "documentation": null,
                "fullyImplemented": false,
                "linearizedBaseContracts": [
                  717,
                  347,
                  169,
                  139
                ],
                "name": "BlackList",
                "scope": 1143
              },
              "children": [
                {
                  "attributes": {
                    "arguments": [
                      null
                    ]
                  },
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "Ownable",
                        "referencedDeclaration": 139,
                        "type": "contract Ownable"
                      },
                      "id": 604,
                      "name": "UserDefinedTypeName",
                      "src": "8048:7:0"
                    }
                  ],
                  "id": 605,
                  "name": "InheritanceSpecifier",
                  "src": "8048:7:0"
                },
                {
                  "attributes": {
                    "arguments": [
                      null
                    ]
                  },
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "BasicToken",
                        "referencedDeclaration": 347,
                        "type": "contract BasicToken"
                      },
                      "id": 606,
                      "name": "UserDefinedTypeName",
                      "src": "8057:10:0"
                    }
                  ],
                  "id": 607,
                  "name": "InheritanceSpecifier",
                  "src": "8057:10:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "getBlackListStatus",
                    "payable": false,
                    "scope": 717,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "external"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_maker",
                            "scope": 619,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 608,
                              "name": "ElementaryTypeName",
                              "src": "8222:7:0"
                            }
                          ],
                          "id": 609,
                          "name": "VariableDeclaration",
                          "src": "8222:14:0"
                        }
                      ],
                      "id": 610,
                      "name": "ParameterList",
                      "src": "8221:16:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 619,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 611,
                              "name": "ElementaryTypeName",
                              "src": "8265:4:0"
                            }
                          ],
                          "id": 612,
                          "name": "VariableDeclaration",
                          "src": "8265:4:0"
                        }
                      ],
                      "id": 613,
                      "name": "ParameterList",
                      "src": "8264:6:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 613
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 631,
                                    "type": "mapping(address => bool)",
                                    "value": "isBlackListed"
                                  },
                                  "id": 614,
                                  "name": "Identifier",
                                  "src": "8288:13:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 609,
                                    "type": "address",
                                    "value": "_maker"
                                  },
                                  "id": 615,
                                  "name": "Identifier",
                                  "src": "8302:6:0"
                                }
                              ],
                              "id": 616,
                              "name": "IndexAccess",
                              "src": "8288:21:0"
                            }
                          ],
                          "id": 617,
                          "name": "Return",
                          "src": "8281:28:0"
                        }
                      ],
                      "id": 618,
                      "name": "Block",
                      "src": "8271:45:0"
                    }
                  ],
                  "id": 619,
                  "name": "FunctionDefinition",
                  "src": "8194:122:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "getOwner",
                    "payable": false,
                    "scope": 717,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "external"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 620,
                      "name": "ParameterList",
                      "src": "8339:2:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 627,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 621,
                              "name": "ElementaryTypeName",
                              "src": "8369:7:0"
                            }
                          ],
                          "id": 622,
                          "name": "VariableDeclaration",
                          "src": "8369:7:0"
                        }
                      ],
                      "id": 623,
                      "name": "ParameterList",
                      "src": "8368:9:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 623
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 99,
                                "type": "address",
                                "value": "owner"
                              },
                              "id": 624,
                              "name": "Identifier",
                              "src": "8395:5:0"
                            }
                          ],
                          "id": 625,
                          "name": "Return",
                          "src": "8388:12:0"
                        }
                      ],
                      "id": 626,
                      "name": "Block",
                      "src": "8378:29:0"
                    }
                  ],
                  "id": 627,
                  "name": "FunctionDefinition",
                  "src": "8322:85:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "isBlackListed",
                    "scope": 717,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "mapping(address => bool)",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "type": "mapping(address => bool)"
                      },
                      "children": [
                        {
                          "attributes": {
                            "name": "address",
                            "type": "address"
                          },
                          "id": 628,
                          "name": "ElementaryTypeName",
                          "src": "8422:7:0"
                        },
                        {
                          "attributes": {
                            "name": "bool",
                            "type": "bool"
                          },
                          "id": 629,
                          "name": "ElementaryTypeName",
                          "src": "8433:4:0"
                        }
                      ],
                      "id": 630,
                      "name": "Mapping",
                      "src": "8413:25:0"
                    }
                  ],
                  "id": 631,
                  "name": "VariableDeclaration",
                  "src": "8413:46:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "name": "addBlackList",
                    "payable": false,
                    "scope": 717,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_evilUser",
                            "scope": 649,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 632,
                              "name": "ElementaryTypeName",
                              "src": "8493:7:0"
                            }
                          ],
                          "id": 633,
                          "name": "VariableDeclaration",
                          "src": "8493:17:0"
                        }
                      ],
                      "id": 634,
                      "name": "ParameterList",
                      "src": "8492:19:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 637,
                      "name": "ParameterList",
                      "src": "8529:0:0"
                    },
                    {
                      "attributes": {
                        "arguments": [
                          null
                        ]
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 119,
                            "type": "modifier ()",
                            "value": "onlyOwner"
                          },
                          "id": 635,
                          "name": "Identifier",
                          "src": "8519:9:0"
                        }
                      ],
                      "id": 636,
                      "name": "ModifierInvocation",
                      "src": "8519:9:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 631,
                                        "type": "mapping(address => bool)",
                                        "value": "isBlackListed"
                                      },
                                      "id": 638,
                                      "name": "Identifier",
                                      "src": "8539:13:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 633,
                                        "type": "address",
                                        "value": "_evilUser"
                                      },
                                      "id": 639,
                                      "name": "Identifier",
                                      "src": "8553:9:0"
                                    }
                                  ],
                                  "id": 640,
                                  "name": "IndexAccess",
                                  "src": "8539:24:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "74727565",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "bool",
                                    "type": "bool",
                                    "value": "true"
                                  },
                                  "id": 641,
                                  "name": "Literal",
                                  "src": "8566:4:0"
                                }
                              ],
                              "id": 642,
                              "name": "Assignment",
                              "src": "8539:31:0"
                            }
                          ],
                          "id": 643,
                          "name": "ExpressionStatement",
                          "src": "8539:31:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 712,
                                    "type": "function (address)",
                                    "value": "AddedBlackList"
                                  },
                                  "id": 644,
                                  "name": "Identifier",
                                  "src": "8580:14:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 633,
                                    "type": "address",
                                    "value": "_evilUser"
                                  },
                                  "id": 645,
                                  "name": "Identifier",
                                  "src": "8595:9:0"
                                }
                              ],
                              "id": 646,
                              "name": "FunctionCall",
                              "src": "8580:25:0"
                            }
                          ],
                          "id": 647,
                          "name": "ExpressionStatement",
                          "src": "8580:25:0"
                        }
                      ],
                      "id": 648,
                      "name": "Block",
                      "src": "8529:83:0"
                    }
                  ],
                  "id": 649,
                  "name": "FunctionDefinition",
                  "src": "8470:142:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "name": "removeBlackList",
                    "payable": false,
                    "scope": 717,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_clearedUser",
                            "scope": 667,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 650,
                              "name": "ElementaryTypeName",
                              "src": "8644:7:0"
                            }
                          ],
                          "id": 651,
                          "name": "VariableDeclaration",
                          "src": "8644:20:0"
                        }
                      ],
                      "id": 652,
                      "name": "ParameterList",
                      "src": "8643:22:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 655,
                      "name": "ParameterList",
                      "src": "8683:0:0"
                    },
                    {
                      "attributes": {
                        "arguments": [
                          null
                        ]
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 119,
                            "type": "modifier ()",
                            "value": "onlyOwner"
                          },
                          "id": 653,
                          "name": "Identifier",
                          "src": "8673:9:0"
                        }
                      ],
                      "id": 654,
                      "name": "ModifierInvocation",
                      "src": "8673:9:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 631,
                                        "type": "mapping(address => bool)",
                                        "value": "isBlackListed"
                                      },
                                      "id": 656,
                                      "name": "Identifier",
                                      "src": "8693:13:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 651,
                                        "type": "address",
                                        "value": "_clearedUser"
                                      },
                                      "id": 657,
                                      "name": "Identifier",
                                      "src": "8707:12:0"
                                    }
                                  ],
                                  "id": 658,
                                  "name": "IndexAccess",
                                  "src": "8693:27:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "66616c7365",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "bool",
                                    "type": "bool",
                                    "value": "false"
                                  },
                                  "id": 659,
                                  "name": "Literal",
                                  "src": "8723:5:0"
                                }
                              ],
                              "id": 660,
                              "name": "Assignment",
                              "src": "8693:35:0"
                            }
                          ],
                          "id": 661,
                          "name": "ExpressionStatement",
                          "src": "8693:35:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 716,
                                    "type": "function (address)",
                                    "value": "RemovedBlackList"
                                  },
                                  "id": 662,
                                  "name": "Identifier",
                                  "src": "8738:16:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 651,
                                    "type": "address",
                                    "value": "_clearedUser"
                                  },
                                  "id": 663,
                                  "name": "Identifier",
                                  "src": "8755:12:0"
                                }
                              ],
                              "id": 664,
                              "name": "FunctionCall",
                              "src": "8738:30:0"
                            }
                          ],
                          "id": 665,
                          "name": "ExpressionStatement",
                          "src": "8738:30:0"
                        }
                      ],
                      "id": 666,
                      "name": "Block",
                      "src": "8683:92:0"
                    }
                  ],
                  "id": 667,
                  "name": "FunctionDefinition",
                  "src": "8618:157:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "name": "destroyBlackFunds",
                    "payable": false,
                    "scope": 717,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_blackListedUser",
                            "scope": 702,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 668,
                              "name": "ElementaryTypeName",
                              "src": "8809:7:0"
                            }
                          ],
                          "id": 669,
                          "name": "VariableDeclaration",
                          "src": "8809:24:0"
                        }
                      ],
                      "id": 670,
                      "name": "ParameterList",
                      "src": "8808:26:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 673,
                      "name": "ParameterList",
                      "src": "8852:0:0"
                    },
                    {
                      "attributes": {
                        "arguments": [
                          null
                        ]
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 119,
                            "type": "modifier ()",
                            "value": "onlyOwner"
                          },
                          "id": 671,
                          "name": "Identifier",
                          "src": "8842:9:0"
                        }
                      ],
                      "id": 672,
                      "name": "ModifierInvocation",
                      "src": "8842:9:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1163,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 674,
                                  "name": "Identifier",
                                  "src": "8862:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 631,
                                        "type": "mapping(address => bool)",
                                        "value": "isBlackListed"
                                      },
                                      "id": 675,
                                      "name": "Identifier",
                                      "src": "8870:13:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 669,
                                        "type": "address",
                                        "value": "_blackListedUser"
                                      },
                                      "id": 676,
                                      "name": "Identifier",
                                      "src": "8884:16:0"
                                    }
                                  ],
                                  "id": 677,
                                  "name": "IndexAccess",
                                  "src": "8870:31:0"
                                }
                              ],
                              "id": 678,
                              "name": "FunctionCall",
                              "src": "8862:40:0"
                            }
                          ],
                          "id": 679,
                          "name": "ExpressionStatement",
                          "src": "8862:40:0"
                        },
                        {
                          "attributes": {
                            "assignments": [
                              681
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "dirtyFunds",
                                "scope": 702,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "uint256",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "uint",
                                    "type": "uint256"
                                  },
                                  "id": 680,
                                  "name": "ElementaryTypeName",
                                  "src": "8912:4:0"
                                }
                              ],
                              "id": 681,
                              "name": "VariableDeclaration",
                              "src": "8912:15:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "uint256",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      346
                                    ],
                                    "referencedDeclaration": 346,
                                    "type": "function (address) view returns (uint256)",
                                    "value": "balanceOf"
                                  },
                                  "id": 682,
                                  "name": "Identifier",
                                  "src": "8930:9:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 669,
                                    "type": "address",
                                    "value": "_blackListedUser"
                                  },
                                  "id": 683,
                                  "name": "Identifier",
                                  "src": "8940:16:0"
                                }
                              ],
                              "id": 684,
                              "name": "FunctionCall",
                              "src": "8930:27:0"
                            }
                          ],
                          "id": 685,
                          "name": "VariableDeclarationStatement",
                          "src": "8912:45:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 216,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 686,
                                      "name": "Identifier",
                                      "src": "8967:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 669,
                                        "type": "address",
                                        "value": "_blackListedUser"
                                      },
                                      "id": 687,
                                      "name": "Identifier",
                                      "src": "8976:16:0"
                                    }
                                  ],
                                  "id": 688,
                                  "name": "IndexAccess",
                                  "src": "8967:26:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "30",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "number",
                                    "type": "int_const 0",
                                    "value": "0"
                                  },
                                  "id": 689,
                                  "name": "Literal",
                                  "src": "8996:1:0"
                                }
                              ],
                              "id": 690,
                              "name": "Assignment",
                              "src": "8967:30:0"
                            }
                          ],
                          "id": 691,
                          "name": "ExpressionStatement",
                          "src": "8967:30:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "-=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 141,
                                    "type": "uint256",
                                    "value": "_totalSupply"
                                  },
                                  "id": 692,
                                  "name": "Identifier",
                                  "src": "9007:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 681,
                                    "type": "uint256",
                                    "value": "dirtyFunds"
                                  },
                                  "id": 693,
                                  "name": "Identifier",
                                  "src": "9023:10:0"
                                }
                              ],
                              "id": 694,
                              "name": "Assignment",
                              "src": "9007:26:0"
                            }
                          ],
                          "id": 695,
                          "name": "ExpressionStatement",
                          "src": "9007:26:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 708,
                                    "type": "function (address,uint256)",
                                    "value": "DestroyedBlackFunds"
                                  },
                                  "id": 696,
                                  "name": "Identifier",
                                  "src": "9043:19:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 669,
                                    "type": "address",
                                    "value": "_blackListedUser"
                                  },
                                  "id": 697,
                                  "name": "Identifier",
                                  "src": "9063:16:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 681,
                                    "type": "uint256",
                                    "value": "dirtyFunds"
                                  },
                                  "id": 698,
                                  "name": "Identifier",
                                  "src": "9081:10:0"
                                }
                              ],
                              "id": 699,
                              "name": "FunctionCall",
                              "src": "9043:49:0"
                            }
                          ],
                          "id": 700,
                          "name": "ExpressionStatement",
                          "src": "9043:49:0"
                        }
                      ],
                      "id": 701,
                      "name": "Block",
                      "src": "8852:247:0"
                    }
                  ],
                  "id": 702,
                  "name": "FunctionDefinition",
                  "src": "8781:318:0"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "DestroyedBlackFunds"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "_blackListedUser",
                            "scope": 708,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 703,
                              "name": "ElementaryTypeName",
                              "src": "9131:7:0"
                            }
                          ],
                          "id": 704,
                          "name": "VariableDeclaration",
                          "src": "9131:24:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "_balance",
                            "scope": 708,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 705,
                              "name": "ElementaryTypeName",
                              "src": "9157:4:0"
                            }
                          ],
                          "id": 706,
                          "name": "VariableDeclaration",
                          "src": "9157:13:0"
                        }
                      ],
                      "id": 707,
                      "name": "ParameterList",
                      "src": "9130:41:0"
                    }
                  ],
                  "id": 708,
                  "name": "EventDefinition",
                  "src": "9105:67:0"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "AddedBlackList"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "_user",
                            "scope": 712,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 709,
                              "name": "ElementaryTypeName",
                              "src": "9199:7:0"
                            }
                          ],
                          "id": 710,
                          "name": "VariableDeclaration",
                          "src": "9199:13:0"
                        }
                      ],
                      "id": 711,
                      "name": "ParameterList",
                      "src": "9198:15:0"
                    }
                  ],
                  "id": 712,
                  "name": "EventDefinition",
                  "src": "9178:36:0"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "RemovedBlackList"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "_user",
                            "scope": 716,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 713,
                              "name": "ElementaryTypeName",
                              "src": "9243:7:0"
                            }
                          ],
                          "id": 714,
                          "name": "VariableDeclaration",
                          "src": "9243:13:0"
                        }
                      ],
                      "id": 715,
                      "name": "ParameterList",
                      "src": "9242:15:0"
                    }
                  ],
                  "id": 716,
                  "name": "EventDefinition",
                  "src": "9220:38:0"
                }
              ],
              "id": 717,
              "name": "ContractDefinition",
              "src": "8026:1235:0"
            },
            {
              "attributes": {
                "contractDependencies": [
                  139,
                  169,
                  205,
                  347,
                  546
                ],
                "contractKind": "contract",
                "documentation": null,
                "fullyImplemented": false,
                "linearizedBaseContracts": [
                  749,
                  546,
                  205,
                  347,
                  169,
                  139
                ],
                "name": "UpgradedStandardToken",
                "scope": 1143
              },
              "children": [
                {
                  "attributes": {
                    "arguments": [
                      null
                    ]
                  },
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "StandardToken",
                        "referencedDeclaration": 546,
                        "type": "contract StandardToken"
                      },
                      "id": 718,
                      "name": "UserDefinedTypeName",
                      "src": "9297:13:0"
                    }
                  ],
                  "id": 719,
                  "name": "InheritanceSpecifier",
                  "src": "9297:13:0"
                },
                {
                  "attributes": {
                    "body": null,
                    "constant": false,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "transferByLegacy",
                    "payable": false,
                    "scope": 749,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "from",
                            "scope": 728,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 720,
                              "name": "ElementaryTypeName",
                              "src": "9463:7:0"
                            }
                          ],
                          "id": 721,
                          "name": "VariableDeclaration",
                          "src": "9463:12:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "to",
                            "scope": 728,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 722,
                              "name": "ElementaryTypeName",
                              "src": "9477:7:0"
                            }
                          ],
                          "id": 723,
                          "name": "VariableDeclaration",
                          "src": "9477:10:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "value",
                            "scope": 728,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 724,
                              "name": "ElementaryTypeName",
                              "src": "9489:4:0"
                            }
                          ],
                          "id": 725,
                          "name": "VariableDeclaration",
                          "src": "9489:10:0"
                        }
                      ],
                      "id": 726,
                      "name": "ParameterList",
                      "src": "9462:38:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 727,
                      "name": "ParameterList",
                      "src": "9507:0:0"
                    }
                  ],
                  "id": 728,
                  "name": "FunctionDefinition",
                  "src": "9437:71:0"
                },
                {
                  "attributes": {
                    "body": null,
                    "constant": false,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "transferFromByLegacy",
                    "payable": false,
                    "scope": 749,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "sender",
                            "scope": 739,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 729,
                              "name": "ElementaryTypeName",
                              "src": "9543:7:0"
                            }
                          ],
                          "id": 730,
                          "name": "VariableDeclaration",
                          "src": "9543:14:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "from",
                            "scope": 739,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 731,
                              "name": "ElementaryTypeName",
                              "src": "9559:7:0"
                            }
                          ],
                          "id": 732,
                          "name": "VariableDeclaration",
                          "src": "9559:12:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "spender",
                            "scope": 739,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 733,
                              "name": "ElementaryTypeName",
                              "src": "9573:7:0"
                            }
                          ],
                          "id": 734,
                          "name": "VariableDeclaration",
                          "src": "9573:15:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "value",
                            "scope": 739,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 735,
                              "name": "ElementaryTypeName",
                              "src": "9590:4:0"
                            }
                          ],
                          "id": 736,
                          "name": "VariableDeclaration",
                          "src": "9590:10:0"
                        }
                      ],
                      "id": 737,
                      "name": "ParameterList",
                      "src": "9542:59:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 738,
                      "name": "ParameterList",
                      "src": "9608:0:0"
                    }
                  ],
                  "id": 739,
                  "name": "FunctionDefinition",
                  "src": "9513:96:0"
                },
                {
                  "attributes": {
                    "body": null,
                    "constant": false,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "approveByLegacy",
                    "payable": false,
                    "scope": 749,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "from",
                            "scope": 748,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 740,
                              "name": "ElementaryTypeName",
                              "src": "9639:7:0"
                            }
                          ],
                          "id": 741,
                          "name": "VariableDeclaration",
                          "src": "9639:12:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "spender",
                            "scope": 748,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 742,
                              "name": "ElementaryTypeName",
                              "src": "9653:7:0"
                            }
                          ],
                          "id": 743,
                          "name": "VariableDeclaration",
                          "src": "9653:15:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "value",
                            "scope": 748,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 744,
                              "name": "ElementaryTypeName",
                              "src": "9670:4:0"
                            }
                          ],
                          "id": 745,
                          "name": "VariableDeclaration",
                          "src": "9670:10:0"
                        }
                      ],
                      "id": 746,
                      "name": "ParameterList",
                      "src": "9638:43:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 747,
                      "name": "ParameterList",
                      "src": "9688:0:0"
                    }
                  ],
                  "id": 748,
                  "name": "FunctionDefinition",
                  "src": "9614:75:0"
                }
              ],
              "id": 749,
              "name": "ContractDefinition",
              "src": "9263:428:0"
            },
            {
              "attributes": {
                "contractDependencies": [
                  139,
                  169,
                  205,
                  347,
                  546,
                  603,
                  717
                ],
                "contractKind": "contract",
                "documentation": null,
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                  1142,
                  717,
                  546,
                  205,
                  347,
                  169,
                  603,
                  139
                ],
                "name": "TetherToken",
                "scope": 1143
              },
              "children": [
                {
                  "attributes": {
                    "arguments": [
                      null
                    ]
                  },
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "Pausable",
                        "referencedDeclaration": 603,
                        "type": "contract Pausable"
                      },
                      "id": 750,
                      "name": "UserDefinedTypeName",
                      "src": "9717:8:0"
                    }
                  ],
                  "id": 751,
                  "name": "InheritanceSpecifier",
                  "src": "9717:8:0"
                },
                {
                  "attributes": {
                    "arguments": [
                      null
                    ]
                  },
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "StandardToken",
                        "referencedDeclaration": 546,
                        "type": "contract StandardToken"
                      },
                      "id": 752,
                      "name": "UserDefinedTypeName",
                      "src": "9727:13:0"
                    }
                  ],
                  "id": 753,
                  "name": "InheritanceSpecifier",
                  "src": "9727:13:0"
                },
                {
                  "attributes": {
                    "arguments": [
                      null
                    ]
                  },
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "BlackList",
                        "referencedDeclaration": 717,
                        "type": "contract BlackList"
                      },
                      "id": 754,
                      "name": "UserDefinedTypeName",
                      "src": "9742:9:0"
                    }
                  ],
                  "id": 755,
                  "name": "InheritanceSpecifier",
                  "src": "9742:9:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "name",
                    "scope": 1142,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "string storage ref",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "string",
                        "type": "string storage pointer"
                      },
                      "id": 756,
                      "name": "ElementaryTypeName",
                      "src": "9759:6:0"
                    }
                  ],
                  "id": 757,
                  "name": "VariableDeclaration",
                  "src": "9759:18:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "symbol",
                    "scope": 1142,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "string storage ref",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "string",
                        "type": "string storage pointer"
                      },
                      "id": 758,
                      "name": "ElementaryTypeName",
                      "src": "9783:6:0"
                    }
                  ],
                  "id": 759,
                  "name": "VariableDeclaration",
                  "src": "9783:20:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "decimals",
                    "scope": 1142,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 760,
                      "name": "ElementaryTypeName",
                      "src": "9809:4:0"
                    }
                  ],
                  "id": 761,
                  "name": "VariableDeclaration",
                  "src": "9809:20:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "upgradedAddress",
                    "scope": 1142,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "address",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "address",
                        "type": "address"
                      },
                      "id": 762,
                      "name": "ElementaryTypeName",
                      "src": "9835:7:0"
                    }
                  ],
                  "id": 763,
                  "name": "VariableDeclaration",
                  "src": "9835:30:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "deprecated",
                    "scope": 1142,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "bool",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "bool",
                        "type": "bool"
                      },
                      "id": 764,
                      "name": "ElementaryTypeName",
                      "src": "9871:4:0"
                    }
                  ],
                  "id": 765,
                  "name": "VariableDeclaration",
                  "src": "9871:22:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": true,
                    "modifiers": [
                      null
                    ],
                    "name": "TetherToken",
                    "payable": false,
                    "scope": 1142,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_initialSupply",
                            "scope": 803,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 766,
                              "name": "ElementaryTypeName",
                              "src": "10209:4:0"
                            }
                          ],
                          "id": 767,
                          "name": "VariableDeclaration",
                          "src": "10209:19:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_name",
                            "scope": 803,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "string memory",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "string",
                                "type": "string storage pointer"
                              },
                              "id": 768,
                              "name": "ElementaryTypeName",
                              "src": "10230:6:0"
                            }
                          ],
                          "id": 769,
                          "name": "VariableDeclaration",
                          "src": "10230:12:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_symbol",
                            "scope": 803,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "string memory",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "string",
                                "type": "string storage pointer"
                              },
                              "id": 770,
                              "name": "ElementaryTypeName",
                              "src": "10244:6:0"
                            }
                          ],
                          "id": 771,
                          "name": "VariableDeclaration",
                          "src": "10244:14:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_decimals",
                            "scope": 803,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 772,
                              "name": "ElementaryTypeName",
                              "src": "10260:4:0"
                            }
                          ],
                          "id": 773,
                          "name": "VariableDeclaration",
                          "src": "10260:14:0"
                        }
                      ],
                      "id": 774,
                      "name": "ParameterList",
                      "src": "10208:67:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 775,
                      "name": "ParameterList",
                      "src": "10283:0:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 141,
                                    "type": "uint256",
                                    "value": "_totalSupply"
                                  },
                                  "id": 776,
                                  "name": "Identifier",
                                  "src": "10293:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 767,
                                    "type": "uint256",
                                    "value": "_initialSupply"
                                  },
                                  "id": 777,
                                  "name": "Identifier",
                                  "src": "10308:14:0"
                                }
                              ],
                              "id": 778,
                              "name": "Assignment",
                              "src": "10293:29:0"
                            }
                          ],
                          "id": 779,
                          "name": "ExpressionStatement",
                          "src": "10293:29:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "string storage ref"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 757,
                                    "type": "string storage ref",
                                    "value": "name"
                                  },
                                  "id": 780,
                                  "name": "Identifier",
                                  "src": "10332:4:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 769,
                                    "type": "string memory",
                                    "value": "_name"
                                  },
                                  "id": 781,
                                  "name": "Identifier",
                                  "src": "10339:5:0"
                                }
                              ],
                              "id": 782,
                              "name": "Assignment",
                              "src": "10332:12:0"
                            }
                          ],
                          "id": 783,
                          "name": "ExpressionStatement",
                          "src": "10332:12:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "string storage ref"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 759,
                                    "type": "string storage ref",
                                    "value": "symbol"
                                  },
                                  "id": 784,
                                  "name": "Identifier",
                                  "src": "10354:6:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 771,
                                    "type": "string memory",
                                    "value": "_symbol"
                                  },
                                  "id": 785,
                                  "name": "Identifier",
                                  "src": "10363:7:0"
                                }
                              ],
                              "id": 786,
                              "name": "Assignment",
                              "src": "10354:16:0"
                            }
                          ],
                          "id": 787,
                          "name": "ExpressionStatement",
                          "src": "10354:16:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 761,
                                    "type": "uint256",
                                    "value": "decimals"
                                  },
                                  "id": 788,
                                  "name": "Identifier",
                                  "src": "10380:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 773,
                                    "type": "uint256",
                                    "value": "_decimals"
                                  },
                                  "id": 789,
                                  "name": "Identifier",
                                  "src": "10391:9:0"
                                }
                              ],
                              "id": 790,
                              "name": "Assignment",
                              "src": "10380:20:0"
                            }
                          ],
                          "id": 791,
                          "name": "ExpressionStatement",
                          "src": "10380:20:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 216,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 792,
                                      "name": "Identifier",
                                      "src": "10410:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 99,
                                        "type": "address",
                                        "value": "owner"
                                      },
                                      "id": 793,
                                      "name": "Identifier",
                                      "src": "10419:5:0"
                                    }
                                  ],
                                  "id": 794,
                                  "name": "IndexAccess",
                                  "src": "10410:15:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 767,
                                    "type": "uint256",
                                    "value": "_initialSupply"
                                  },
                                  "id": 795,
                                  "name": "Identifier",
                                  "src": "10428:14:0"
                                }
                              ],
                              "id": 796,
                              "name": "Assignment",
                              "src": "10410:32:0"
                            }
                          ],
                          "id": 797,
                          "name": "ExpressionStatement",
                          "src": "10410:32:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 765,
                                    "type": "bool",
                                    "value": "deprecated"
                                  },
                                  "id": 798,
                                  "name": "Identifier",
                                  "src": "10452:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "66616c7365",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "bool",
                                    "type": "bool",
                                    "value": "false"
                                  },
                                  "id": 799,
                                  "name": "Literal",
                                  "src": "10465:5:0"
                                }
                              ],
                              "id": 800,
                              "name": "Assignment",
                              "src": "10452:18:0"
                            }
                          ],
                          "id": 801,
                          "name": "ExpressionStatement",
                          "src": "10452:18:0"
                        }
                      ],
                      "id": 802,
                      "name": "Block",
                      "src": "10283:194:0"
                    }
                  ],
                  "id": 803,
                  "name": "FunctionDefinition",
                  "src": "10188:289:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "name": "transfer",
                    "payable": false,
                    "scope": 1142,
                    "stateMutability": "nonpayable",
                    "superFunction": 334,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_to",
                            "scope": 841,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 804,
                              "name": "ElementaryTypeName",
                              "src": "10577:7:0"
                            }
                          ],
                          "id": 805,
                          "name": "VariableDeclaration",
                          "src": "10577:11:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_value",
                            "scope": 841,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 806,
                              "name": "ElementaryTypeName",
                              "src": "10590:4:0"
                            }
                          ],
                          "id": 807,
                          "name": "VariableDeclaration",
                          "src": "10590:11:0"
                        }
                      ],
                      "id": 808,
                      "name": "ParameterList",
                      "src": "10576:26:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 811,
                      "name": "ParameterList",
                      "src": "10624:0:0"
                    },
                    {
                      "attributes": {
                        "arguments": [
                          null
                        ]
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 564,
                            "type": "modifier ()",
                            "value": "whenNotPaused"
                          },
                          "id": 809,
                          "name": "Identifier",
                          "src": "10610:13:0"
                        }
                      ],
                      "id": 810,
                      "name": "ModifierInvocation",
                      "src": "10610:13:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1163,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 812,
                                  "name": "Identifier",
                                  "src": "10634:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "!",
                                    "prefix": true,
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "bool"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 631,
                                            "type": "mapping(address => bool)",
                                            "value": "isBlackListed"
                                          },
                                          "id": 813,
                                          "name": "Identifier",
                                          "src": "10643:13:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "sender",
                                            "referencedDeclaration": null,
                                            "type": "address"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1145,
                                                "type": "msg",
                                                "value": "msg"
                                              },
                                              "id": 814,
                                              "name": "Identifier",
                                              "src": "10657:3:0"
                                            }
                                          ],
                                          "id": 815,
                                          "name": "MemberAccess",
                                          "src": "10657:10:0"
                                        }
                                      ],
                                      "id": 816,
                                      "name": "IndexAccess",
                                      "src": "10643:25:0"
                                    }
                                  ],
                                  "id": 817,
                                  "name": "UnaryOperation",
                                  "src": "10642:26:0"
                                }
                              ],
                              "id": 818,
                              "name": "FunctionCall",
                              "src": "10634:35:0"
                            }
                          ],
                          "id": 819,
                          "name": "ExpressionStatement",
                          "src": "10634:35:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 765,
                                "type": "bool",
                                "value": "deprecated"
                              },
                              "id": 820,
                              "name": "Identifier",
                              "src": "10683:10:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "functionReturnParameters": 811
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "tuple()",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "transferByLegacy",
                                            "referencedDeclaration": 728,
                                            "type": "function (address,address,uint256) external"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "isStructConstructorCall": false,
                                                "lValueRequested": false,
                                                "names": [
                                                  null
                                                ],
                                                "type": "contract UpgradedStandardToken",
                                                "type_conversion": true
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 749,
                                                    "type": "type(contract UpgradedStandardToken)",
                                                    "value": "UpgradedStandardToken"
                                                  },
                                                  "id": 821,
                                                  "name": "Identifier",
                                                  "src": "10716:21:0"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 763,
                                                    "type": "address",
                                                    "value": "upgradedAddress"
                                                  },
                                                  "id": 822,
                                                  "name": "Identifier",
                                                  "src": "10738:15:0"
                                                }
                                              ],
                                              "id": 823,
                                              "name": "FunctionCall",
                                              "src": "10716:38:0"
                                            }
                                          ],
                                          "id": 824,
                                          "name": "MemberAccess",
                                          "src": "10716:55:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "sender",
                                            "referencedDeclaration": null,
                                            "type": "address"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1145,
                                                "type": "msg",
                                                "value": "msg"
                                              },
                                              "id": 825,
                                              "name": "Identifier",
                                              "src": "10772:3:0"
                                            }
                                          ],
                                          "id": 826,
                                          "name": "MemberAccess",
                                          "src": "10772:10:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 805,
                                            "type": "address",
                                            "value": "_to"
                                          },
                                          "id": 827,
                                          "name": "Identifier",
                                          "src": "10784:3:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 807,
                                            "type": "uint256",
                                            "value": "_value"
                                          },
                                          "id": 828,
                                          "name": "Identifier",
                                          "src": "10789:6:0"
                                        }
                                      ],
                                      "id": 829,
                                      "name": "FunctionCall",
                                      "src": "10716:80:0"
                                    }
                                  ],
                                  "id": 830,
                                  "name": "Return",
                                  "src": "10709:87:0"
                                }
                              ],
                              "id": 831,
                              "name": "Block",
                              "src": "10695:112:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "functionReturnParameters": 811
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "tuple()",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "transfer",
                                            "referencedDeclaration": 334,
                                            "type": "function (address,uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1184,
                                                "type": "contract super TetherToken",
                                                "value": "super"
                                              },
                                              "id": 832,
                                              "name": "Identifier",
                                              "src": "10834:5:0"
                                            }
                                          ],
                                          "id": 833,
                                          "name": "MemberAccess",
                                          "src": "10834:14:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 805,
                                            "type": "address",
                                            "value": "_to"
                                          },
                                          "id": 834,
                                          "name": "Identifier",
                                          "src": "10849:3:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 807,
                                            "type": "uint256",
                                            "value": "_value"
                                          },
                                          "id": 835,
                                          "name": "Identifier",
                                          "src": "10854:6:0"
                                        }
                                      ],
                                      "id": 836,
                                      "name": "FunctionCall",
                                      "src": "10834:27:0"
                                    }
                                  ],
                                  "id": 837,
                                  "name": "Return",
                                  "src": "10827:34:0"
                                }
                              ],
                              "id": 838,
                              "name": "Block",
                              "src": "10813:59:0"
                            }
                          ],
                          "id": 839,
                          "name": "IfStatement",
                          "src": "10679:193:0"
                        }
                      ],
                      "id": 840,
                      "name": "Block",
                      "src": "10624:254:0"
                    }
                  ],
                  "id": 841,
                  "name": "FunctionDefinition",
                  "src": "10559:319:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "name": "transferFrom",
                    "payable": false,
                    "scope": 1142,
                    "stateMutability": "nonpayable",
                    "superFunction": 481,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_from",
                            "scope": 882,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 842,
                              "name": "ElementaryTypeName",
                              "src": "10982:7:0"
                            }
                          ],
                          "id": 843,
                          "name": "VariableDeclaration",
                          "src": "10982:13:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_to",
                            "scope": 882,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 844,
                              "name": "ElementaryTypeName",
                              "src": "10997:7:0"
                            }
                          ],
                          "id": 845,
                          "name": "VariableDeclaration",
                          "src": "10997:11:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_value",
                            "scope": 882,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 846,
                              "name": "ElementaryTypeName",
                              "src": "11010:4:0"
                            }
                          ],
                          "id": 847,
                          "name": "VariableDeclaration",
                          "src": "11010:11:0"
                        }
                      ],
                      "id": 848,
                      "name": "ParameterList",
                      "src": "10981:41:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 851,
                      "name": "ParameterList",
                      "src": "11044:0:0"
                    },
                    {
                      "attributes": {
                        "arguments": [
                          null
                        ]
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 564,
                            "type": "modifier ()",
                            "value": "whenNotPaused"
                          },
                          "id": 849,
                          "name": "Identifier",
                          "src": "11030:13:0"
                        }
                      ],
                      "id": 850,
                      "name": "ModifierInvocation",
                      "src": "11030:13:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1163,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 852,
                                  "name": "Identifier",
                                  "src": "11054:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "!",
                                    "prefix": true,
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "bool"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 631,
                                            "type": "mapping(address => bool)",
                                            "value": "isBlackListed"
                                          },
                                          "id": 853,
                                          "name": "Identifier",
                                          "src": "11063:13:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 843,
                                            "type": "address",
                                            "value": "_from"
                                          },
                                          "id": 854,
                                          "name": "Identifier",
                                          "src": "11077:5:0"
                                        }
                                      ],
                                      "id": 855,
                                      "name": "IndexAccess",
                                      "src": "11063:20:0"
                                    }
                                  ],
                                  "id": 856,
                                  "name": "UnaryOperation",
                                  "src": "11062:21:0"
                                }
                              ],
                              "id": 857,
                              "name": "FunctionCall",
                              "src": "11054:30:0"
                            }
                          ],
                          "id": 858,
                          "name": "ExpressionStatement",
                          "src": "11054:30:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 765,
                                "type": "bool",
                                "value": "deprecated"
                              },
                              "id": 859,
                              "name": "Identifier",
                              "src": "11098:10:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "functionReturnParameters": 851
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "tuple()",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "transferFromByLegacy",
                                            "referencedDeclaration": 739,
                                            "type": "function (address,address,address,uint256) external"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "isStructConstructorCall": false,
                                                "lValueRequested": false,
                                                "names": [
                                                  null
                                                ],
                                                "type": "contract UpgradedStandardToken",
                                                "type_conversion": true
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 749,
                                                    "type": "type(contract UpgradedStandardToken)",
                                                    "value": "UpgradedStandardToken"
                                                  },
                                                  "id": 860,
                                                  "name": "Identifier",
                                                  "src": "11131:21:0"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 763,
                                                    "type": "address",
                                                    "value": "upgradedAddress"
                                                  },
                                                  "id": 861,
                                                  "name": "Identifier",
                                                  "src": "11153:15:0"
                                                }
                                              ],
                                              "id": 862,
                                              "name": "FunctionCall",
                                              "src": "11131:38:0"
                                            }
                                          ],
                                          "id": 863,
                                          "name": "MemberAccess",
                                          "src": "11131:59:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "sender",
                                            "referencedDeclaration": null,
                                            "type": "address"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1145,
                                                "type": "msg",
                                                "value": "msg"
                                              },
                                              "id": 864,
                                              "name": "Identifier",
                                              "src": "11191:3:0"
                                            }
                                          ],
                                          "id": 865,
                                          "name": "MemberAccess",
                                          "src": "11191:10:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 843,
                                            "type": "address",
                                            "value": "_from"
                                          },
                                          "id": 866,
                                          "name": "Identifier",
                                          "src": "11203:5:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 845,
                                            "type": "address",
                                            "value": "_to"
                                          },
                                          "id": 867,
                                          "name": "Identifier",
                                          "src": "11210:3:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 847,
                                            "type": "uint256",
                                            "value": "_value"
                                          },
                                          "id": 868,
                                          "name": "Identifier",
                                          "src": "11215:6:0"
                                        }
                                      ],
                                      "id": 869,
                                      "name": "FunctionCall",
                                      "src": "11131:91:0"
                                    }
                                  ],
                                  "id": 870,
                                  "name": "Return",
                                  "src": "11124:98:0"
                                }
                              ],
                              "id": 871,
                              "name": "Block",
                              "src": "11110:123:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "functionReturnParameters": 851
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "tuple()",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "transferFrom",
                                            "referencedDeclaration": 481,
                                            "type": "function (address,address,uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1184,
                                                "type": "contract super TetherToken",
                                                "value": "super"
                                              },
                                              "id": 872,
                                              "name": "Identifier",
                                              "src": "11260:5:0"
                                            }
                                          ],
                                          "id": 873,
                                          "name": "MemberAccess",
                                          "src": "11260:18:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 843,
                                            "type": "address",
                                            "value": "_from"
                                          },
                                          "id": 874,
                                          "name": "Identifier",
                                          "src": "11279:5:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 845,
                                            "type": "address",
                                            "value": "_to"
                                          },
                                          "id": 875,
                                          "name": "Identifier",
                                          "src": "11286:3:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 847,
                                            "type": "uint256",
                                            "value": "_value"
                                          },
                                          "id": 876,
                                          "name": "Identifier",
                                          "src": "11291:6:0"
                                        }
                                      ],
                                      "id": 877,
                                      "name": "FunctionCall",
                                      "src": "11260:38:0"
                                    }
                                  ],
                                  "id": 878,
                                  "name": "Return",
                                  "src": "11253:45:0"
                                }
                              ],
                              "id": 879,
                              "name": "Block",
                              "src": "11239:70:0"
                            }
                          ],
                          "id": 880,
                          "name": "IfStatement",
                          "src": "11094:215:0"
                        }
                      ],
                      "id": 881,
                      "name": "Block",
                      "src": "11044:271:0"
                    }
                  ],
                  "id": 882,
                  "name": "FunctionDefinition",
                  "src": "10960:355:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "balanceOf",
                    "payable": false,
                    "scope": 1142,
                    "stateMutability": "view",
                    "superFunction": 346,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "who",
                            "scope": 906,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 883,
                              "name": "ElementaryTypeName",
                              "src": "11416:7:0"
                            }
                          ],
                          "id": 884,
                          "name": "VariableDeclaration",
                          "src": "11416:11:0"
                        }
                      ],
                      "id": 885,
                      "name": "ParameterList",
                      "src": "11415:13:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 906,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 886,
                              "name": "ElementaryTypeName",
                              "src": "11454:4:0"
                            }
                          ],
                          "id": 887,
                          "name": "VariableDeclaration",
                          "src": "11454:4:0"
                        }
                      ],
                      "id": 888,
                      "name": "ParameterList",
                      "src": "11453:6:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 765,
                                "type": "bool",
                                "value": "deprecated"
                              },
                              "id": 889,
                              "name": "Identifier",
                              "src": "11474:10:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "functionReturnParameters": 888
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "uint256",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "balanceOf",
                                            "referencedDeclaration": 346,
                                            "type": "function (address) view external returns (uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "isStructConstructorCall": false,
                                                "lValueRequested": false,
                                                "names": [
                                                  null
                                                ],
                                                "type": "contract UpgradedStandardToken",
                                                "type_conversion": true
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 749,
                                                    "type": "type(contract UpgradedStandardToken)",
                                                    "value": "UpgradedStandardToken"
                                                  },
                                                  "id": 890,
                                                  "name": "Identifier",
                                                  "src": "11507:21:0"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 763,
                                                    "type": "address",
                                                    "value": "upgradedAddress"
                                                  },
                                                  "id": 891,
                                                  "name": "Identifier",
                                                  "src": "11529:15:0"
                                                }
                                              ],
                                              "id": 892,
                                              "name": "FunctionCall",
                                              "src": "11507:38:0"
                                            }
                                          ],
                                          "id": 893,
                                          "name": "MemberAccess",
                                          "src": "11507:48:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 884,
                                            "type": "address",
                                            "value": "who"
                                          },
                                          "id": 894,
                                          "name": "Identifier",
                                          "src": "11556:3:0"
                                        }
                                      ],
                                      "id": 895,
                                      "name": "FunctionCall",
                                      "src": "11507:53:0"
                                    }
                                  ],
                                  "id": 896,
                                  "name": "Return",
                                  "src": "11500:60:0"
                                }
                              ],
                              "id": 897,
                              "name": "Block",
                              "src": "11486:85:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "functionReturnParameters": 888
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "uint256",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "balanceOf",
                                            "referencedDeclaration": 346,
                                            "type": "function (address) view returns (uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1184,
                                                "type": "contract super TetherToken",
                                                "value": "super"
                                              },
                                              "id": 898,
                                              "name": "Identifier",
                                              "src": "11598:5:0"
                                            }
                                          ],
                                          "id": 899,
                                          "name": "MemberAccess",
                                          "src": "11598:15:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 884,
                                            "type": "address",
                                            "value": "who"
                                          },
                                          "id": 900,
                                          "name": "Identifier",
                                          "src": "11614:3:0"
                                        }
                                      ],
                                      "id": 901,
                                      "name": "FunctionCall",
                                      "src": "11598:20:0"
                                    }
                                  ],
                                  "id": 902,
                                  "name": "Return",
                                  "src": "11591:27:0"
                                }
                              ],
                              "id": 903,
                              "name": "Block",
                              "src": "11577:52:0"
                            }
                          ],
                          "id": 904,
                          "name": "IfStatement",
                          "src": "11470:159:0"
                        }
                      ],
                      "id": 905,
                      "name": "Block",
                      "src": "11460:175:0"
                    }
                  ],
                  "id": 906,
                  "name": "FunctionDefinition",
                  "src": "11397:238:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "name": "approve",
                    "payable": false,
                    "scope": 1142,
                    "stateMutability": "nonpayable",
                    "superFunction": 529,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_spender",
                            "scope": 939,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 907,
                              "name": "ElementaryTypeName",
                              "src": "11734:7:0"
                            }
                          ],
                          "id": 908,
                          "name": "VariableDeclaration",
                          "src": "11734:16:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_value",
                            "scope": 939,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 909,
                              "name": "ElementaryTypeName",
                              "src": "11752:4:0"
                            }
                          ],
                          "id": 910,
                          "name": "VariableDeclaration",
                          "src": "11752:11:0"
                        }
                      ],
                      "id": 911,
                      "name": "ParameterList",
                      "src": "11733:31:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 917,
                      "name": "ParameterList",
                      "src": "11796:0:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 240,
                            "type": "modifier (uint256)",
                            "value": "onlyPayloadSize"
                          },
                          "id": 912,
                          "name": "Identifier",
                          "src": "11772:15:0"
                        },
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_64_by_1",
                              "typeString": "int_const 64"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "operator": "*",
                            "type": "int_const 64"
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "32",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "number",
                                "type": "int_const 2",
                                "value": "2"
                              },
                              "id": 913,
                              "name": "Literal",
                              "src": "11788:1:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "3332",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "number",
                                "type": "int_const 32",
                                "value": "32"
                              },
                              "id": 914,
                              "name": "Literal",
                              "src": "11792:2:0"
                            }
                          ],
                          "id": 915,
                          "name": "BinaryOperation",
                          "src": "11788:6:0"
                        }
                      ],
                      "id": 916,
                      "name": "ModifierInvocation",
                      "src": "11772:23:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 765,
                                "type": "bool",
                                "value": "deprecated"
                              },
                              "id": 918,
                              "name": "Identifier",
                              "src": "11810:10:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "functionReturnParameters": 917
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "tuple()",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "approveByLegacy",
                                            "referencedDeclaration": 748,
                                            "type": "function (address,address,uint256) external"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "isStructConstructorCall": false,
                                                "lValueRequested": false,
                                                "names": [
                                                  null
                                                ],
                                                "type": "contract UpgradedStandardToken",
                                                "type_conversion": true
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 749,
                                                    "type": "type(contract UpgradedStandardToken)",
                                                    "value": "UpgradedStandardToken"
                                                  },
                                                  "id": 919,
                                                  "name": "Identifier",
                                                  "src": "11843:21:0"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 763,
                                                    "type": "address",
                                                    "value": "upgradedAddress"
                                                  },
                                                  "id": 920,
                                                  "name": "Identifier",
                                                  "src": "11865:15:0"
                                                }
                                              ],
                                              "id": 921,
                                              "name": "FunctionCall",
                                              "src": "11843:38:0"
                                            }
                                          ],
                                          "id": 922,
                                          "name": "MemberAccess",
                                          "src": "11843:54:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "sender",
                                            "referencedDeclaration": null,
                                            "type": "address"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1145,
                                                "type": "msg",
                                                "value": "msg"
                                              },
                                              "id": 923,
                                              "name": "Identifier",
                                              "src": "11898:3:0"
                                            }
                                          ],
                                          "id": 924,
                                          "name": "MemberAccess",
                                          "src": "11898:10:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 908,
                                            "type": "address",
                                            "value": "_spender"
                                          },
                                          "id": 925,
                                          "name": "Identifier",
                                          "src": "11910:8:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 910,
                                            "type": "uint256",
                                            "value": "_value"
                                          },
                                          "id": 926,
                                          "name": "Identifier",
                                          "src": "11920:6:0"
                                        }
                                      ],
                                      "id": 927,
                                      "name": "FunctionCall",
                                      "src": "11843:84:0"
                                    }
                                  ],
                                  "id": 928,
                                  "name": "Return",
                                  "src": "11836:91:0"
                                }
                              ],
                              "id": 929,
                              "name": "Block",
                              "src": "11822:116:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "functionReturnParameters": 917
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "tuple()",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "approve",
                                            "referencedDeclaration": 529,
                                            "type": "function (address,uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1184,
                                                "type": "contract super TetherToken",
                                                "value": "super"
                                              },
                                              "id": 930,
                                              "name": "Identifier",
                                              "src": "11965:5:0"
                                            }
                                          ],
                                          "id": 931,
                                          "name": "MemberAccess",
                                          "src": "11965:13:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 908,
                                            "type": "address",
                                            "value": "_spender"
                                          },
                                          "id": 932,
                                          "name": "Identifier",
                                          "src": "11979:8:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 910,
                                            "type": "uint256",
                                            "value": "_value"
                                          },
                                          "id": 933,
                                          "name": "Identifier",
                                          "src": "11989:6:0"
                                        }
                                      ],
                                      "id": 934,
                                      "name": "FunctionCall",
                                      "src": "11965:31:0"
                                    }
                                  ],
                                  "id": 935,
                                  "name": "Return",
                                  "src": "11958:38:0"
                                }
                              ],
                              "id": 936,
                              "name": "Block",
                              "src": "11944:63:0"
                            }
                          ],
                          "id": 937,
                          "name": "IfStatement",
                          "src": "11806:201:0"
                        }
                      ],
                      "id": 938,
                      "name": "Block",
                      "src": "11796:217:0"
                    }
                  ],
                  "id": 939,
                  "name": "FunctionDefinition",
                  "src": "11717:296:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "allowance",
                    "payable": false,
                    "scope": 1142,
                    "stateMutability": "view",
                    "superFunction": 545,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_owner",
                            "scope": 967,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 940,
                              "name": "ElementaryTypeName",
                              "src": "12114:7:0"
                            }
                          ],
                          "id": 941,
                          "name": "VariableDeclaration",
                          "src": "12114:14:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_spender",
                            "scope": 967,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 942,
                              "name": "ElementaryTypeName",
                              "src": "12130:7:0"
                            }
                          ],
                          "id": 943,
                          "name": "VariableDeclaration",
                          "src": "12130:16:0"
                        }
                      ],
                      "id": 944,
                      "name": "ParameterList",
                      "src": "12113:34:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "remaining",
                            "scope": 967,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 945,
                              "name": "ElementaryTypeName",
                              "src": "12173:4:0"
                            }
                          ],
                          "id": 946,
                          "name": "VariableDeclaration",
                          "src": "12173:14:0"
                        }
                      ],
                      "id": 947,
                      "name": "ParameterList",
                      "src": "12172:16:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 765,
                                "type": "bool",
                                "value": "deprecated"
                              },
                              "id": 948,
                              "name": "Identifier",
                              "src": "12203:10:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "functionReturnParameters": 947
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "uint256",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "allowance",
                                            "referencedDeclaration": 545,
                                            "type": "function (address,address) view external returns (uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "isStructConstructorCall": false,
                                                "lValueRequested": false,
                                                "names": [
                                                  null
                                                ],
                                                "type": "contract StandardToken",
                                                "type_conversion": true
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 546,
                                                    "type": "type(contract StandardToken)",
                                                    "value": "StandardToken"
                                                  },
                                                  "id": 949,
                                                  "name": "Identifier",
                                                  "src": "12236:13:0"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 763,
                                                    "type": "address",
                                                    "value": "upgradedAddress"
                                                  },
                                                  "id": 950,
                                                  "name": "Identifier",
                                                  "src": "12250:15:0"
                                                }
                                              ],
                                              "id": 951,
                                              "name": "FunctionCall",
                                              "src": "12236:30:0"
                                            }
                                          ],
                                          "id": 952,
                                          "name": "MemberAccess",
                                          "src": "12236:40:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 941,
                                            "type": "address",
                                            "value": "_owner"
                                          },
                                          "id": 953,
                                          "name": "Identifier",
                                          "src": "12277:6:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 943,
                                            "type": "address",
                                            "value": "_spender"
                                          },
                                          "id": 954,
                                          "name": "Identifier",
                                          "src": "12285:8:0"
                                        }
                                      ],
                                      "id": 955,
                                      "name": "FunctionCall",
                                      "src": "12236:58:0"
                                    }
                                  ],
                                  "id": 956,
                                  "name": "Return",
                                  "src": "12229:65:0"
                                }
                              ],
                              "id": 957,
                              "name": "Block",
                              "src": "12215:90:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "functionReturnParameters": 947
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "uint256",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "allowance",
                                            "referencedDeclaration": 545,
                                            "type": "function (address,address) view returns (uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1184,
                                                "type": "contract super TetherToken",
                                                "value": "super"
                                              },
                                              "id": 958,
                                              "name": "Identifier",
                                              "src": "12332:5:0"
                                            }
                                          ],
                                          "id": 959,
                                          "name": "MemberAccess",
                                          "src": "12332:15:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 941,
                                            "type": "address",
                                            "value": "_owner"
                                          },
                                          "id": 960,
                                          "name": "Identifier",
                                          "src": "12348:6:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 943,
                                            "type": "address",
                                            "value": "_spender"
                                          },
                                          "id": 961,
                                          "name": "Identifier",
                                          "src": "12356:8:0"
                                        }
                                      ],
                                      "id": 962,
                                      "name": "FunctionCall",
                                      "src": "12332:33:0"
                                    }
                                  ],
                                  "id": 963,
                                  "name": "Return",
                                  "src": "12325:40:0"
                                }
                              ],
                              "id": 964,
                              "name": "Block",
                              "src": "12311:65:0"
                            }
                          ],
                          "id": 965,
                          "name": "IfStatement",
                          "src": "12199:177:0"
                        }
                      ],
                      "id": 966,
                      "name": "Block",
                      "src": "12189:193:0"
                    }
                  ],
                  "id": 967,
                  "name": "FunctionDefinition",
                  "src": "12095:287:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "name": "deprecate",
                    "payable": false,
                    "scope": 1142,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_upgradedAddress",
                            "scope": 987,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 968,
                              "name": "ElementaryTypeName",
                              "src": "12464:7:0"
                            }
                          ],
                          "id": 969,
                          "name": "VariableDeclaration",
                          "src": "12464:24:0"
                        }
                      ],
                      "id": 970,
                      "name": "ParameterList",
                      "src": "12463:26:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 973,
                      "name": "ParameterList",
                      "src": "12507:0:0"
                    },
                    {
                      "attributes": {
                        "arguments": [
                          null
                        ]
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 119,
                            "type": "modifier ()",
                            "value": "onlyOwner"
                          },
                          "id": 971,
                          "name": "Identifier",
                          "src": "12497:9:0"
                        }
                      ],
                      "id": 972,
                      "name": "ModifierInvocation",
                      "src": "12497:9:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 765,
                                    "type": "bool",
                                    "value": "deprecated"
                                  },
                                  "id": 974,
                                  "name": "Identifier",
                                  "src": "12517:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "74727565",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "bool",
                                    "type": "bool",
                                    "value": "true"
                                  },
                                  "id": 975,
                                  "name": "Literal",
                                  "src": "12530:4:0"
                                }
                              ],
                              "id": 976,
                              "name": "Assignment",
                              "src": "12517:17:0"
                            }
                          ],
                          "id": 977,
                          "name": "ExpressionStatement",
                          "src": "12517:17:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "address"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 763,
                                    "type": "address",
                                    "value": "upgradedAddress"
                                  },
                                  "id": 978,
                                  "name": "Identifier",
                                  "src": "12544:15:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 969,
                                    "type": "address",
                                    "value": "_upgradedAddress"
                                  },
                                  "id": 979,
                                  "name": "Identifier",
                                  "src": "12562:16:0"
                                }
                              ],
                              "id": 980,
                              "name": "Assignment",
                              "src": "12544:34:0"
                            }
                          ],
                          "id": 981,
                          "name": "ExpressionStatement",
                          "src": "12544:34:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1135,
                                    "type": "function (address)",
                                    "value": "Deprecate"
                                  },
                                  "id": 982,
                                  "name": "Identifier",
                                  "src": "12588:9:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 969,
                                    "type": "address",
                                    "value": "_upgradedAddress"
                                  },
                                  "id": 983,
                                  "name": "Identifier",
                                  "src": "12598:16:0"
                                }
                              ],
                              "id": 984,
                              "name": "FunctionCall",
                              "src": "12588:27:0"
                            }
                          ],
                          "id": 985,
                          "name": "ExpressionStatement",
                          "src": "12588:27:0"
                        }
                      ],
                      "id": 986,
                      "name": "Block",
                      "src": "12507:115:0"
                    }
                  ],
                  "id": 987,
                  "name": "FunctionDefinition",
                  "src": "12445:177:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "totalSupply",
                    "payable": false,
                    "scope": 1142,
                    "stateMutability": "view",
                    "superFunction": 146,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 988,
                      "name": "ParameterList",
                      "src": "12705:2:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 1005,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 989,
                              "name": "ElementaryTypeName",
                              "src": "12733:4:0"
                            }
                          ],
                          "id": 990,
                          "name": "VariableDeclaration",
                          "src": "12733:4:0"
                        }
                      ],
                      "id": 991,
                      "name": "ParameterList",
                      "src": "12732:6:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 765,
                                "type": "bool",
                                "value": "deprecated"
                              },
                              "id": 992,
                              "name": "Identifier",
                              "src": "12753:10:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "functionReturnParameters": 991
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          null
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "uint256",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              null
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "totalSupply",
                                            "referencedDeclaration": 146,
                                            "type": "function () view external returns (uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "isStructConstructorCall": false,
                                                "lValueRequested": false,
                                                "names": [
                                                  null
                                                ],
                                                "type": "contract StandardToken",
                                                "type_conversion": true
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 546,
                                                    "type": "type(contract StandardToken)",
                                                    "value": "StandardToken"
                                                  },
                                                  "id": 993,
                                                  "name": "Identifier",
                                                  "src": "12786:13:0"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 763,
                                                    "type": "address",
                                                    "value": "upgradedAddress"
                                                  },
                                                  "id": 994,
                                                  "name": "Identifier",
                                                  "src": "12800:15:0"
                                                }
                                              ],
                                              "id": 995,
                                              "name": "FunctionCall",
                                              "src": "12786:30:0"
                                            }
                                          ],
                                          "id": 996,
                                          "name": "MemberAccess",
                                          "src": "12786:42:0"
                                        }
                                      ],
                                      "id": 997,
                                      "name": "FunctionCall",
                                      "src": "12786:44:0"
                                    }
                                  ],
                                  "id": 998,
                                  "name": "Return",
                                  "src": "12779:51:0"
                                }
                              ],
                              "id": 999,
                              "name": "Block",
                              "src": "12765:76:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "functionReturnParameters": 991
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 141,
                                        "type": "uint256",
                                        "value": "_totalSupply"
                                      },
                                      "id": 1000,
                                      "name": "Identifier",
                                      "src": "12868:12:0"
                                    }
                                  ],
                                  "id": 1001,
                                  "name": "Return",
                                  "src": "12861:19:0"
                                }
                              ],
                              "id": 1002,
                              "name": "Block",
                              "src": "12847:44:0"
                            }
                          ],
                          "id": 1003,
                          "name": "IfStatement",
                          "src": "12749:142:0"
                        }
                      ],
                      "id": 1004,
                      "name": "Block",
                      "src": "12739:158:0"
                    }
                  ],
                  "id": 1005,
                  "name": "FunctionDefinition",
                  "src": "12685:212:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "name": "issue",
                    "payable": false,
                    "scope": 1142,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "amount",
                            "scope": 1047,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1006,
                              "name": "ElementaryTypeName",
                              "src": "13070:4:0"
                            }
                          ],
                          "id": 1007,
                          "name": "VariableDeclaration",
                          "src": "13070:11:0"
                        }
                      ],
                      "id": 1008,
                      "name": "ParameterList",
                      "src": "13069:13:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 1011,
                      "name": "ParameterList",
                      "src": "13100:0:0"
                    },
                    {
                      "attributes": {
                        "arguments": [
                          null
                        ]
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 119,
                            "type": "modifier ()",
                            "value": "onlyOwner"
                          },
                          "id": 1009,
                          "name": "Identifier",
                          "src": "13090:9:0"
                        }
                      ],
                      "id": 1010,
                      "name": "ModifierInvocation",
                      "src": "13090:9:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1163,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 1012,
                                  "name": "Identifier",
                                  "src": "13110:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": ">",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "+",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 141,
                                            "type": "uint256",
                                            "value": "_totalSupply"
                                          },
                                          "id": 1013,
                                          "name": "Identifier",
                                          "src": "13118:12:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1007,
                                            "type": "uint256",
                                            "value": "amount"
                                          },
                                          "id": 1014,
                                          "name": "Identifier",
                                          "src": "13133:6:0"
                                        }
                                      ],
                                      "id": 1015,
                                      "name": "BinaryOperation",
                                      "src": "13118:21:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 141,
                                        "type": "uint256",
                                        "value": "_totalSupply"
                                      },
                                      "id": 1016,
                                      "name": "Identifier",
                                      "src": "13142:12:0"
                                    }
                                  ],
                                  "id": 1017,
                                  "name": "BinaryOperation",
                                  "src": "13118:36:0"
                                }
                              ],
                              "id": 1018,
                              "name": "FunctionCall",
                              "src": "13110:45:0"
                            }
                          ],
                          "id": 1019,
                          "name": "ExpressionStatement",
                          "src": "13110:45:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1163,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 1020,
                                  "name": "Identifier",
                                  "src": "13165:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": ">",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "+",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 216,
                                                "type": "mapping(address => uint256)",
                                                "value": "balances"
                                              },
                                              "id": 1021,
                                              "name": "Identifier",
                                              "src": "13173:8:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 99,
                                                "type": "address",
                                                "value": "owner"
                                              },
                                              "id": 1022,
                                              "name": "Identifier",
                                              "src": "13182:5:0"
                                            }
                                          ],
                                          "id": 1023,
                                          "name": "IndexAccess",
                                          "src": "13173:15:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1007,
                                            "type": "uint256",
                                            "value": "amount"
                                          },
                                          "id": 1024,
                                          "name": "Identifier",
                                          "src": "13191:6:0"
                                        }
                                      ],
                                      "id": 1025,
                                      "name": "BinaryOperation",
                                      "src": "13173:24:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 216,
                                            "type": "mapping(address => uint256)",
                                            "value": "balances"
                                          },
                                          "id": 1026,
                                          "name": "Identifier",
                                          "src": "13200:8:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 99,
                                            "type": "address",
                                            "value": "owner"
                                          },
                                          "id": 1027,
                                          "name": "Identifier",
                                          "src": "13209:5:0"
                                        }
                                      ],
                                      "id": 1028,
                                      "name": "IndexAccess",
                                      "src": "13200:15:0"
                                    }
                                  ],
                                  "id": 1029,
                                  "name": "BinaryOperation",
                                  "src": "13173:42:0"
                                }
                              ],
                              "id": 1030,
                              "name": "FunctionCall",
                              "src": "13165:51:0"
                            }
                          ],
                          "id": 1031,
                          "name": "ExpressionStatement",
                          "src": "13165:51:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "+=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 216,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 1032,
                                      "name": "Identifier",
                                      "src": "13227:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 99,
                                        "type": "address",
                                        "value": "owner"
                                      },
                                      "id": 1033,
                                      "name": "Identifier",
                                      "src": "13236:5:0"
                                    }
                                  ],
                                  "id": 1034,
                                  "name": "IndexAccess",
                                  "src": "13227:15:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1007,
                                    "type": "uint256",
                                    "value": "amount"
                                  },
                                  "id": 1035,
                                  "name": "Identifier",
                                  "src": "13246:6:0"
                                }
                              ],
                              "id": 1036,
                              "name": "Assignment",
                              "src": "13227:25:0"
                            }
                          ],
                          "id": 1037,
                          "name": "ExpressionStatement",
                          "src": "13227:25:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "+=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 141,
                                    "type": "uint256",
                                    "value": "_totalSupply"
                                  },
                                  "id": 1038,
                                  "name": "Identifier",
                                  "src": "13262:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1007,
                                    "type": "uint256",
                                    "value": "amount"
                                  },
                                  "id": 1039,
                                  "name": "Identifier",
                                  "src": "13278:6:0"
                                }
                              ],
                              "id": 1040,
                              "name": "Assignment",
                              "src": "13262:22:0"
                            }
                          ],
                          "id": 1041,
                          "name": "ExpressionStatement",
                          "src": "13262:22:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1127,
                                    "type": "function (uint256)",
                                    "value": "Issue"
                                  },
                                  "id": 1042,
                                  "name": "Identifier",
                                  "src": "13294:5:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1007,
                                    "type": "uint256",
                                    "value": "amount"
                                  },
                                  "id": 1043,
                                  "name": "Identifier",
                                  "src": "13300:6:0"
                                }
                              ],
                              "id": 1044,
                              "name": "FunctionCall",
                              "src": "13294:13:0"
                            }
                          ],
                          "id": 1045,
                          "name": "ExpressionStatement",
                          "src": "13294:13:0"
                        }
                      ],
                      "id": 1046,
                      "name": "Block",
                      "src": "13100:214:0"
                    }
                  ],
                  "id": 1047,
                  "name": "FunctionDefinition",
                  "src": "13055:259:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "name": "redeem",
                    "payable": false,
                    "scope": 1142,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "amount",
                            "scope": 1083,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1048,
                              "name": "ElementaryTypeName",
                              "src": "13554:4:0"
                            }
                          ],
                          "id": 1049,
                          "name": "VariableDeclaration",
                          "src": "13554:11:0"
                        }
                      ],
                      "id": 1050,
                      "name": "ParameterList",
                      "src": "13553:13:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 1053,
                      "name": "ParameterList",
                      "src": "13584:0:0"
                    },
                    {
                      "attributes": {
                        "arguments": [
                          null
                        ]
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 119,
                            "type": "modifier ()",
                            "value": "onlyOwner"
                          },
                          "id": 1051,
                          "name": "Identifier",
                          "src": "13574:9:0"
                        }
                      ],
                      "id": 1052,
                      "name": "ModifierInvocation",
                      "src": "13574:9:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1163,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 1054,
                                  "name": "Identifier",
                                  "src": "13594:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": ">=",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 141,
                                        "type": "uint256",
                                        "value": "_totalSupply"
                                      },
                                      "id": 1055,
                                      "name": "Identifier",
                                      "src": "13602:12:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1049,
                                        "type": "uint256",
                                        "value": "amount"
                                      },
                                      "id": 1056,
                                      "name": "Identifier",
                                      "src": "13618:6:0"
                                    }
                                  ],
                                  "id": 1057,
                                  "name": "BinaryOperation",
                                  "src": "13602:22:0"
                                }
                              ],
                              "id": 1058,
                              "name": "FunctionCall",
                              "src": "13594:31:0"
                            }
                          ],
                          "id": 1059,
                          "name": "ExpressionStatement",
                          "src": "13594:31:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1163,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 1060,
                                  "name": "Identifier",
                                  "src": "13635:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": ">=",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 216,
                                            "type": "mapping(address => uint256)",
                                            "value": "balances"
                                          },
                                          "id": 1061,
                                          "name": "Identifier",
                                          "src": "13643:8:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 99,
                                            "type": "address",
                                            "value": "owner"
                                          },
                                          "id": 1062,
                                          "name": "Identifier",
                                          "src": "13652:5:0"
                                        }
                                      ],
                                      "id": 1063,
                                      "name": "IndexAccess",
                                      "src": "13643:15:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1049,
                                        "type": "uint256",
                                        "value": "amount"
                                      },
                                      "id": 1064,
                                      "name": "Identifier",
                                      "src": "13662:6:0"
                                    }
                                  ],
                                  "id": 1065,
                                  "name": "BinaryOperation",
                                  "src": "13643:25:0"
                                }
                              ],
                              "id": 1066,
                              "name": "FunctionCall",
                              "src": "13635:34:0"
                            }
                          ],
                          "id": 1067,
                          "name": "ExpressionStatement",
                          "src": "13635:34:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "-=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 141,
                                    "type": "uint256",
                                    "value": "_totalSupply"
                                  },
                                  "id": 1068,
                                  "name": "Identifier",
                                  "src": "13680:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1049,
                                    "type": "uint256",
                                    "value": "amount"
                                  },
                                  "id": 1069,
                                  "name": "Identifier",
                                  "src": "13696:6:0"
                                }
                              ],
                              "id": 1070,
                              "name": "Assignment",
                              "src": "13680:22:0"
                            }
                          ],
                          "id": 1071,
                          "name": "ExpressionStatement",
                          "src": "13680:22:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "-=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 216,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 1072,
                                      "name": "Identifier",
                                      "src": "13712:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 99,
                                        "type": "address",
                                        "value": "owner"
                                      },
                                      "id": 1073,
                                      "name": "Identifier",
                                      "src": "13721:5:0"
                                    }
                                  ],
                                  "id": 1074,
                                  "name": "IndexAccess",
                                  "src": "13712:15:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1049,
                                    "type": "uint256",
                                    "value": "amount"
                                  },
                                  "id": 1075,
                                  "name": "Identifier",
                                  "src": "13731:6:0"
                                }
                              ],
                              "id": 1076,
                              "name": "Assignment",
                              "src": "13712:25:0"
                            }
                          ],
                          "id": 1077,
                          "name": "ExpressionStatement",
                          "src": "13712:25:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1131,
                                    "type": "function (uint256)",
                                    "value": "Redeem"
                                  },
                                  "id": 1078,
                                  "name": "Identifier",
                                  "src": "13747:6:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1049,
                                    "type": "uint256",
                                    "value": "amount"
                                  },
                                  "id": 1079,
                                  "name": "Identifier",
                                  "src": "13754:6:0"
                                }
                              ],
                              "id": 1080,
                              "name": "FunctionCall",
                              "src": "13747:14:0"
                            }
                          ],
                          "id": 1081,
                          "name": "ExpressionStatement",
                          "src": "13747:14:0"
                        }
                      ],
                      "id": 1082,
                      "name": "Block",
                      "src": "13584:184:0"
                    }
                  ],
                  "id": 1083,
                  "name": "FunctionDefinition",
                  "src": "13538:230:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "name": "setParams",
                    "payable": false,
                    "scope": 1142,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "newBasisPoints",
                            "scope": 1123,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1084,
                              "name": "ElementaryTypeName",
                              "src": "13793:4:0"
                            }
                          ],
                          "id": 1085,
                          "name": "VariableDeclaration",
                          "src": "13793:19:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "newMaxFee",
                            "scope": 1123,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1086,
                              "name": "ElementaryTypeName",
                              "src": "13814:4:0"
                            }
                          ],
                          "id": 1087,
                          "name": "VariableDeclaration",
                          "src": "13814:14:0"
                        }
                      ],
                      "id": 1088,
                      "name": "ParameterList",
                      "src": "13792:37:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 1091,
                      "name": "ParameterList",
                      "src": "13847:0:0"
                    },
                    {
                      "attributes": {
                        "arguments": [
                          null
                        ]
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 119,
                            "type": "modifier ()",
                            "value": "onlyOwner"
                          },
                          "id": 1089,
                          "name": "Identifier",
                          "src": "13837:9:0"
                        }
                      ],
                      "id": 1090,
                      "name": "ModifierInvocation",
                      "src": "13837:9:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1163,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 1092,
                                  "name": "Identifier",
                                  "src": "13945:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "<",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1085,
                                        "type": "uint256",
                                        "value": "newBasisPoints"
                                      },
                                      "id": 1093,
                                      "name": "Identifier",
                                      "src": "13953:14:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "hexvalue": "3230",
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "subdenomination": null,
                                        "token": "number",
                                        "type": "int_const 20",
                                        "value": "20"
                                      },
                                      "id": 1094,
                                      "name": "Literal",
                                      "src": "13970:2:0"
                                    }
                                  ],
                                  "id": 1095,
                                  "name": "BinaryOperation",
                                  "src": "13953:19:0"
                                }
                              ],
                              "id": 1096,
                              "name": "FunctionCall",
                              "src": "13945:28:0"
                            }
                          ],
                          "id": 1097,
                          "name": "ExpressionStatement",
                          "src": "13945:28:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1163,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 1098,
                                  "name": "Identifier",
                                  "src": "13983:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "<",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1087,
                                        "type": "uint256",
                                        "value": "newMaxFee"
                                      },
                                      "id": 1099,
                                      "name": "Identifier",
                                      "src": "13991:9:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "hexvalue": "3530",
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "subdenomination": null,
                                        "token": "number",
                                        "type": "int_const 50",
                                        "value": "50"
                                      },
                                      "id": 1100,
                                      "name": "Literal",
                                      "src": "14003:2:0"
                                    }
                                  ],
                                  "id": 1101,
                                  "name": "BinaryOperation",
                                  "src": "13991:14:0"
                                }
                              ],
                              "id": 1102,
                              "name": "FunctionCall",
                              "src": "13983:23:0"
                            }
                          ],
                          "id": 1103,
                          "name": "ExpressionStatement",
                          "src": "13983:23:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 219,
                                    "type": "uint256",
                                    "value": "basisPointsRate"
                                  },
                                  "id": 1104,
                                  "name": "Identifier",
                                  "src": "14017:15:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1085,
                                    "type": "uint256",
                                    "value": "newBasisPoints"
                                  },
                                  "id": 1105,
                                  "name": "Identifier",
                                  "src": "14035:14:0"
                                }
                              ],
                              "id": 1106,
                              "name": "Assignment",
                              "src": "14017:32:0"
                            }
                          ],
                          "id": 1107,
                          "name": "ExpressionStatement",
                          "src": "14017:32:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 222,
                                    "type": "uint256",
                                    "value": "maximumFee"
                                  },
                                  "id": 1108,
                                  "name": "Identifier",
                                  "src": "14059:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "mul",
                                        "referencedDeclaration": 34,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1087,
                                            "type": "uint256",
                                            "value": "newMaxFee"
                                          },
                                          "id": 1109,
                                          "name": "Identifier",
                                          "src": "14072:9:0"
                                        }
                                      ],
                                      "id": 1110,
                                      "name": "MemberAccess",
                                      "src": "14072:13:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "**",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "hexvalue": "3130",
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "subdenomination": null,
                                            "token": "number",
                                            "type": "int_const 10",
                                            "value": "10"
                                          },
                                          "id": 1111,
                                          "name": "Literal",
                                          "src": "14086:2:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 761,
                                            "type": "uint256",
                                            "value": "decimals"
                                          },
                                          "id": 1112,
                                          "name": "Identifier",
                                          "src": "14090:8:0"
                                        }
                                      ],
                                      "id": 1113,
                                      "name": "BinaryOperation",
                                      "src": "14086:12:0"
                                    }
                                  ],
                                  "id": 1114,
                                  "name": "FunctionCall",
                                  "src": "14072:27:0"
                                }
                              ],
                              "id": 1115,
                              "name": "Assignment",
                              "src": "14059:40:0"
                            }
                          ],
                          "id": 1116,
                          "name": "ExpressionStatement",
                          "src": "14059:40:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1141,
                                    "type": "function (uint256,uint256)",
                                    "value": "Params"
                                  },
                                  "id": 1117,
                                  "name": "Identifier",
                                  "src": "14110:6:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 219,
                                    "type": "uint256",
                                    "value": "basisPointsRate"
                                  },
                                  "id": 1118,
                                  "name": "Identifier",
                                  "src": "14117:15:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 222,
                                    "type": "uint256",
                                    "value": "maximumFee"
                                  },
                                  "id": 1119,
                                  "name": "Identifier",
                                  "src": "14134:10:0"
                                }
                              ],
                              "id": 1120,
                              "name": "FunctionCall",
                              "src": "14110:35:0"
                            }
                          ],
                          "id": 1121,
                          "name": "ExpressionStatement",
                          "src": "14110:35:0"
                        }
                      ],
                      "id": 1122,
                      "name": "Block",
                      "src": "13847:305:0"
                    }
                  ],
                  "id": 1123,
                  "name": "FunctionDefinition",
                  "src": "13774:378:0"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "Issue"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "amount",
                            "scope": 1127,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1124,
                              "name": "ElementaryTypeName",
                              "src": "14210:4:0"
                            }
                          ],
                          "id": 1125,
                          "name": "VariableDeclaration",
                          "src": "14210:11:0"
                        }
                      ],
                      "id": 1126,
                      "name": "ParameterList",
                      "src": "14209:13:0"
                    }
                  ],
                  "id": 1127,
                  "name": "EventDefinition",
                  "src": "14198:25:0"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "Redeem"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "amount",
                            "scope": 1131,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1128,
                              "name": "ElementaryTypeName",
                              "src": "14281:4:0"
                            }
                          ],
                          "id": 1129,
                          "name": "VariableDeclaration",
                          "src": "14281:11:0"
                        }
                      ],
                      "id": 1130,
                      "name": "ParameterList",
                      "src": "14280:13:0"
                    }
                  ],
                  "id": 1131,
                  "name": "EventDefinition",
                  "src": "14268:26:0"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "Deprecate"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "newAddress",
                            "scope": 1135,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 1132,
                              "name": "ElementaryTypeName",
                              "src": "14358:7:0"
                            }
                          ],
                          "id": 1133,
                          "name": "VariableDeclaration",
                          "src": "14358:18:0"
                        }
                      ],
                      "id": 1134,
                      "name": "ParameterList",
                      "src": "14357:20:0"
                    }
                  ],
                  "id": 1135,
                  "name": "EventDefinition",
                  "src": "14342:36:0"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "Params"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "feeBasisPoints",
                            "scope": 1141,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1136,
                              "name": "ElementaryTypeName",
                              "src": "14438:4:0"
                            }
                          ],
                          "id": 1137,
                          "name": "VariableDeclaration",
                          "src": "14438:19:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "maxFee",
                            "scope": 1141,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1138,
                              "name": "ElementaryTypeName",
                              "src": "14459:4:0"
                            }
                          ],
                          "id": 1139,
                          "name": "VariableDeclaration",
                          "src": "14459:11:0"
                        }
                      ],
                      "id": 1140,
                      "name": "ParameterList",
                      "src": "14437:34:0"
                    }
                  ],
                  "id": 1141,
                  "name": "EventDefinition",
                  "src": "14425:47:0"
                }
              ],
              "id": 1142,
              "name": "ContractDefinition",
              "src": "9693:4781:0"
            }
          ],
          "id": 1143,
          "name": "SourceUnit",
          "src": "33:14441:0"
        }
      }
    }
  }
}
